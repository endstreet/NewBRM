
--
-- ACTIVEVIEWOVERRIDESSEQUENCE
--
 CREATE SEQUENCE "ACTIVEVIEWOVERRIDESSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- AGENTSEQUENCE
--
 CREATE SEQUENCE "AGENTSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- AUDITCOLLECTIONSITEMSSEQ
--
 CREATE SEQUENCE "AUDITCOLLECTIONSITEMSSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- CUST_DISTRICTSEQ
--
 CREATE SEQUENCE "CUST_DISTRICTSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- DAUDITNEWSEQUENCE
--
 CREATE SEQUENCE "DAUDITNEWSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- DDOCUMENTCLASSSEQUENCE
--
 CREATE SEQUENCE "DDOCUMENTCLASSSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- DFAVORITESTABSSEQUENCE
--
 CREATE SEQUENCE "DFAVORITESTABSSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- DPSINSRTPROPSSEQ
--
 CREATE SEQUENCE "DPSINSRTPROPSSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- DPSTASKSSEQUENCE
--
 CREATE SEQUENCE "DPSTASKSSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- DSOCIALFEEDEVENTSSEQ
--
 CREATE SEQUENCE "DSOCIALFEEDEVENTSSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- DSOCIALFOLLOWERSSEQ
--
 CREATE SEQUENCE "DSOCIALFOLLOWERSSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- DSTAGINGIMPORTSEQUENCE
--
 CREATE SEQUENCE "DSTAGINGIMPORTSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- DSUGGESTWORDSPENDINGSEQUENCE
--
 CREATE SEQUENCE "DSUGGESTWORDSPENDINGSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- DSUGGESTWORDSSEQUENCE
--
 CREATE SEQUENCE "DSUGGESTWORDSSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- DTREEASPECTSNOTIFYSEQUENCE
--
 CREATE SEQUENCE "DTREEASPECTSNOTIFYSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- DTREECOREEXTSOURCESEQUENCE
--
 CREATE SEQUENCE "DTREECOREEXTSOURCESEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- DTREENOTIFYSEQUENCE
--
 CREATE SEQUENCE "DTREENOTIFYSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- ELINKMESSAGESEQUENCE
--
 CREATE SEQUENCE "ELINKMESSAGESEQUENCE" MINVALUE 1 MAXVALUE 1000000 INCREMENT BY 1 CACHE 20 NOORDER CYCLE;
--
-- FILECACHESEQUENCE
--
 CREATE SEQUENCE "FILECACHESEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- ISEQ$$_135771
--
 CREATE SEQUENCE "ISEQ$$_135771" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- ISEQ$$_41496
--
 CREATE SEQUENCE "ISEQ$$_41496" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- ISEQ$$_41782
--
 CREATE SEQUENCE "ISEQ$$_41782" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- ISEQ$$_41789
--
 CREATE SEQUENCE "ISEQ$$_41789" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- ISEQ$$_41795
--
 CREATE SEQUENCE "ISEQ$$_41795" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- ISEQ$$_43701
--
 CREATE SEQUENCE "ISEQ$$_43701" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- KUAFIDENTITYSEQUENCE
--
 CREATE SEQUENCE "KUAFIDENTITYSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- KUAFIDENTITYTYPESEQUENCE
--
 CREATE SEQUENCE "KUAFIDENTITYTYPESEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- LLEVENTSSEQUENCE
--
 CREATE SEQUENCE "LLEVENTSSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- NOTIFYSEQUENCE
--
 CREATE SEQUENCE "NOTIFYSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- OI_STATUS_SEQ
--
 CREATE SEQUENCE "OI_STATUS_SEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- PROVIDERRETRYSEQUENCE
--
 CREATE SEQUENCE "PROVIDERRETRYSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- RECD_HOTSEQ
--
 CREATE SEQUENCE "RECD_HOTSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- RECD_OPERATIONTRACKINGSEQ
--
 CREATE SEQUENCE "RECD_OPERATIONTRACKINGSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- RENDITIONFOLDERSSEQ
--
 CREATE SEQUENCE "RENDITIONFOLDERSSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- RENDITIONMIMETYPERULESSEQ
--
 CREATE SEQUENCE "RENDITIONMIMETYPERULESSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- RENDITIONNODERULESSEQ
--
 CREATE SEQUENCE "RENDITIONNODERULESSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- RENDITIONQUEUESEQ
--
 CREATE SEQUENCE "RENDITIONQUEUESEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- RESULTIDSEQUENCE
--
 CREATE SEQUENCE "RESULTIDSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- RETENTIONUPDATEFAILEDSEQNID
--
 CREATE SEQUENCE "RETENTIONUPDATEFAILEDSEQNID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- RETENTIONUPDATELOGSEQNID
--
 CREATE SEQUENCE "RETENTIONUPDATELOGSEQNID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- RETENTIONUPDATEORDERSEQNID
--
 CREATE SEQUENCE "RETENTIONUPDATEORDERSEQNID" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 1000 NOORDER NOCYCLE;
--
-- RM_HOLDQUERYHISTORYSEQUENCE
--
 CREATE SEQUENCE "RM_HOLDQUERYHISTORYSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- RMSEC_DEFINEDRULESEQUENCE
--
 CREATE SEQUENCE "RMSEC_DEFINEDRULESEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 ORDER NOCYCLE;
--
-- SEARCHSTATSSEQUENCE
--
 CREATE SEQUENCE "SEARCHSTATSSEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- SEQ_CUST_REGION_REGNUM
--
 CREATE SEQUENCE "SEQ_CUST_REGION_REGNUM" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_ECA
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_ECA" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_FST
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_FST" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_GAU
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_GAU" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_KZN
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_KZN" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_LIM
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_LIM" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_MPU
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_MPU" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_NCA
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_NCA" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_NWP
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_NWP" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_ALT_BOX_NO_WCA
--
 CREATE SEQUENCE "SEQ_DC_ALT_BOX_NO_WCA" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_BATCH
--
 CREATE SEQUENCE "SEQ_DC_BATCH" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_BOXPICKED
--
 CREATE SEQUENCE "SEQ_DC_BOXPICKED" MINVALUE 1 MAXVALUE 9999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_FILE
--
 CREATE SEQUENCE "SEQ_DC_FILE" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_FILE_REQUEST
--
 CREATE SEQUENCE "SEQ_DC_FILE_REQUEST" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- SEQ_DC_PICKLIST
--
 CREATE SEQUENCE "SEQ_DC_PICKLIST" MINVALUE 1 MAXVALUE 9999999999999999 INCREMENT BY 1 NOCACHE NOORDER NOCYCLE;
--
-- WORKERQUEUESEQUENCE
--
 CREATE SEQUENCE "WORKERQUEUESEQUENCE" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 10000 NOORDER NOCYCLE;
--
-- WWORKAUDITSEQ
--
 CREATE SEQUENCE "WWORKAUDITSEQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20 NOORDER NOCYCLE;
--
-- DOW_REASONS
--
 CREATE OR REPLACE SYNONYM "DOW_REASONS" FOR "SASSA"."DOW_REASONS";
--
-- DOW_TABLES
--
 CREATE OR REPLACE SYNONYM "DOW_TABLES" FOR "SASSA"."DOW_TABLES";
--
-- DOW_TABLES_DEAC
--
 CREATE OR REPLACE SYNONYM "DOW_TABLES_DEAC" FOR "SASSA"."DOW_TABLES_DEAC";
--
-- LOG_SOCPEN_PERSONAL_GRANTS
--
 CREATE OR REPLACE SYNONYM "LOG_SOCPEN_PERSONAL_GRANTS" FOR "SASSA"."LOG_SOCPEN_PERSONAL_GRANTS";
--
-- LOG_SOCPEN_SRD_BEN
--
 CREATE OR REPLACE SYNONYM "LOG_SOCPEN_SRD_BEN" FOR "SASSA"."LOG_SOCPEN_SRD_BEN";
--
-- LOG_SOCPEN_SRD_DEPENDANTS
--
 CREATE OR REPLACE SYNONYM "LOG_SOCPEN_SRD_DEPENDANTS" FOR "SASSA"."LOG_SOCPEN_SRD_DEPENDANTS";
--
-- LOG_SOCPEN_SRD_TYPE
--
 CREATE OR REPLACE SYNONYM "LOG_SOCPEN_SRD_TYPE" FOR "SASSA"."LOG_SOCPEN_SRD_TYPE";
--
-- SOCPEN_ADRES
--
 CREATE OR REPLACE SYNONYM "SOCPEN_ADRES" FOR "SASSA"."SOCPEN_ADRES";
--
-- SOCPEN_BANK_DETAILS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_BANK_DETAILS" FOR "SASSA"."SOCPEN_BANK_DETAILS";
--
-- SOCPEN_BRANCH_ADDR
--
 CREATE OR REPLACE SYNONYM "SOCPEN_BRANCH_ADDR" FOR "SASSA"."SOCPEN_BRANCH_ADDR";
--
-- SOCPEN_CHILDREN_OLD_ID
--
 CREATE OR REPLACE SYNONYM "SOCPEN_CHILDREN_OLD_ID" FOR "SASSA"."SOCPEN_CHILDREN_OLD_ID";
--
-- SOCPEN_DOC_REL_IN
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOC_REL_IN" FOR "SASSA"."SOCPEN_DOC_REL_IN";
--
-- SOCPEN_DOCUMENTS_IN
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOCUMENTS_IN" FOR "SASSA"."SOCPEN_DOCUMENTS_IN";
--
-- SOCPEN_DOCUMENTS_OUT
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOCUMENTS_OUT" FOR "SASSA"."SOCPEN_DOCUMENTS_OUT";
--
-- SOCPEN_DOW_APPLICATIONS_CHEC01
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOW_APPLICATIONS_CHEC01" FOR "SASSA"."SOCPEN_DOW_APPLICATIONS_CHEC01";
--
-- SOCPEN_DOW_DOCUMENTS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOW_DOCUMENTS" FOR "SASSA"."SOCPEN_DOW_DOCUMENTS";
--
-- SOCPEN_DOW_REASONS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOW_REASONS" FOR "SASSA"."SOCPEN_DOW_REASONS";
--
-- SOCPEN_DOW_SAPO_CODES
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOW_SAPO_CODES" FOR "SASSA"."SOCPEN_DOW_SAPO_CODES";
--
-- SOCPEN_DOW_TABLES
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOW_TABLES" FOR "SASSA"."SOCPEN_DOW_TABLES";
--
-- SOCPEN_DOW_TABLES_DEAC
--
 CREATE OR REPLACE SYNONYM "SOCPEN_DOW_TABLES_DEAC" FOR "SASSA"."SOCPEN_DOW_TABLES_DEAC";
--
-- SOCPEN_MEANS_1
--
 CREATE OR REPLACE SYNONYM "SOCPEN_MEANS_1" FOR "SASSA"."SOCPEN_MEANS_1";
--
-- SOCPEN_OLD_ID
--
 CREATE OR REPLACE SYNONYM "SOCPEN_OLD_ID" FOR "SASSA"."SOCPEN_OLD_ID";
--
-- SOCPEN_P12_BRANCHES
--
 CREATE OR REPLACE SYNONYM "SOCPEN_P12_BRANCHES" FOR "SASSA"."SOCPEN_P12_BRANCHES";
--
-- SOCPEN_P12_CHILDREN
--
 CREATE OR REPLACE SYNONYM "SOCPEN_P12_CHILDREN" FOR "SASSA"."SOCPEN_P12_CHILDREN";
--
-- SOCPEN_P12_PAYPOINTS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_P12_PAYPOINTS" FOR "SASSA"."SOCPEN_P12_PAYPOINTS";
--
-- SOCPEN_PAYPOINT_ADDRESS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_PAYPOINT_ADDRESS" FOR "SASSA"."SOCPEN_PAYPOINT_ADDRESS";
--
-- SOCPEN_PERSONAL
--
 CREATE OR REPLACE SYNONYM "SOCPEN_PERSONAL" FOR "SASSA"."SOCPEN_PERSONAL";
--
-- SOCPEN_PERSONAL_BRM_GRANT
--
 CREATE OR REPLACE SYNONYM "SOCPEN_PERSONAL_BRM_GRANT" FOR "SASSA"."SOCPEN_PERSONAL_BRM_GRANT";
--
-- SOCPEN_PERSONAL_GRANTS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_PERSONAL_GRANTS" FOR "SASSA"."SOCPEN_PERSONAL_GRANTS";
--
-- SOCPEN_POA
--
 CREATE OR REPLACE SYNONYM "SOCPEN_POA" FOR "SASSA"."SOCPEN_POA";
--
-- SOCPEN_REVIEW
--
 CREATE OR REPLACE SYNONYM "SOCPEN_REVIEW" FOR "SASSA"."SOCPEN_REVIEW";
--
-- SOCPEN_SRD_BEN
--
 CREATE OR REPLACE SYNONYM "SOCPEN_SRD_BEN" FOR "SASSA"."SOCPEN_SRD_BEN";
--
-- SOCPEN_SRD_DEPENDANTS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_SRD_DEPENDANTS" FOR "SASSA"."SOCPEN_SRD_DEPENDANTS";
--
-- SOCPEN_SRD_GRANTS
--
 CREATE OR REPLACE SYNONYM "SOCPEN_SRD_GRANTS" FOR "SASSA"."SOCPEN_SRD_GRANTS";
--
-- SOCPEN_SRD_OLD_ID
--
 CREATE OR REPLACE SYNONYM "SOCPEN_SRD_OLD_ID" FOR "SASSA"."SOCPEN_SRD_OLD_ID";
--
-- SOCPEN_SRD_TYPE
--
 CREATE OR REPLACE SYNONYM "SOCPEN_SRD_TYPE" FOR "SASSA"."SOCPEN_SRD_TYPE";
--
-- ACCESSION
--
  CREATE TABLE "ACCESSION" 
   (	"ACCESSION" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"ACCESSION_DESC_E" VARCHAR2(128 CHAR),
	"ACCESSION_DESC_F" VARCHAR2(128 CHAR)
   );
--
-- ACTIONCODE
--
  CREATE TABLE "ACTIONCODE" 
   (	"OBJECT" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"ACTIONCODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"ACTIONCODE_DESC_E" VARCHAR2(128 CHAR),
	"ACTIONCODE_DESC_F" VARCHAR2(128 CHAR)
   );
--
-- ACTIVEVIEWOVERRIDES
--
  CREATE TABLE "ACTIVEVIEWOVERRIDES" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"ACTIVEVIEWTYPE" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"SEQ" NUMBER(19,0) NOT NULL ENABLE,
	"AVID" NUMBER(19,0) NOT NULL ENABLE,
	"EXPRESSION" CLOB,
	"PRIORITY" NUMBER(19,0) NOT NULL ENABLE,
	"CASCADEVALUE" NUMBER(19,0),
	"OVERRIDEINFO" VARCHAR2(64 CHAR),
	"OVERRIDECLASS" NUMBER(3,0) DEFAULT 0 NOT NULL ENABLE,
	"PMANCOMPATIBLE" NUMBER(3,0) DEFAULT 0 NOT NULL ENABLE,
	"RULEDATA" CLOB
   );
--
-- ACTIVEVIEWPRESELECT
--
  CREATE TABLE "ACTIVEVIEWPRESELECT" 
   (	"SEQ" NUMBER(19,0) NOT NULL ENABLE,
	"APPEARANCEID" VARCHAR2(32 CHAR),
	"AVSELECTOR" VARCHAR2(32 CHAR),
	"AVDATA" CLOB
   );
--
-- ACTIVEVIEWSTATS
--
  CREATE TABLE "ACTIVEVIEWSTATS" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"USERSTATUS" NUMBER(19,0),
	"DATEFIRSTACTION" DATE,
	"DATELASTACTION" DATE,
	"ACTION" VARCHAR2(64 CHAR),
	"NODEID" NUMBER(19,0),
	"STATS" CLOB,
	CONSTRAINT "ACTIVEVIEWSTATS_PRIMARY" PRIMARY KEY ("USERID") ENABLE
   );
--
-- AGENTCONFIG
--
  CREATE TABLE "AGENTCONFIG" 
   (	"CONFIGID" NUMBER(19,0),
	"ENABLED" NUMBER(3,0),
	"LASTTIME" DATE,
	"URL" VARCHAR2(255 CHAR),
	"SMTPSERVER" VARCHAR2(255 CHAR),
	"SMTPPORT" NUMBER(10,0),
	"SMTPHELOHOSTNAME" VARCHAR2(64 CHAR),
	"MAPIPROFILE" VARCHAR2(64 CHAR),
	"MAPIPASSWORD" VARCHAR2(32 CHAR),
	"DFTREPORTID" NUMBER(19,0),
	"DFTREPORTOPTIONS" NUMBER(10,0),
	"DFTTRANSPORTID" NUMBER(19,0),
	"DFTMSGTYPE" NUMBER(19,0),
	"DFTMSGSUBJECT" VARCHAR2(255 CHAR),
	"DFTMSGHTMLFILENAME" VARCHAR2(64 CHAR),
	"DFTMSGDATABASENAME" VARCHAR2(64 CHAR),
	"DFTMSGFROMADDRESS" VARCHAR2(255 CHAR),
	"DFTMSGREPLYTO" VARCHAR2(255 CHAR),
	"DFTSCHED1NAME" VARCHAR2(64 CHAR),
	"DFTSCHED1MONTHMASK" NUMBER(10,0),
	"DFTSCHED1DAYMASK" NUMBER(10,0),
	"DFTSCHED1HOURMASK" NUMBER(10,0),
	"DFTSCHED1MINUTEMASK" NUMBER(10,0),
	"DFTSCHED2NAME" VARCHAR2(64 CHAR),
	"DFTSCHED2MONTHMASK" NUMBER(10,0),
	"DFTSCHED2DAYMASK" NUMBER(10,0),
	"DFTSCHED2HOURMASK" NUMBER(10,0),
	"DFTSCHED2MINUTEMASK" NUMBER(10,0),
	"DFTSCHED3NAME" VARCHAR2(64 CHAR),
	"DFTSCHED3MONTHMASK" NUMBER(10,0),
	"DFTSCHED3DAYMASK" NUMBER(10,0),
	"DFTSCHED3HOURMASK" NUMBER(10,0),
	"DFTSCHED3MINUTEMASK" NUMBER(10,0),
	"ONERRTRANSPORTID" NUMBER(19,0),
	"ONERRSUBJECT" VARCHAR2(64 CHAR),
	"ONERRADDRESS" VARCHAR2(255 CHAR),
	"TESTING" NUMBER(10,0),
	"SQLTRACING" NUMBER(10,0),
	"SMTPSSL" NUMBER(3,0) DEFAULT 0 NOT NULL ENABLE,
	"SMTPAUTH" NUMBER(3,0) DEFAULT 0 NOT NULL ENABLE,
	"SMTPUSERNAME" VARCHAR2(255 CHAR),
	"SMTPPASSWORD" VARCHAR2(255 CHAR),
	"SMTPTIMEOUT" NUMBER(19,0) DEFAULT 0 NOT NULL ENABLE
   );
--
-- AGENTSCHEDULE
--
  CREATE TABLE "AGENTSCHEDULE" 
   (	"SCHEDID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"AGENTID" NUMBER(10,0) NOT NULL ENABLE,
	"ENABLED" NUMBER(10,0),
	"MONTHMASK" NUMBER(10,0),
	"DAYMASK" NUMBER(10,0),
	"HOURMASK" NUMBER(10,0),
	"MINUTEMASK" NUMBER(10,0),
	"TIMEZONEOFFSET" NUMBER(10,0),
	"LASTTIME" DATE,
	"NEXTTIME" DATE NOT NULL ENABLE,
	"PARAMINT1" NUMBER(10,0),
	"PARAMINT2" NUMBER(10,0),
	"PARAMSTR3" VARCHAR2(255 CHAR),
	"PARAMSTR4" VARCHAR2(255 CHAR),
	"REPORTID" NUMBER(19,0),
	"REPORTOPTIONS" NUMBER(10,0),
	"TRANSPORTID" NUMBER(19,0),
	"MSGTYPE" NUMBER(10,0),
	"MSGADDRESS" VARCHAR2(255 CHAR),
	"AGENTNAME" VARCHAR2(255 CHAR)
   );
--
-- AREA
--
  CREATE TABLE "AREA" 
   (	"FACILITY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"AREA" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- ASSIGNEES
--
  CREATE TABLE "ASSIGNEES" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"ASSIGNEDTO" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- AUDITCOLLECTIONSITEMS
--
  CREATE TABLE "AUDITCOLLECTIONSITEMS" 
   (	"SEQUENCENUMBER" NUMBER(10,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0),
	"OPERATION" VARCHAR2(255 CHAR),
	"FROMLOCATIONID" NUMBER(19,0),
	"TOLOCATIONID" NUMBER(19,0),
	"USERLOGIN" VARCHAR2(255 CHAR),
	"USERID" NUMBER(19,0),
	"USERLOCATION" VARCHAR2(64 CHAR),
	"MODIFYDATE" DATE NOT NULL ENABLE,
	"VERSION" NUMBER(19,0),
	"DISCOVERYPERM" NUMBER(3,0),
	"STATUS" CLOB NOT NULL ENABLE
   );
--
-- BESTBETSDATA
--
  CREATE TABLE "BESTBETSDATA" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"BESTBET" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"MODIFYDATE" DATE NOT NULL ENABLE,
	"EXPIRY" DATE,
	"MODIFIEDBY" NUMBER(19,0)
   );
--
-- BESTBETSSEARCH
--
  CREATE TABLE "BESTBETSSEARCH" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"BESTBETSEARCH" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"EXPIRED" NUMBER(3,0) NOT NULL ENABLE
   );
--
-- BLOBDATA
--
  CREATE TABLE "BLOBDATA" 
   (	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"LONGID" NUMBER(19,0) NOT NULL ENABLE,
	"SEGMENTID" NUMBER(10,0) NOT NULL ENABLE,
	"SEGMENT" BLOB
   );
--
-- BLOBRESDATA
--
  CREATE TABLE "BLOBRESDATA" 
   (	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"LONGID" NUMBER(19,0) NOT NULL ENABLE,
	"SEGMENTID" NUMBER(10,0) NOT NULL ENABLE,
	"SEGMENT" BLOB
   );
--
-- BSCDOCS
--
  CREATE TABLE "BSCDOCS" 
   (	"DOCTYPE" VARCHAR2(50) NOT NULL ENABLE
   );
--
-- CATREGIONMAP
--
  CREATE TABLE "CATREGIONMAP" 
   (	"CATID" NUMBER(19,0) NOT NULL ENABLE,
	"CATNAME" VARCHAR2(255 CHAR),
	"SETNAME" VARCHAR2(255 CHAR),
	"ATTRNAME" VARCHAR2(255 CHAR),
	"REGIONNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"ATTRTYPE" NUMBER(10,0)
   );
--
-- COLLECTIONS
--
  CREATE TABLE "COLLECTIONS" 
   (	"COLLECTIONID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSION" NUMBER(19,0)
   );
--
-- COLLECTIONSDATA
--
  CREATE TABLE "COLLECTIONSDATA" 
   (	"COLLECTIONID" NUMBER(19,0) NOT NULL ENABLE,
	"SEARCHABLE" NUMBER(3,0) NOT NULL ENABLE
   );
--
-- COMMCALENDAR
--
  CREATE TABLE "COMMCALENDAR" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"COMMID" NUMBER(19,0) NOT NULL ENABLE,
	"STARTDATE" DATE NOT NULL ENABLE,
	"ENDDATE" DATE,
	"TITLE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DETAILS" VARCHAR2(4000 CHAR),
	"EXTENDEDDATA" CLOB
   );
--
-- COMMCALENDARROLES
--
  CREATE TABLE "COMMCALENDARROLES" 
   (	"COMMCALENDARID" NUMBER(19,0) NOT NULL ENABLE,
	"ROLEID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- COMMINI
--
  CREATE TABLE "COMMINI" 
   (	"INISECTION" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"INIKEYWORD" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"INIVALUE" CLOB NOT NULL ENABLE
   );
--
-- COMMMEMBER
--
  CREATE TABLE "COMMMEMBER" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"MEMBERDATE" DATE NOT NULL ENABLE,
	"USERROLEID" NUMBER(19,0) NOT NULL ENABLE,
	"USERSTATUS" VARCHAR2(255 CHAR),
	"LASTONDATE" DATE,
	"EXTENDEDDATA" CLOB NOT NULL ENABLE
   );
--
-- COMMMEMBERREQ
--
  CREATE TABLE "COMMMEMBERREQ" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"CREATEDATE" DATE NOT NULL ENABLE,
	"ROLEID" NUMBER(19,0) NOT NULL ENABLE,
	"SPONSOR" VARCHAR2(255 CHAR),
	"MSG" VARCHAR2(4000 CHAR),
	"REQTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"EXTENDEDDATA" CLOB
   );
--
-- COMMMETRICS
--
  CREATE TABLE "COMMMETRICS" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"ROLEID" NUMBER(19,0) NOT NULL ENABLE,
	"ACTIONDATE" DATE NOT NULL ENABLE,
	"ACTIONTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"EXTENDEDDATA" VARCHAR2(4000 CHAR)
   );
--
-- COMPONENTSETTINGS
--
  CREATE TABLE "COMPONENTSETTINGS" 
   (	"ID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"COMPONENTNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"SETTINGNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"SETTING" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- CSAPPSSTATS
--
  CREATE TABLE "CSAPPSSTATS" 
   (	"APPNAME" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"USERID" NUMBER(10,0) NOT NULL ENABLE,
	"USERSTATUS" NUMBER(10,0),
	"DATEFIRSTACTION" DATE,
	"DATELASTACTION" DATE,
	"ACTION" VARCHAR2(64 CHAR),
	"NODEID" NUMBER(10,0),
	"STATS" CLOB
   );
--
-- CUST_DISTRICT
--
  CREATE TABLE "CUST_DISTRICT" 
   (	"DISTRICTID" NUMBER(*,0) NOT NULL ENABLE,
	"DISTRICT" VARCHAR2(50),
	"REGNUM" CHAR(10),
	PRIMARY KEY ("DISTRICTID") ENABLE
   );
--
-- CUST_GRANTTYPE
--
  CREATE TABLE "CUST_GRANTTYPE" 
   (	"GRANTNO" NUMBER(*,0) NOT NULL ENABLE,
	"GRANTTYPE" VARCHAR2(50),
	PRIMARY KEY ("GRANTNO") ENABLE
   );
--
-- CUST_IRM
--
  CREATE TABLE "CUST_IRM" 
   (	"VOLUMEID" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(10,0) NOT NULL ENABLE,
	"SEQ" NUMBER(10,0),
	"ROWSEQNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"ITERATIONNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"REGION" VARCHAR2(255 CHAR),
	"IDENTITY_NUMBER" VARCHAR2(255 CHAR),
	"AGE" NUMBER(10,0),
	"SURNAME" VARCHAR2(255 CHAR),
	"GENDER" VARCHAR2(255 CHAR),
	"FULL_NAMES" VARCHAR2(255 CHAR),
	"COMMUNICATION_METHOD" VARCHAR2(255 CHAR),
	"TELEPHONE_NUMBER" NUMBER(10,0),
	"EMAIL" VARCHAR2(255 CHAR),
	"CELLPHONE_NUMBER" NUMBER(10,0),
	"FAX" NUMBER(10,0),
	"RESIDENTIAL_ADDRESS" CLOB,
	"RES_POSTAL_CODE" NUMBER(10,0),
	"POSTAL_ADDRESS" CLOB,
	"POSTAL_CODE" NUMBER(10,0),
	"SASSA_OFFICE" CLOB,
	"APPLICATION_DATE" VARCHAR2(255 CHAR),
	"REJECTION_DATE" VARCHAR2(255 CHAR),
	"GRANT_TYPE" VARCHAR2(255 CHAR),
	"APP_DISAGREEMENT" NUMBER(10,0),
	"MED_DISAGREEMENT" NUMBER(10,0),
	"OTHER" NUMBER(10,0),
	"IDENTITY_DOC" VARCHAR2(255 CHAR),
	"INTERNAL_RECONSIDERATIONAL" VARCHAR2(255 CHAR),
	"POA" VARCHAR2(255 CHAR),
	"APP_REPRESENTATIVE" NUMBER(10,0),
	"REP_IDENTITY_NUMBER" VARCHAR2(255 CHAR),
	"RELATION" VARCHAR2(255 CHAR),
	"REP_SURNAME" VARCHAR2(255 CHAR),
	"REP_GENDER" VARCHAR2(255 CHAR),
	"REP_FULL_NAMES" VARCHAR2(255 CHAR),
	"APPCONTACT_TEL" NUMBER(10,0),
	"APPCONTACT_CELL" NUMBER(10,0),
	"REP_FAX" NUMBER(10,0),
	"REP_EMAIL" VARCHAR2(255 CHAR),
	"NATIONALITY" VARCHAR2(255 CHAR),
	"REP_OTHER" VARCHAR2(255 CHAR),
	"COMMENT_OTHER" CLOB,
	"MAILADDRESS" VARCHAR2(255 CHAR),
	"APPLICATION_NATURE" VARCHAR2(255 CHAR),
	"PROOF_OF_INCOME_ASSETS" VARCHAR2(255 CHAR),
	"MEDICAL_ADVISORY" VARCHAR2(255 CHAR),
	"MEDICAL_REASONS" VARCHAR2(255 CHAR),
	"LETTER_OF_REJECTION" VARCHAR2(255 CHAR),
	"REVIEWER_NAME" VARCHAR2(255 CHAR),
	"UPHOLD_THE_APPLICATION" NUMBER(10,0),
	"VARY_THE_INITIAL_DECISION" NUMBER(10,0),
	"DISMISS_APPLICATION" NUMBER(10,0),
	"REASON_FOR_DECISION" CLOB,
	"YEAR" NUMBER(10,0),
	"REP_DATE" VARCHAR2(255 CHAR),
	"OUTCOME_LETTER_ATTACHED" VARCHAR2(255 CHAR),
	"DISTRICT" VARCHAR2(255 CHAR),
	"LOCAL_OFFICE" VARCHAR2(255 CHAR),
	"WITHDRAWAL" VARCHAR2(255 CHAR),
	"FIRSTDATE" VARCHAR2(255 CHAR),
	"LASTDATE" VARCHAR2(255 CHAR),
	"TRIBUNAL_UPHOLD" NUMBER(10,0),
	"TRIBUNAL_VARY" NUMBER(10,0),
	"TRIBUNAL_DISMISS" NUMBER(10,0),
	"TRIBUNAL_REASON_DECISION" CLOB,
	"INVALID_DATE" VARCHAR2(255 CHAR),
	"OUTCOME_DATE" VARCHAR2(255 CHAR),
	"MESSAGE_TO_REGISTRY" CLOB,
	"REGISTRY_CLERK" NUMBER(10,0),
	"FULL_NAMES_REGISTRY" VARCHAR2(255 CHAR),
	"DATE_REQUESTED_REGISTRY" DATE,
	"MESSAGE_FROM_REGISTRY" CLOB,
	"DATE_REPLIED_REGISTRY" DATE,
	"LAST_ACTION" VARCHAR2(255 CHAR),
	"GRANTEE" VARCHAR2(255 CHAR),
	"ALLOCATION_TYPE" VARCHAR2(255 CHAR),
	"AWARDED_PERIOD" NUMBER(10,0),
	"AWARDED_UNIT" VARCHAR2(255 CHAR),
	"DEPENDANT_ID" VARCHAR2(255 CHAR),
	"DEPENDANT_SURNAME" VARCHAR2(255 CHAR),
	"DEPENDANT_FULLNAMES" VARCHAR2(255 CHAR),
	"DUPLICATEIRM" VARCHAR2(255 CHAR),
	"DATE_RECEIVED" VARCHAR2(255 CHAR),
	"BIRTHPERIOD" VARCHAR2(255 CHAR),
	"TEL_1" VARCHAR2(255 CHAR),
	"CELL_1" VARCHAR2(255 CHAR),
	"TEL_2" VARCHAR2(255 CHAR),
	"CELL_2" VARCHAR2(255 CHAR),
	"FAX_1" VARCHAR2(255 CHAR),
	"FAX_2" VARCHAR2(255 CHAR),
	"AMOUNT_ALLOCATED" NUMBER(10,0),
	"LEGAL_FIRM" VARCHAR2(255 CHAR),
	"COMPANY_REGISTERATION" VARCHAR2(255 CHAR),
	"COMPANY_TELNO" VARCHAR2(255 CHAR),
	"COMPANY_EMAIL" VARCHAR2(255 CHAR),
	"COMPANY_CELLNO" VARCHAR2(255 CHAR),
	"LEGAL_REPRESENTATIVE" VARCHAR2(255 CHAR),
	"APPEAL_DATE" DATE,
	"APPEAL_INITIATOR_FULLNAME" NUMBER(10,0),
	"APPEAL_INITIATOR_EMAIL" NUMBER(10,0),
	"APPEAL_INITIATOR_USER" NUMBER(10,0),
	"TRIBUNAL_OUTCOME_DATE" DATE,
	"IMPLIMENTOR_FULLNAME" NUMBER(10,0),
	"IMPLIMENTOR_EMAIL" NUMBER(10,0),
	"APPEAL_INITIATOR_USERNAME" NUMBER(10,0),
	"IMPLIMENTATION_DATE" DATE,
	"IMPLIMENTOR_COMMENTS" CLOB,
	"APPEAL_RECON_FULLNAME" NUMBER(10,0),
	"APPEAL_RECON_EMAIL" NUMBER(10,0),
	"APPEAL_RECON_USER_" NUMBER(10,0),
	"COMPANY_ADDRESS" CLOB,
	"COMPANY_POSTAL_CODE" VARCHAR2(255 CHAR),
	"DSD_INITIATOR_FULLNAME" VARCHAR2(255 CHAR),
	"DSD_INITIATOR_EMAIL" VARCHAR2(255 CHAR),
	"DSD_INITIATOR_USER" VARCHAR2(255 CHAR),
	"DSD_RECON_FULLNAME" VARCHAR2(255 CHAR),
	"DSD_RECON_EMAIL" VARCHAR2(255 CHAR),
	"DSD_RECON_USER" VARCHAR2(255 CHAR),
	"IMPLEMENTOR" VARCHAR2(255 CHAR),
	"IMPLEMENTOR_EMAIL" VARCHAR2(255 CHAR),
	"IMPLEMENTOR_USER" VARCHAR2(255 CHAR),
	"DSD_INITIATED" VARCHAR2(255 CHAR),
	"DSD_FEEDBACK" VARCHAR2(255 CHAR),
	"DSD_IMPLEMENTED" VARCHAR2(255 CHAR),
	"WITHDRAWAL_DATE" VARCHAR2(255 CHAR),
	"RECONSIDERER" VARCHAR2(255 CHAR),
	"POSTAL_CODE1" VARCHAR2(255 CHAR),
	"POSTAL_CODE2" VARCHAR2(255 CHAR)
   );
--
-- CUST_IRMS
--
  CREATE TABLE "CUST_IRMS" 
   (	"VOLUMEID" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(10,0) NOT NULL ENABLE,
	"SEQ" NUMBER(10,0),
	"ROWSEQNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"ITERATIONNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"REGION" VARCHAR2(255 CHAR),
	"IDENTITY_NUMBER" VARCHAR2(255 CHAR),
	"AGE" NUMBER(10,0),
	"SURNAME" VARCHAR2(255 CHAR),
	"GENDER" VARCHAR2(255 CHAR),
	"FULL_NAMES" VARCHAR2(255 CHAR),
	"COMMUNICATION_METHOD" VARCHAR2(255 CHAR),
	"TELEPHONE_NUMBER" NUMBER(10,0),
	"EMAIL" VARCHAR2(255 CHAR),
	"CELLPHONE_NUMBER" NUMBER(10,0),
	"FAX" NUMBER(10,0),
	"RESIDENTIAL_ADDRESS" CLOB,
	"RES_POSTAL_CODE" NUMBER(10,0),
	"POSTAL_ADDRESS" CLOB,
	"POSTAL_CODE" NUMBER(10,0),
	"SASSA_OFFICE" CLOB,
	"APPLICATION_DATE" VARCHAR2(255 CHAR),
	"REJECTION_DATE" VARCHAR2(255 CHAR),
	"GRANT_TYPE" VARCHAR2(255 CHAR),
	"APP_DISAGREEMENT" NUMBER(10,0),
	"MED_DISAGREEMENT" NUMBER(10,0),
	"OTHER" NUMBER(10,0),
	"IDENTITY_DOC" VARCHAR2(255 CHAR),
	"INTERNAL_RECONSIDERATIONAL" VARCHAR2(255 CHAR),
	"POA" VARCHAR2(255 CHAR),
	"APP_REPRESENTATIVE" NUMBER(10,0),
	"REP_IDENTITY_NUMBER" VARCHAR2(255 CHAR),
	"RELATION" VARCHAR2(255 CHAR),
	"REP_SURNAME" VARCHAR2(255 CHAR),
	"REP_GENDER" VARCHAR2(255 CHAR),
	"REP_FULL_NAMES" VARCHAR2(255 CHAR),
	"APPCONTACT_TEL" NUMBER(10,0),
	"APPCONTACT_CELL" NUMBER(10,0),
	"REP_FAX" NUMBER(10,0),
	"REP_EMAIL" VARCHAR2(255 CHAR),
	"NATIONALITY" VARCHAR2(255 CHAR),
	"REP_OTHER" VARCHAR2(255 CHAR),
	"COMMENT_OTHER" CLOB,
	"MAILADDRESS" VARCHAR2(255 CHAR),
	"APPLICATION_NATURE" VARCHAR2(255 CHAR),
	"PROOF_OF_INCOME_ASSETS" VARCHAR2(255 CHAR),
	"MEDICAL_ADVISORY" VARCHAR2(255 CHAR),
	"MEDICAL_REASONS" VARCHAR2(255 CHAR),
	"LETTER_OF_REJECTION" VARCHAR2(255 CHAR),
	"REVIEWER_NAME" VARCHAR2(255 CHAR),
	"UPHOLD_THE_APPLICATION" NUMBER(10,0),
	"VARY_THE_INITIAL_DECISION" NUMBER(10,0),
	"DISMISS_APPLICATION" NUMBER(10,0),
	"REASON_FOR_DECISION" CLOB,
	"YEAR" NUMBER(10,0),
	"REP_DATE" VARCHAR2(255 CHAR),
	"OUTCOME_LETTER_ATTACHED" VARCHAR2(255 CHAR),
	"DISTRICT" VARCHAR2(255 CHAR),
	"LOCAL_OFFICE" VARCHAR2(255 CHAR),
	"WITHDRAWAL" VARCHAR2(255 CHAR),
	"FIRSTDATE" VARCHAR2(255 CHAR),
	"LASTDATE" VARCHAR2(255 CHAR),
	"TRIBUNAL_UPHOLD" NUMBER(10,0),
	"TRIBUNAL_VARY" NUMBER(10,0),
	"TRIBUNAL_DISMISS" NUMBER(10,0),
	"TRIBUNAL_REASON_DECISION" CLOB,
	"INVALID_DATE" VARCHAR2(255 CHAR),
	"OUTCOME_DATE" VARCHAR2(255 CHAR),
	"MESSAGE_TO_REGISTRY" CLOB,
	"REGISTRY_CLERK" NUMBER(10,0),
	"FULL_NAMES_REGISTRY" VARCHAR2(255 CHAR),
	"DATE_REQUESTED_REGISTRY" DATE,
	"MESSAGE_FROM_REGISTRY" CLOB,
	"DATE_REPLIED_REGISTRY" DATE,
	"LAST_ACTION" VARCHAR2(255 CHAR)
   );
--
-- CUST_IRMTABLE
--
  CREATE TABLE "CUST_IRMTABLE" 
   (	"VOLUMEID" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(10,0) NOT NULL ENABLE,
	"SEQ" NUMBER(10,0),
	"ROWSEQNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"ITERATIONNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"REGION" VARCHAR2(255 CHAR),
	"IDENTITY_NUMBER" VARCHAR2(255 CHAR),
	"AGE" NUMBER(10,0),
	"SURNAME" VARCHAR2(255 CHAR),
	"GENDER" VARCHAR2(255 CHAR),
	"FULL_NAMES" VARCHAR2(255 CHAR),
	"COMMUNICATION_METHOD" VARCHAR2(255 CHAR),
	"TELEPHONE_NUMBER" NUMBER(10,0),
	"EMAIL" VARCHAR2(255 CHAR),
	"CELLPHONE_NUMBER" NUMBER(10,0),
	"FAX" NUMBER(10,0),
	"RESIDENTIAL_ADDRESS" CLOB,
	"RES_POSTAL_CODE" NUMBER(10,0),
	"POSTAL_ADDRESS" CLOB,
	"POSTAL_CODE" NUMBER(10,0),
	"SASSA_OFFICE" CLOB,
	"APPLICATION_DATE" VARCHAR2(255 CHAR),
	"REJECTION_DATE" VARCHAR2(255 CHAR),
	"GRANT_TYPE" VARCHAR2(255 CHAR),
	"APP_DISAGREEMENT" NUMBER(10,0),
	"MED_DISAGREEMENT" NUMBER(10,0),
	"OTHER" NUMBER(10,0),
	"IDENTITY_DOC" VARCHAR2(255 CHAR),
	"INTERNAL_RECONSIDERATIONAL" VARCHAR2(255 CHAR),
	"POA" VARCHAR2(255 CHAR),
	"APP_REPRESENTATIVE" NUMBER(10,0),
	"REP_IDENTITY_NUMBER" VARCHAR2(255 CHAR),
	"RELATION" VARCHAR2(255 CHAR),
	"REP_SURNAME" VARCHAR2(255 CHAR),
	"REP_GENDER" VARCHAR2(255 CHAR),
	"REP_FULL_NAMES" VARCHAR2(255 CHAR),
	"APPCONTACT_TEL" NUMBER(10,0),
	"APPCONTACT_CELL" NUMBER(10,0),
	"REP_FAX" NUMBER(10,0),
	"REP_EMAIL" VARCHAR2(255 CHAR),
	"NATIONALITY" VARCHAR2(255 CHAR),
	"REP_OTHER" VARCHAR2(255 CHAR),
	"COMMENT_OTHER" CLOB,
	"MAILADDRESS" VARCHAR2(255 CHAR),
	"APPLICATION_NATURE" VARCHAR2(255 CHAR),
	"PROOF_OF_INCOME_ASSETS" VARCHAR2(255 CHAR),
	"MEDICAL_ADVISORY" VARCHAR2(255 CHAR),
	"MEDICAL_REASONS" VARCHAR2(255 CHAR),
	"LETTER_OF_REJECTION" VARCHAR2(255 CHAR),
	"REVIEWER_NAME" VARCHAR2(255 CHAR),
	"UPHOLD_THE_APPLICATION" NUMBER(10,0),
	"VARY_THE_INITIAL_DECISION" NUMBER(10,0),
	"DISMISS_APPLICATION" NUMBER(10,0),
	"REASON_FOR_DECISION" CLOB,
	"YEAR" NUMBER(10,0),
	"REP_DATE" VARCHAR2(255 CHAR),
	"OUTCOME_LETTER_ATTACHED" VARCHAR2(255 CHAR),
	"DISTRICT" VARCHAR2(255 CHAR),
	"LOCAL_OFFICE" VARCHAR2(255 CHAR),
	"WITHDRAWAL" VARCHAR2(255 CHAR),
	"FIRSTDATE" VARCHAR2(255 CHAR),
	"LASTDATE" VARCHAR2(255 CHAR),
	"TRIBUNAL_UPHOLD" NUMBER(10,0),
	"TRIBUNAL_VARY" NUMBER(10,0),
	"TRIBUNAL_DISMISS" NUMBER(10,0),
	"TRIBUNAL_REASON_DECISION" VARCHAR2(4000 CHAR),
	"INVALID_DATE" VARCHAR2(255 CHAR),
	"OUTCOME_DATE" VARCHAR2(255 CHAR),
	"MESSAGE_TO_REGISTRY" VARCHAR2(4000 CHAR),
	"REGISTRY_CLERK" NUMBER(10,0),
	"FULL_NAMES_REGISTRY" VARCHAR2(255 CHAR),
	"DATE_REQUESTED_REGISTRY" DATE,
	"MESSAGE_FROM_REGISTRY" VARCHAR2(4000 CHAR),
	"DATE_REPLIED_REGISTRY" DATE,
	"LAST_ACTION" VARCHAR2(255 CHAR)
   );
--
-- CUST_LOCALOFFICE
--
  CREATE TABLE "CUST_LOCALOFFICE" 
   (	"LOCALID" NUMBER(*,0) NOT NULL ENABLE,
	"LOCALOFFICE" VARCHAR2(50),
	"DISTRICTID" NUMBER(*,0),
	PRIMARY KEY ("LOCALID") ENABLE
   );
--
-- CUST_REGIONS
--
  CREATE TABLE "CUST_REGIONS" 
   (	"REGNUM" CHAR(10) NOT NULL ENABLE,
	"REGNAME" VARCHAR2(50),
	PRIMARY KEY ("REGNUM") ENABLE
   );
--
-- CUST_SAPOLETTERS
--
  CREATE TABLE "CUST_SAPOLETTERS" 
   (	"FILE_CODE" VARCHAR2(12),
	"PROCESS_DATE" VARCHAR2(8),
	"BRANCH_CODE" VARCHAR2(10),
	"REF_NO" VARCHAR2(16) NOT NULL ENABLE,
	"ID_NO" VARCHAR2(13) NOT NULL ENABLE,
	"FIRSTNAME" VARCHAR2(15 CHAR),
	"SURNAME" VARCHAR2(30 CHAR),
	"STAMP_DATE" VARCHAR2(8),
	"ADDR1" VARCHAR2(50 CHAR),
	"ADDR2" VARCHAR2(50 CHAR),
	"ADDR3" VARCHAR2(50 CHAR),
	"ADDR4" VARCHAR2(50 CHAR),
	"POSTAL_CODE" VARCHAR2(6)
   );
--
-- CUST_SAPOSTATUS
--
  CREATE TABLE "CUST_SAPOSTATUS" 
   (	"REF_NO" VARCHAR2(16) NOT NULL ENABLE,
	"FILE_DATE" VARCHAR2(14),
	"STATUS_DATE" VARCHAR2(14),
	"STATUS_CODE" VARCHAR2(7),
	"STATUS_DESC" VARCHAR2(50 CHAR),
	"TRACKING_NO" VARCHAR2(13),
	"POST_OFFICE" VARCHAR2(50)
   );
--
-- CUSTODIANSITE
--
  CREATE TABLE "CUSTODIANSITE" 
   (	"CUSTODIANSITE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- DATETOUSE
--
  CREATE TABLE "DATETOUSE" 
   (	"OBJECT" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DATETOUSE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"ATTRIBUTE" NUMBER(3,0),
	"DATETOUSE_DESC_E" VARCHAR2(128 CHAR),
	"DATETOUSE_DESC_F" VARCHAR2(128 CHAR),
	"DATECOLUMNNAME" VARCHAR2(64 CHAR),
	"RIMSCONFIGFILTER" NUMBER(3,0)
   );
--
-- DATTRIBUTES
--
  CREATE TABLE "DATTRIBUTES" 
   (	"ATTRNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"ATTRTYPE" NUMBER(10,0) NOT NULL ENABLE,
	"ATTRLEN" NUMBER(10,0),
	"DISPNAME" VARCHAR2(255 CHAR),
	"DISPTYPE" VARCHAR2(32 CHAR),
	"DEFVALUE" VARCHAR2(255 CHAR),
	"VALIDVALS" VARCHAR2(255 CHAR)
   );
--
-- DAUDITMORE
--
  CREATE TABLE "DAUDITMORE" 
   (	"EVENTID" NUMBER(19,0) NOT NULL ENABLE,
	"KEYSTR" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"VALUESTR" VARCHAR2(4000 CHAR)
   );
--
-- DAUDITNEW
--
  CREATE TABLE "DAUDITNEW" 
   (	"EVENTID" NUMBER(19,0) NOT NULL ENABLE,
	"AUDITID" NUMBER(10,0) NOT NULL ENABLE,
	"AUDITSTR" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"AUDITDATE" DATE NOT NULL ENABLE,
	"DATAID" NUMBER(19,0),
	"SUBTYPE" NUMBER(10,0),
	"USERID" NUMBER(19,0),
	"PERFORMERID" NUMBER(19,0) NOT NULL ENABLE,
	"AGENTID" NUMBER(19,0),
	"VALUEKEY" VARCHAR2(255 CHAR),
	"VALUE1" VARCHAR2(4000 CHAR),
	"VALUE2" VARCHAR2(4000 CHAR),
	"APPLICATIONID" VARCHAR2(255 CHAR),
	"LANGUAGECODE" VARCHAR2(6 CHAR)
   );
--
-- DAVBNAME
--
  CREATE TABLE "DAVBNAME" 
   (	"PARENTID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0),
	"NAME" VARCHAR2(255 CHAR),
	"ZCREATEDATE" DATE
   );
--
-- DAVEXTREF
--
  CREATE TABLE "DAVEXTREF" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"ANCHORNID" NUMBER(19,0),
	"ID" VARCHAR2(128 CHAR)
   );
--
-- DAVLOCK
--
  CREATE TABLE "DAVLOCK" 
   (	"RESID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ANCHORNID" NUMBER(19,0),
	"LOCKTOKEN" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"DEPTH" NUMBER(10,0),
	"MODIFYDATE" DATE,
	"LOCKSCOPE" NUMBER(10,0),
	"LOCKTYPE" NUMBER(10,0),
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"EXPIRYDATE" DATE,
	"OWNERDESC" CLOB,
	"LINKRESDATE" DATE
   );
--
-- DAVPROP
--
  CREATE TABLE "DAVPROP" 
   (	"RESID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ANCHORNID" NUMBER(19,0),
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"VALUE" CLOB
   );
--
-- DAVUSERMAP
--
  CREATE TABLE "DAVUSERMAP" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- DBROWSEANCESTORSCORE
--
  CREATE TABLE "DBROWSEANCESTORSCORE" 
   (	"DATAID" NUMBER(19,0),
	"ANCESTORID" NUMBER(19,0),
	"DELETED" NUMBER DEFAULT 0,
	CONSTRAINT "PK_DBROWSEANCESTORS_AID_DID" PRIMARY KEY ("ANCESTORID","DELETED","DATAID") ENABLE,
	CONSTRAINT "UK_DBROWSEANCESTORSCORE" UNIQUE ("ANCESTORID","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DC_ACTIVITY
--
  CREATE TABLE "DC_ACTIVITY" 
   (	"DC_ACTIVITY_ID" NUMBER(*,0) GENERATED ALWAYS AS IDENTITY
 MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOORDER NOCYCLE NOT NULL ENABLE,
	"USERNAME" NVARCHAR2(50) NOT NULL ENABLE,
	"AREA" VARCHAR2(50) NOT NULL ENABLE,
	"ACTIVITY" NVARCHAR2(255) NOT NULL ENABLE,
	"RESULT" NVARCHAR2(255) NOT NULL ENABLE,
	"USERID" NUMBER(*,0),
	"ACTIVITY_DATE" DATE DEFAULT CURRENT_DATE NOT NULL ENABLE,
	"REGION_ID" NVARCHAR2(50) NOT NULL ENABLE,
	"OFFICE_ID" NUMBER(*,0) NOT NULL ENABLE,
	PRIMARY KEY ("DC_ACTIVITY_ID") ENABLE
   );
--
-- DC_BATCH
--
  CREATE TABLE "DC_BATCH" 
   (	"BATCH_NO" NUMBER,
	"OFFICE_ID" VARCHAR2(10),
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" DATE,
	"BATCH_CURRENT" CHAR(1),
	"BATCH_STATUS" VARCHAR2(20),
	"BATCH_COMMENT" VARCHAR2(500),
	"WAYBILL_NO" VARCHAR2(20),
	"COURIER_NAME" VARCHAR2(255),
	"WAYBILL_DATE" DATE,
	"UPDATED_BY_AD" VARCHAR2(225),
	"REG_TYPE" VARCHAR2(20),
	CHECK ("OFFICE_ID" IS NOT NULL) ENABLE NOVALIDATE,
	CHECK ("UPDATED_BY" IS NOT NULL) ENABLE NOVALIDATE,
	CHECK ("UPDATED_DATE" IS NOT NULL) ENABLE NOVALIDATE,
	CHECK ("BATCH_CURRENT" IS NOT NULL) ENABLE NOVALIDATE,
	CONSTRAINT "PK_DC_BATCH" PRIMARY KEY ("BATCH_NO") ENABLE NOVALIDATE
   );
--
-- DC_BOX_TYPE
--
  CREATE TABLE "DC_BOX_TYPE" 
   (	"BOX_TYPE_ID" NUMBER NOT NULL ENABLE,
	"BOX_TYPE" VARCHAR2(100) NOT NULL ENABLE,
	"IS_TRANSPORT" VARCHAR2(1) NOT NULL ENABLE
   );
--
-- DC_BOXPICKED
--
  CREATE TABLE "DC_BOXPICKED" 
   (	"UNQ_PICKLIST" VARCHAR2(20) NOT NULL ENABLE,
	"BIN_NUMBER" VARCHAR2(10),
	"BOX_NUMBER" VARCHAR2(10) NOT NULL ENABLE,
	"BOX_RECEIVED" CHAR(1),
	"BOX_COMPLETED" CHAR(1),
	"ARCHIVE_YEAR" VARCHAR2(4),
	"UNQ_NO" VARCHAR2(20) NOT NULL ENABLE,
	CONSTRAINT "DC_BOXPICKED_PK" PRIMARY KEY ("UNQ_NO") ENABLE
   );
--
-- DC_DESTRUCTION_LIST
--
  CREATE TABLE "DC_DESTRUCTION_LIST" 
   (	"REGION" VARCHAR2(5),
	"PENSION_NO" VARCHAR2(20),
	"NAME" VARCHAR2(60),
	"SURNAME" VARCHAR2(60),
	"GRANT_TYPE" VARCHAR2(5),
	"STATUS_DATE" VARCHAR2(20),
	"STATUS" NVARCHAR2(20) DEFAULT 'Selected' NOT NULL ENABLE
   );
--
-- DC_DISTRICT
--
  CREATE TABLE "DC_DISTRICT" 
   (	"DISTRICT" VARCHAR2(20) NOT NULL ENABLE,
	"DISTRICT_NAME" VARCHAR2(255),
	"REGION_ID" VARCHAR2(20)
   );
--
-- DC_DISTRICT_EC
--
  CREATE TABLE "DC_DISTRICT_EC" 
   (	"DISTRICT_NUMBER" NUMBER(*,0) NOT NULL ENABLE,
	"DISTRICT_NAME" VARCHAR2(20) NOT NULL ENABLE,
	"DISTRICT_CODE" VARCHAR2(10) NOT NULL ENABLE,
	CONSTRAINT "DC_DISTRICT_EC_PK" PRIMARY KEY ("DISTRICT_NUMBER") ENABLE
   );
--
-- DC_DOCUMENT_TYPE
--
  CREATE TABLE "DC_DOCUMENT_TYPE" 
   (	"TYPE_ID" NUMBER,
	"TYPE_NAME" VARCHAR2(255),
	CONSTRAINT "PK_DOCUMENT_TYPE" PRIMARY KEY ("TYPE_ID") ENABLE
   );
--
-- DC_EXCFILE
--
  CREATE TABLE "DC_EXCFILE" 
   (	"EXCFILE_ID" NUMBER GENERATED ALWAYS AS IDENTITY
 MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOORDER NOCYCLE NOT NULL ENABLE,
	"EXCFILE_NAME" NUMBER NOT NULL ENABLE,
	"EXCFILE_DATE" DATE DEFAULT SYSDATE NOT NULL ENABLE
   );
--
-- DC_EXCLUSIONS
--
  CREATE TABLE "DC_EXCLUSIONS" 
   (	"ID_NO" VARCHAR2(20) NOT NULL ENABLE,
	"EXCL_DATE" DATE,
	"STATUS" VARCHAR2(20),
	"REGION_ID" NUMBER(*,0) NOT NULL ENABLE,
	"USERNAME" NVARCHAR2(20) NOT NULL ENABLE,
	"EXCLUSIONTYPE" NVARCHAR2(20) NOT NULL ENABLE,
	"EXCFILE_ID" NUMBER NOT NULL ENABLE
   );
--
-- DC_FILE
--
  CREATE TABLE "DC_FILE" 
   (	"UNQ_FILE_NO" VARCHAR2(20),
	"BATCH_NO" NUMBER,
	"OFFICE_ID" VARCHAR2(10),
	"REGION_ID" VARCHAR2(10),
	"APPLICANT_NO" VARCHAR2(20),
	"GRANT_TYPE" VARCHAR2(2),
	"TRANS_TYPE" NUMBER,
	"DOCS_PRESENT" VARCHAR2(255),
	"TRANS_DATE" DATE,
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" DATE,
	"BATCH_ADD_DATE" DATE,
	"FILE_STATUS" VARCHAR2(20),
	"FILE_COMMENT" VARCHAR2(255),
	"USER_FIRSTNAME" VARCHAR2(255),
	"USER_LASTNAME" VARCHAR2(255),
	"APPLICATION_STATUS" VARCHAR2(20),
	"DOCS_SCANNED" VARCHAR2(255),
	"SCAN_DATETIME" DATE,
	"BRM_BARCODE" VARCHAR2(20),
	"TDW_BOXNO" VARCHAR2(20),
	"NON_COMPLIANT" VARCHAR2(2),
	"QC_USER_FN" VARCHAR2(255),
	"QC_USER_LN" VARCHAR2(255),
	"QC_DATE" DATE,
	"MIS_BOXNO" VARCHAR2(20),
	"MIS_BOX_DATE" DATE,
	"MIS_REBOX_DATE" DATE,
	"MIS_BOX_STATUS" VARCHAR2(20),
	"MIS_REBOX_STATUS" VARCHAR2(20),
	"FILE_NUMBER" VARCHAR2(20),
	"ARCHIVE_YEAR" VARCHAR2(4),
	"EXCLUSIONS" VARCHAR2(20),
	"MISSING" VARCHAR2(2),
	"TRANSFERRED" VARCHAR2(2),
	"COMPLIANT" VARCHAR2(2),
	"REGION_ID_FROM" VARCHAR2(10),
	"TDW_BOX_TYPE_ID" NUMBER,
	"TDW_BOX_ARCHIVE_YEAR" VARCHAR2(4),
	"ALT_BOX_NO" VARCHAR2(50),
	"SRD_NO" VARCHAR2(20),
	"TEMP_BOX_NO" NUMBER,
	"UPDATED_BY_AD" VARCHAR2(225),
	"CHILD_ID_NO" VARCHAR2(20),
	"PRINT_ORDER" NUMBER,
	"ISREVIEW" VARCHAR2(2),
	"LASTREVIEWDATE" DATE,
	"LCTYPE" NUMBER,
	CONSTRAINT "PK_DC_FILE" PRIMARY KEY ("UNQ_FILE_NO") ENABLE
   );
--
-- DC_FILE_REC
--
  CREATE TABLE "DC_FILE_REC" 
   (	"UNQ_FILE_NO" VARCHAR2(20),
	"BATCH_NO" NUMBER,
	"OFFICE_ID" VARCHAR2(10),
	"REGION_ID" VARCHAR2(10),
	"APPLICANT_NO" VARCHAR2(20),
	"GRANT_TYPE" VARCHAR2(2),
	"TRANS_TYPE" NUMBER,
	"DOCS_PRESENT" VARCHAR2(255),
	"TRANS_DATE" DATE,
	"UPDATED_BY" NUMBER,
	"UPDATED_DATE" DATE,
	"BATCH_ADD_DATE" DATE,
	"FILE_STATUS" VARCHAR2(20),
	"FILE_COMMENT" VARCHAR2(255),
	"USER_FIRSTNAME" VARCHAR2(255),
	"USER_LASTNAME" VARCHAR2(255),
	"APPLICATION_STATUS" VARCHAR2(20),
	"DOCS_SCANNED" VARCHAR2(255),
	"SCAN_DATETIME" DATE,
	"BRM_BARCODE" VARCHAR2(20),
	"TDW_BOXNO" VARCHAR2(20),
	"NON_COMPLIANT" VARCHAR2(2),
	"QC_USER_FN" VARCHAR2(255),
	"QC_USER_LN" VARCHAR2(255),
	"QC_DATE" DATE,
	"MIS_BOXNO" VARCHAR2(20),
	"MIS_BOX_DATE" DATE,
	"MIS_REBOX_DATE" DATE,
	"MIS_BOX_STATUS" VARCHAR2(20),
	"MIS_REBOX_STATUS" VARCHAR2(20),
	"FILE_NUMBER" VARCHAR2(20),
	"ARCHIVE_YEAR" VARCHAR2(4),
	"EXCLUSIONS" VARCHAR2(20),
	"MISSING" VARCHAR2(2),
	"TRANSFERRED" VARCHAR2(2),
	"COMPLIANT" VARCHAR2(2),
	"REGION_ID_FROM" VARCHAR2(10),
	"TDW_BOX_TYPE_ID" NUMBER,
	"TDW_BOX_ARCHIVE_YEAR" VARCHAR2(4),
	"ALT_BOX_NO" VARCHAR2(50),
	"SRD_NO" VARCHAR2(20),
	"TEMP_BOX_NO" NUMBER,
	"UPDATED_BY_AD" VARCHAR2(225),
	"CHILD_ID_NO" VARCHAR2(20),
	"PRINT_ORDER" NUMBER,
	"ISREVIEW" VARCHAR2(2),
	"LASTREVIEWDATE" DATE,
	"LCTYPE" NUMBER
   );
--
-- DC_FILE_REQUEST
--
  CREATE TABLE "DC_FILE_REQUEST" 
   (	"UNQ_FILE_NO" VARCHAR2(20),
	"ID_NO" VARCHAR2(20),
	"MIS_FILE_NO" VARCHAR2(20),
	"NAME" VARCHAR2(50),
	"SURNAME" VARCHAR2(200),
	"REGION_ID" VARCHAR2(10),
	"REQUESTED_BY" NUMBER,
	"REQUESTED_DATE" DATE,
	"REQUESTED_OFFICE_ID" VARCHAR2(10),
	"SCANNED_BY" NUMBER,
	"SCANNED_DATE" DATE,
	"CLOSED_DATE" DATE,
	"CLOSED_BY" NUMBER,
	"RELATED_MIS_FILE_NO" VARCHAR2(255),
	"GRANT_TYPE" VARCHAR2(2),
	"APP_DATE" DATE,
	"SCANNED_PHYSICAL_IND" CHAR(1),
	"REQ_CATEGORY" NUMBER,
	"REQ_CATEGORY_TYPE" NUMBER,
	"REQ_CATEGORY_DETAIL" VARCHAR2(1000),
	"BRM_BARCODE" VARCHAR2(20),
	"BIN_ID" VARCHAR2(10),
	"BOX_NUMBER" VARCHAR2(10),
	"POSITION" VARCHAR2(10),
	"TDW_BOXNO" VARCHAR2(20),
	"SENT_TDW" CHAR(1),
	"RECEIVED_TDW" CHAR(1),
	"FILE_RETRIEVED" CHAR(1),
	"SEND_TO_REQUESTOR" CHAR(1),
	"PICKLIST_NO" NUMBER,
	"PICKLIST_TYPE" VARCHAR2(10),
	"PICKLIST_STATUS" VARCHAR2(20),
	"PICKED_BY" VARCHAR2(20),
	"CLM_NUMBER" VARCHAR2(20),
	"REGION_ID_TO" VARCHAR2(10),
	"STAKEHOLDER" NUMBER,
	"SERV_BY" VARCHAR2(50),
	"REQUESTED_BY_AD" VARCHAR2(225),
	"SCANNED_BY_AD" VARCHAR2(225),
	"CLOSED_BY_AD" VARCHAR2(225),
	"APPLICATION_STATUS" VARCHAR2(20),
	CONSTRAINT "PK_DC_FILE_REQUEST" PRIMARY KEY ("UNQ_FILE_NO") ENABLE
   );
--
-- DC_GRANT_DOC_LINK
--
  CREATE TABLE "DC_GRANT_DOC_LINK" 
   (	"GRANT_ID" VARCHAR2(2),
	"TRANSACTION_ID" NUMBER,
	"DOCUMENT_ID" NUMBER,
	"CRITICAL_FLAG" CHAR(1),
	"SECTION" VARCHAR2(100),
	CONSTRAINT "PK_GRAND_DOC_TRANS" PRIMARY KEY ("GRANT_ID","TRANSACTION_ID","DOCUMENT_ID") ENABLE
   );
--
-- DC_GRANT_TYPE
--
  CREATE TABLE "DC_GRANT_TYPE" 
   (	"TYPE_ID" VARCHAR2(2),
	"TYPE_NAME" VARCHAR2(100),
	CONSTRAINT "PK_GRANT_TYPE" PRIMARY KEY ("TYPE_ID") ENABLE
   );
--
-- DC_LC_TYPE
--
  CREATE TABLE "DC_LC_TYPE" 
   (	"PK" NUMBER GENERATED ALWAYS AS IDENTITY
 MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 49 NOORDER NOCYCLE NOT NULL ENABLE,
	"DESCRIPTION" VARCHAR2(100) NOT NULL ENABLE,
	CONSTRAINT "DC_LC_TYPE_PK" PRIMARY KEY ("PK") ENABLE
   );
--
-- DC_LOCAL_OFFICE
--
  CREATE TABLE "DC_LOCAL_OFFICE" 
   (	"OFFICE_ID" VARCHAR2(10),
	"OFFICE_NAME" VARCHAR2(255),
	"REGION_ID" VARCHAR2(20),
	"OFFICE_TYPE" VARCHAR2(3),
	"DISTRICT" VARCHAR2(255),
	CONSTRAINT "PK_DC_LOCAL_OFFICE" PRIMARY KEY ("OFFICE_ID") ENABLE
   );
--
-- DC_MERGE
--
  CREATE TABLE "DC_MERGE" 
   (	"PK" NUMBER GENERATED ALWAYS AS IDENTITY
 MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 32593 NOORDER NOCYCLE NOT NULL ENABLE,
	"BRM_BARCODE" VARCHAR2(20) NOT NULL ENABLE,
	"PARENT_BRM_BARCODE" VARCHAR2(20) NOT NULL ENABLE,
	CONSTRAINT "DC_MERGE_PK" PRIMARY KEY ("PK") ENABLE
   );
--
-- DC_OFFICE_KUAF_LINK
--
  CREATE TABLE "DC_OFFICE_KUAF_LINK" 
   (	"OFFICE_ID" VARCHAR2(10),
	"KUAF_ID" NUMBER,
	"SUPERVISOR" VARCHAR2(10),
	"USERNAME" VARCHAR2(225),
	"PK" NUMBER GENERATED ALWAYS AS IDENTITY
 MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5950 NOORDER NOCYCLE NOT NULL ENABLE,
	CONSTRAINT "DC_OFFICE_KUAF_LINK_PK" PRIMARY KEY ("PK") ENABLE
   );
--
-- DC_PICKLIST
--
  CREATE TABLE "DC_PICKLIST" 
   (	"UNQ_PICKLIST" VARCHAR2(20) NOT NULL ENABLE,
	"REGION_ID" VARCHAR2(10) NOT NULL ENABLE,
	"REGISTRY_TYPE" CHAR(1) NOT NULL ENABLE,
	"USERID" NUMBER,
	"PICKLIST_DATE" DATE,
	"PICKLIST_STATUS" CHAR(1),
	CONSTRAINT "DC_PICKLIST_PK" PRIMARY KEY ("UNQ_PICKLIST") ENABLE
   );
--
-- DC_REGION
--
  CREATE TABLE "DC_REGION" 
   (	"REGION_ID" VARCHAR2(20),
	"REGION_NAME" VARCHAR2(100),
	"REGION_CODE" VARCHAR2(10),
	CONSTRAINT "PK_DC_REGION" PRIMARY KEY ("REGION_ID") ENABLE
   );
--
-- DC_REQ_CATEGORY
--
  CREATE TABLE "DC_REQ_CATEGORY" 
   (	"CATEGORY_ID" NUMBER,
	"CATEGORY_DESCR" VARCHAR2(255),
	CONSTRAINT "PK_REQ_CATEGORY" PRIMARY KEY ("CATEGORY_ID") ENABLE
   );
--
-- DC_REQ_CATEGORY_TYPE
--
  CREATE TABLE "DC_REQ_CATEGORY_TYPE" 
   (	"TYPE_ID" NUMBER,
	"TYPE_DESCR" VARCHAR2(255),
	CONSTRAINT "PK_CATEGORY_TYPE" PRIMARY KEY ("TYPE_ID") ENABLE
   );
--
-- DC_REQ_CATEGORY_TYPE_LINK
--
  CREATE TABLE "DC_REQ_CATEGORY_TYPE_LINK" 
   (	"CATEGORY_ID" NUMBER,
	"TYPE_ID" NUMBER,
	CONSTRAINT "PK_CATEGORY_TYPE_LINK" PRIMARY KEY ("CATEGORY_ID","TYPE_ID") ENABLE
   );
--
-- DC_STAKEHOLDER
--
  CREATE TABLE "DC_STAKEHOLDER" 
   (	"STAKEHOLDER_ID" NUMBER NOT NULL ENABLE,
	"DEPARTMENT_ID" NUMBER NOT NULL ENABLE,
	"NAME" VARCHAR2(64) NOT NULL ENABLE,
	"SURNAME" VARCHAR2(64) NOT NULL ENABLE,
	"EMAIL" VARCHAR2(225) NOT NULL ENABLE,
	"REGION_ID" VARCHAR2(20),
	CONSTRAINT "DC_STAKEHOLDER_PK" PRIMARY KEY ("STAKEHOLDER_ID") ENABLE
   );
--
-- DC_TRANSACTION_TYPE
--
  CREATE TABLE "DC_TRANSACTION_TYPE" 
   (	"TYPE_ID" NUMBER,
	"TYPE_NAME" VARCHAR2(255),
	"SERVICE_CATEGORY" VARCHAR2(50),
	CONSTRAINT "PK_TRANSACTION_TYPE" PRIMARY KEY ("TYPE_ID") ENABLE
   );
--
-- DCATATTRS
--
  CREATE TABLE "DCATATTRS" 
   (	"CATNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"ATTRNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"REQUIRED" NUMBER(3,0)
   );
--
-- DCATEGORIES
--
  CREATE TABLE "DCATEGORIES" 
   (	"CATNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"TABLENAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DISPNAME" VARCHAR2(255 CHAR)
   );
--
-- DCOLUMNLOCATION
--
  CREATE TABLE "DCOLUMNLOCATION" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"COLUMNID" NUMBER(19,0) NOT NULL ENABLE,
	"DISPLAYORDER" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "IX_COLUMNLOCATION_1" PRIMARY KEY ("DATAID","COLUMNID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DDELETEDITEMSNAMES_EN_ZA
--
  CREATE TABLE "DDELETEDITEMSNAMES_EN_ZA" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- DDELETEDITEMSNODES
--
  CREATE TABLE "DDELETEDITEMSNODES" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DELETEDUSER" NUMBER(19,0) NOT NULL ENABLE,
	"DELETEDATE" DATE NOT NULL ENABLE,
	"PARENTID" NUMBER(19,0) NOT NULL ENABLE,
	"PURGEDATE" DATE,
	"DELETEINFO" VARCHAR2(4000 CHAR),
	"CONTEXT" VARCHAR2(512 CHAR)
   );
--
-- DDELLIST
--
  CREATE TABLE "DDELLIST" 
   (	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"DELETEDLIST" CLOB NOT NULL ENABLE
   );
--
-- DDOCUMENTCLASS
--
  CREATE TABLE "DDOCUMENTCLASS" 
   (	"NID" NUMBER(10,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"TYPE" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- DDOCUMENTCLASSCHILDREN
--
  CREATE TABLE "DDOCUMENTCLASSCHILDREN" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE,
	"CHILDID" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "DDOCUMENTCLASSCHILDREN_PRIMARY" PRIMARY KEY ("ID","CHILDID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DEPRECATED_DELETEDDOCS
--
  CREATE TABLE "DEPRECATED_DELETEDDOCS" 
   (	"NODEID" NUMBER(10,0) NOT NULL ENABLE,
	"PARENTID" NUMBER(10,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ORIGPATH" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DELETEUSERID" NUMBER(10,0) NOT NULL ENABLE,
	"DELETEDATE" DATE NOT NULL ENABLE
   );
--
-- DEXTENDEDPROFILEINFO
--
  CREATE TABLE "DEXTENDEDPROFILEINFO" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"REPORTTOID" NUMBER(19,0),
	"FIELDINFO" CLOB,
	CONSTRAINT "IX_DEXTENDEDPROFILEINFO_1" PRIMARY KEY ("USERID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_ATTR_1164938_6
--
  CREATE TABLE "DFACET_ATTR_1164938_6" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"FACET" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_ATTR_1164938_6_1" PRIMARY KEY ("DATAID","FACET") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_DC_1
--
  CREATE TABLE "DFACET_DC_1" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_DC_1_1" PRIMARY KEY ("FACET","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_DC_2
--
  CREATE TABLE "DFACET_DC_2" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_DC_2_1" PRIMARY KEY ("FACET","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_DC_3
--
  CREATE TABLE "DFACET_DC_3" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_DC_3_1" PRIMARY KEY ("FACET","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_DC_336
--
  CREATE TABLE "DFACET_DC_336" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_DC_336_1" PRIMARY KEY ("FACET","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_DC_4
--
  CREATE TABLE "DFACET_DC_4" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_DC_4_1" PRIMARY KEY ("FACET","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_DC_5
--
  CREATE TABLE "DFACET_DC_5" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_DC_5_1" PRIMARY KEY ("FACET","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_MODIFYDATE
--
  CREATE TABLE "DFACET_MODIFYDATE" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "OLD_IX_DFACETTMP_1" PRIMARY KEY ("FACET","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_OBJECTTYPE
--
  CREATE TABLE "DFACET_OBJECTTYPE" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"FACET" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_OBJECTTYPE_1" PRIMARY KEY ("DATAID","FACET") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACET_OWNER
--
  CREATE TABLE "DFACET_OWNER" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"FACET" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DFACET_OWNER_1" PRIMARY KEY ("DATAID","FACET") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DFACETCACHE
--
  CREATE TABLE "DFACETCACHE" 
   (	"K1" NUMBER(10,0) NOT NULL ENABLE,
	"K2" NUMBER(10,0) NOT NULL ENABLE,
	"K3" NUMBER(10,0) NOT NULL ENABLE,
	"K4" NUMBER(10,0) NOT NULL ENABLE,
	"K5" NUMBER(10,0) NOT NULL ENABLE,
	"K6" NUMBER(10,0) NOT NULL ENABLE,
	"K7" NUMBER(10,0) NOT NULL ENABLE,
	"K8" NUMBER(10,0) NOT NULL ENABLE,
	"K9" NUMBER(10,0) NOT NULL ENABLE,
	"K10" NUMBER(10,0) NOT NULL ENABLE,
	"K11" NUMBER(10,0) NOT NULL ENABLE,
	"DATEADDED" DATE NOT NULL ENABLE,
	"DATA" CLOB NOT NULL ENABLE
   );
--
-- DFACETKEYS
--
  CREATE TABLE "DFACETKEYS" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE,
	"KEYSTR" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"HASHSTR" VARCHAR2(64 CHAR) NOT NULL ENABLE
   );
--
-- DFACETTRACKING
--
  CREATE TABLE "DFACETTRACKING" 
   (	"TASKID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"TASKTIME" DATE NOT NULL ENABLE,
	"ALGORITHM" VARCHAR2(255 CHAR),
	"KEYS" VARCHAR2(4000 CHAR),
	"TRIGGERSTR" VARCHAR2(255 CHAR),
	"TIMEINMS" NUMBER(19,0) NOT NULL ENABLE,
	"LOG" CLOB
   );
--
-- DFAVORITES
--
  CREATE TABLE "DFAVORITES" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"TABID" NUMBER(19,0),
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ORDERING" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "DFAVORITES_ORDERING" UNIQUE ("USERID","ORDERING") ENABLE
   );
--
-- DFAVORITESTABS
--
  CREATE TABLE "DFAVORITESTABS" 
   (	"TABID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ORDERING" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "DFAVORITESTABS_ORDERING" UNIQUE ("USERID","ORDERING") ENABLE
   );
--
-- DISCUSSIONID
--
  CREATE TABLE "DISCUSSIONID" 
   (	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"ID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- DISPOSITION
--
  CREATE TABLE "DISPOSITION" 
   (	"DISPOSITION" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DISPOSITION_DESC_E" VARCHAR2(128 CHAR),
	"DISPOSITION_DESC_F" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- DISPOSITIONHOLD
--
  CREATE TABLE "DISPOSITIONHOLD" 
   (	"HOLDID" NUMBER(19,0) NOT NULL ENABLE,
	"ACTIVEHOLD" NUMBER(3,0),
	"OBJECT" VARCHAR2(32 CHAR),
	"APPLYPATRON" VARCHAR2(255 CHAR),
	"DATEAPPLIED" DATE,
	"HOLDCOMMENT" VARCHAR2(255 CHAR),
	"HOLDTYPE" VARCHAR2(32 CHAR),
	"DATETOREMOVE" DATE,
	"DATEREMOVED" DATE,
	"REMOVALPATRON" VARCHAR2(255 CHAR),
	"REMOVALCOMMENT" VARCHAR2(255 CHAR),
	"EDITDATE" DATE,
	"EDITPATRON" VARCHAR2(255 CHAR),
	"HOLDNAME" VARCHAR2(255 CHAR),
	"ALTERNATEHOLDID" VARCHAR2(64 CHAR),
	"PARENTID" NUMBER(19,0)
   );
--
-- DOBJECTRANK
--
  CREATE TABLE "DOBJECTRANK" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"RANGEDSCORE1" NUMBER(28,14) DEFAULT 0.0,
	"RANGEDSCORE2" NUMBER(28,14) DEFAULT 0.0,
	"SHORTCUTS" NUMBER(28,14) DEFAULT 0,
	"FAVORITES" NUMBER(19,0) DEFAULT 0,
	"FAVORITESNORM" NUMBER(28,14) DEFAULT 0.0,
	"ACCESSES" NUMBER(28,14) DEFAULT 0.0,
	"A0" NUMBER(19,0) DEFAULT 0,
	"A1" NUMBER(19,0) DEFAULT 0,
	"A2" NUMBER(19,0) DEFAULT 0,
	"A3" NUMBER(19,0) DEFAULT 0,
	"A4" NUMBER(19,0) DEFAULT 0,
	"A5" NUMBER(19,0) DEFAULT 0,
	"A6" NUMBER(19,0) DEFAULT 0,
	"A7" NUMBER(19,0) DEFAULT 0,
	"A8" NUMBER(19,0) DEFAULT 0,
	"A9" NUMBER(19,0) DEFAULT 0,
	"A10" NUMBER(19,0) DEFAULT 0,
	"A11" NUMBER(19,0) DEFAULT 0,
	"A12" NUMBER(19,0) DEFAULT 0,
	"A13" NUMBER(19,0) DEFAULT 0,
	"A14" NUMBER(19,0) DEFAULT 0
   );
--
-- DOCXREFTYP
--
  CREATE TABLE "DOCXREFTYP" 
   (	"DOCXREFTYP" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DOCXREFTYP_DESC_E" VARCHAR2(128 CHAR),
	"DOCXREFTYP_DESC_F" VARCHAR2(128 CHAR),
	"RELATEDCODE" VARCHAR2(32 CHAR),
	"DISABLEDFLAG" NUMBER(3,0),
	"HOLDID" NUMBER(19,0)
   );
--
-- DPSINSERTABLEPROPERTIES
--
  CREATE TABLE "DPSINSERTABLEPROPERTIES" 
   (	"INSERTPROPID" NUMBER(19,0) NOT NULL ENABLE,
	"KEYNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ENABLED" NUMBER(5,0) NOT NULL ENABLE,
	"SYNCHRONIZED" NUMBER(5,0) NOT NULL ENABLE,
	"DISPLAYNAME" VARCHAR2(4000 CHAR) NOT NULL ENABLE,
	"CONVERSION" VARCHAR2(255 CHAR),
	"FILEPROPERTY" VARCHAR2(4000 CHAR),
	"CSATTRIBUTETYPE" NUMBER(5,0) NOT NULL ENABLE
   );
--
-- DPSTASKS
--
  CREATE TABLE "DPSTASKS" 
   (	"DPSTASKID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTID" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONID" NUMBER(19,0),
	"STATUS" NUMBER(10,0) NOT NULL ENABLE,
	"STARTTIMESTAMP" DATE
   );
--
-- DREADLIST
--
  CREATE TABLE "DREADLIST" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"READLIST" CLOB NOT NULL ENABLE
   );
--
-- DSOCIALFEEDEVENTS
--
  CREATE TABLE "DSOCIALFEEDEVENTS" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"RECIPIENTID" NUMBER(19,0),
	"CONVERSATIONID" NUMBER(19,0),
	"PERMID" NUMBER(19,0),
	"SGMDATAID" NUMBER(19,0),
	"VISIBLE" NUMBER(5,0) NOT NULL ENABLE,
	"VISIBLETOFOLLOWERS" NUMBER(3,0) NOT NULL ENABLE,
	"EVENTTYPE" NUMBER(3,0) NOT NULL ENABLE,
	"EVENTINFO" CLOB,
	"MODIFIEDDATE" DATE,
	CONSTRAINT "IX_DSOCIALFEEDEVENTS_1" PRIMARY KEY ("NID","DATAID","USERID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSOCIALFOLLOWERS
--
  CREATE TABLE "DSOCIALFOLLOWERS" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"FOLLOWID" NUMBER(19,0) NOT NULL ENABLE,
	"FOLLOWDATE" DATE NOT NULL ENABLE,
	CONSTRAINT "IX_DSOCIALFOLLOWERS_1" PRIMARY KEY ("NID","USERID","FOLLOWID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSOCIALITEMCOUNT
--
  CREATE TABLE "DSOCIALITEMCOUNT" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"MENTIONS" NUMBER(10,0) NOT NULL ENABLE,
	"PRIVATEMESSAGES" NUMBER(10,0) NOT NULL ENABLE,
	"FOLLOWING" NUMBER(10,0) NOT NULL ENABLE,
	"FOLLOWERS" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DSOCIALITEMCOUNT_1" PRIMARY KEY ("USERID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSOCIALLIKE
--
  CREATE TABLE "DSOCIALLIKE" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"ITEMID" NUMBER(19,0) NOT NULL ENABLE,
	"CREATEDATE" DATE NOT NULL ENABLE,
	"RATINGTYPE" NUMBER(3,0),
	CONSTRAINT "IX_DSOCIALLIKE_1" PRIMARY KEY ("USERID","ITEMID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSOCIALMENTIONS
--
  CREATE TABLE "DSOCIALMENTIONS" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"POSTID" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DSOCIALMENTIONS_1" PRIMARY KEY ("USERID","POSTID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSOCIALOBJECTSDISPOSITION
--
  CREATE TABLE "DSOCIALOBJECTSDISPOSITION" 
   (	"DISPODATE" DATE NOT NULL ENABLE,
	"ACTION" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"APPID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"REMOTEID" VARCHAR2(255 CHAR),
	CONSTRAINT "IX_DSOCIALOBJECTSDISPOSITION_1" PRIMARY KEY ("DISPODATE","ACTION","DATAID","APPID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSOCIALOBJECTSETTINGS
--
  CREATE TABLE "DSOCIALOBJECTSETTINGS" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"COMMENTS" NUMBER(5,0) NOT NULL ENABLE,
	"COMMENTSOPEN" NUMBER(5,0) NOT NULL ENABLE,
	"REPLIES" NUMBER(5,0) NOT NULL ENABLE,
	"ATTACHMENTS" NUMBER(5,0) NOT NULL ENABLE,
	"SHORTCUTS" NUMBER(5,0) NOT NULL ENABLE,
	"TAGS" NUMBER(5,0) NOT NULL ENABLE,
	"LIKES" NUMBER(5,0) NOT NULL ENABLE,
	CONSTRAINT "SOCIALOBJECTSETTINGS_IDX1" PRIMARY KEY ("DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSOCIALPREFERENCES
--
  CREATE TABLE "DSOCIALPREFERENCES" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"PREFID" NUMBER(19,0) NOT NULL ENABLE,
	"PREFVALUE" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "IX_DSOCIALPREFERENCES_1" PRIMARY KEY ("USERID","PREFID","PREFVALUE") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DSTAGINGIMPORT
--
  CREATE TABLE "DSTAGINGIMPORT" 
   (	"NID" NUMBER(10,0) NOT NULL ENABLE,
	"TAGNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONID" NUMBER(19,0) NOT NULL ENABLE,
	"CHARDATA" VARCHAR2(255 CHAR),
	"SEGMENTID" NUMBER(19,0) NOT NULL ENABLE,
	"SEGMENT" CLOB
   );
--
-- DSUGGESTEXCEPTIONS
--
  CREATE TABLE "DSUGGESTEXCEPTIONS" 
   (	"TOKEN" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ALLOW" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- DSUGGESTWORDS
--
  CREATE TABLE "DSUGGESTWORDS" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"TYPE" NUMBER(5,0) NOT NULL ENABLE,
	"NAMESPACE" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"TOKEN" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"OCCCOUNT" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- DSUGGESTWORDSHASH
--
  CREATE TABLE "DSUGGESTWORDSHASH" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"HASH" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"PENALTY" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- DSUGGESTWORDSPENDING
--
  CREATE TABLE "DSUGGESTWORDSPENDING" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"TYPE" NUMBER(5,0) NOT NULL ENABLE,
	"NAMESPACE" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"TOKEN" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"OCCCOUNT" NUMBER(10,0) NOT NULL ENABLE,
	CONSTRAINT "SUGGESTWORDSPENDING_1" PRIMARY KEY ("NID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DTOPICITEMS
--
  CREATE TABLE "DTOPICITEMS" 
   (	"DISCUSSIONID" NUMBER(19,0) NOT NULL ENABLE,
	"TOPICID" NUMBER(19,0) NOT NULL ENABLE,
	"ITEMID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- DTREEACL
--
  CREATE TABLE "DTREEACL" 
   (	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"PARENTID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"RIGHTID" NUMBER(19,0) NOT NULL ENABLE,
	"PERMISSIONS" NUMBER(10,0) NOT NULL ENABLE,
	"ACLTYPE" NUMBER(3,0),
	"SEE" NUMBER(3,0)
   );
--
-- DTREEANCESTORS
--
  CREATE TABLE "DTREEANCESTORS" 
   (	"DATAID" NUMBER(19,0),
	"ANCESTORID" NUMBER(19,0),
	CONSTRAINT "PK_DTREEANCESTORS_AID_DID" PRIMARY KEY ("ANCESTORID","DATAID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- DTREEASPECTSNOTIFY
--
  CREATE TABLE "DTREEASPECTSNOTIFY" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"ATYPE" NUMBER(5,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBTYPE" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- DTREECORE
--
  CREATE TABLE "DTREECORE" 
   (	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"PARENTID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ORIGINOWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"ORIGINDATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"GROUPID" NUMBER(19,0) NOT NULL ENABLE,
	"UPERMISSIONS" NUMBER(10,0) NOT NULL ENABLE,
	"GPERMISSIONS" NUMBER(10,0) NOT NULL ENABLE,
	"WPERMISSIONS" NUMBER(10,0) NOT NULL ENABLE,
	"SPERMISSIONS" NUMBER(10,0) NOT NULL ENABLE,
	"ACLCOUNT" NUMBER(10,0) NOT NULL ENABLE,
	"PERMID" NUMBER(19,0),
	"DATATYPE" NUMBER(19,0),
	"CREATEDBY" NUMBER(19,0),
	"CREATEDATE" DATE,
	"MODIFIEDBY" NUMBER(19,0),
	"MODIFYDATE" DATE,
	"MAXVERS" NUMBER(10,0),
	"RESERVED" NUMBER(3,0),
	"RESERVEDBY" NUMBER(19,0),
	"RESERVEDDATE" DATE,
	"VERSIONNUM" NUMBER(19,0),
	"DCOMMENT" VARCHAR2(4000 CHAR),
	"DCATEGORY" VARCHAR2(255 CHAR),
	"SUBTYPE" NUMBER(10,0),
	"EXATT1" VARCHAR2(255 CHAR),
	"EXATT2" VARCHAR2(255 CHAR),
	"ORDERING" NUMBER(19,0),
	"MAJOR" NUMBER(19,0),
	"MINOR" NUMBER(19,0),
	"RELEASEREF" NUMBER(19,0),
	"CHILDCOUNT" NUMBER(19,0),
	"ASSIGNEDTO" NUMBER(19,0),
	"DATEASSIGNED" DATE,
	"DATEEFFECTIVE" DATE,
	"DATEEXPIRATION" DATE,
	"DATEDUE" DATE,
	"DATESTARTED" DATE,
	"DATECOMPLETED" DATE,
	"STATUS" NUMBER(10,0),
	"PRIORITY" NUMBER(10,0),
	"GIF" VARCHAR2(255 CHAR),
	"EXTENDEDDATA" CLOB,
	"CATALOG" NUMBER(10,0),
	"CACHEEXPIRATION" NUMBER(10,0),
	"DELETED" NUMBER(10,0) NOT NULL ENABLE,
	"GUID" RAW(16) DEFAULT sys_guid() NOT NULL ENABLE,
	CONSTRAINT "DTREECORE_CHECK_LOOP" CHECK (DataID <> ParentID) ENABLE
   );
--
-- DTREECOREEXTERNALDATA
--
  CREATE TABLE "DTREECOREEXTERNALDATA" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"EXTERNALCREATEDATE" DATE,
	"EXTERNALMODIFYDATE" DATE,
	"EXTERNALCREATORID" NUMBER(19,0),
	"EXTERNALSOURCEID" NUMBER(19,0)
   );
--
-- DTREECOREEXTERNALSOURCE
--
  CREATE TABLE "DTREECOREEXTERNALSOURCE" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"VALUE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DISPLAY" CLOB
   );
--
-- DTREEEXTRACTORVERIFY
--
  CREATE TABLE "DTREEEXTRACTORVERIFY" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"NEW" NUMBER(3,0),
	"CORRECTIONATTEMPTED" NUMBER(3,0),
	"RETRIES" NUMBER(19,0),
	"LASTRETRY" DATE,
	"SUBTYPE" NUMBER(19,0),
	"STATUS" NUMBER(3,0),
	"MODIFYDATE" DATE,
	"CREATEDATE" DATE,
	"PARTITIONNAME" CLOB,
	"PARTITIONMODE" CLOB,
	"OWNERID" NUMBER(19,0),
	"NAME" CLOB,
	"INTEGRITYERROR" NUMBER(3,0),
	"CONTENTSTATUS" NUMBER(19,0),
	"METADATAERRORS" NUMBER(19,0),
	"OTOBJECT" CLOB
   );
--
-- DTREEMULTILINGUAL
--
  CREATE TABLE "DTREEMULTILINGUAL" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"LANGUAGECODE" VARCHAR2(6 CHAR) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR),
	"DCOMMENT" VARCHAR2(4000 CHAR)
   );
--
-- DTREENOTIFY
--
  CREATE TABLE "DTREENOTIFY" 
   (	"NID" NUMBER(10,0) NOT NULL ENABLE,
	"NTYPE" NUMBER(5,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBTYPE" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- DTREENOTIFYRECOVER
--
  CREATE TABLE "DTREENOTIFYRECOVER" 
   (	"NTYPE" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"RETRIES" NUMBER(10,0) NOT NULL ENABLE,
	"LASTRETRY" DATE NOT NULL ENABLE,
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBTYPE" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- DTREESUBTYPEORDERREF
--
  CREATE TABLE "DTREESUBTYPEORDERREF" 
   (	"SUBTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"ORDERREF" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- DVERSDATA
--
  CREATE TABLE "DVERSDATA" 
   (	"VERSIONID" NUMBER(19,0) NOT NULL ENABLE,
	"DOCID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSION" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"OWNER" NUMBER(19,0) NOT NULL ENABLE,
	"VERCDATE" DATE NOT NULL ENABLE,
	"VERMDATE" DATE NOT NULL ENABLE,
	"PLATFORM" NUMBER(3,0) NOT NULL ENABLE,
	"FILENAME" VARCHAR2(255 CHAR),
	"DATASIZE" NUMBER(19,0) NOT NULL ENABLE,
	"RESSIZE" NUMBER(19,0),
	"FILETYPE" VARCHAR2(255 CHAR),
	"FILECREATOR" VARCHAR2(255 CHAR),
	"FILECDATE" DATE,
	"FILEMDATE" DATE,
	"ICON" VARCHAR2(255 CHAR),
	"PROVIDERID" NUMBER(19,0) NOT NULL ENABLE,
	"VERCOMMENT" VARCHAR2(255 CHAR),
	"LOCKED" NUMBER(3,0) NOT NULL ENABLE,
	"LOCKEDBY" NUMBER(19,0),
	"LOCKEDDATE" DATE,
	"INDEXED" NUMBER(3,0),
	"FINDERFLAGS" NUMBER(10,0),
	"MIMETYPE" VARCHAR2(255 CHAR),
	"VERTYPE" VARCHAR2(255 CHAR),
	"VERMAJOR" NUMBER(19,0) NOT NULL ENABLE,
	"VERMINOR" NUMBER(19,0) NOT NULL ENABLE,
	"GUID" RAW(16) DEFAULT sys_guid() NOT NULL ENABLE,
	"PAGENUM" NUMBER(10,0),
	"TRANSIENT" NUMBER(19,0)
   );
--
-- DVERSEXTRADATA
--
  CREATE TABLE "DVERSEXTRADATA" 
   (	"VERSIONID" NUMBER(19,0) NOT NULL ENABLE,
	"TEXTSTR" VARCHAR2(64 CHAR),
	"DATASTRING" CLOB
   );
--
-- DWORKBENCH
--
  CREATE TABLE "DWORKBENCH" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"READYDATE" DATE,
	"OBJECTGUID" RAW(16),
	"VERSIONGUID" RAW(16)
   );
--
-- ELINKALIAS
--
  CREATE TABLE "ELINKALIAS" 
   (	"OBJECTID" NUMBER(19,0) NOT NULL ENABLE,
	"OBJECTIDTYPE" NUMBER(10,0),
	"EMAILALIAS" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- ELINKMESSAGELOG
--
  CREATE TABLE "ELINKMESSAGELOG" 
   (	"ADDEDON" DATE DEFAULT SYSDATE,
	"HEADERS" CLOB,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- ELINKMESSAGES
--
  CREATE TABLE "ELINKMESSAGES" 
   (	"MSGID" NUMBER(10,0) NOT NULL ENABLE,
	"TOFIELD" VARCHAR2(4000 CHAR) NOT NULL ENABLE,
	"CC" VARCHAR2(4000 CHAR),
	"FROMFIELD" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"REPLYTO" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"SENDER" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"SUBJECT" VARCHAR2(128 CHAR),
	"XHEADERS" VARCHAR2(255 CHAR),
	"MESSAGE" CLOB,
	"NODEATTACHMENT" NUMBER(19,0),
	"ATTACHMENT" VARCHAR2(255 CHAR)
   );
--
-- ELINKSUBSCRIPTION
--
  CREATE TABLE "ELINKSUBSCRIPTION" 
   (	"KUAF_ID" NUMBER(19,0) NOT NULL ENABLE,
	"NOTIFYEVENTS_EVENTID" NUMBER(19,0) NOT NULL ENABLE,
	"NOTIFYEVENTS_EVENTACTION" NUMBER(10,0),
	"OBJECTID" NUMBER(19,0),
	"OBJECTIDTYPE" NUMBER(10,0)
   );
--
-- ELINKUNHANDLEDEVENT
--
  CREATE TABLE "ELINKUNHANDLEDEVENT" 
   (	"OBJECTID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- ESS_RECORDS
--
  CREATE TABLE "ESS_RECORDS" 
   (	"ESS_RECORDS" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"ESS_RECORDS_DESC_E" VARCHAR2(64 CHAR),
	"ESS_RECORDS_DESC_F" VARCHAR2(64 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- FACILITY
--
  CREATE TABLE "FACILITY" 
   (	"FACILITY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(128 CHAR),
	"MANAGED" NUMBER(3,0),
	"CHECKBOXFIT" NUMBER(10,0),
	"ADDRESS" VARCHAR2(255 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- FILE_STATUS
--
  CREATE TABLE "FILE_STATUS" 
   (	"FILE_STATUS" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"FILE_STATUS_DESC_E" VARCHAR2(64 CHAR),
	"FILE_STATUS_DESC_F" VARCHAR2(64 CHAR),
	"FOLDERHOLDFLAG" VARCHAR2(32 CHAR),
	"DISPOSITIONFLAG" NUMBER(3,0),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- FILECACHE
--
  CREATE TABLE "FILECACHE" 
   (	"SEQNUM" NUMBER(19,0) NOT NULL ENABLE,
	"UNIQUEID" VARCHAR2(440 CHAR),
	"ADMINSERVER" VARCHAR2(64 CHAR),
	"LASTACCESSED" DATE
   );
--
-- FINGERPRINT
--
  CREATE TABLE "FINGERPRINT" 
   (	"D1" CLOB,
	"D2" CLOB,
	"D3" CLOB,
	"IMAGE" CLOB
   );
--
-- FORMSSEQUENCE
--
  CREATE TABLE "FORMSSEQUENCE" 
   (	"VOLUMEID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"SEQ" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- HOLDTYPE
--
  CREATE TABLE "HOLDTYPE" 
   (	"HOLDTYPE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"HOLDTYPE_DESC_E" VARCHAR2(128 CHAR),
	"HOLDTYPE_DESC_F" VARCHAR2(128 CHAR),
	"DEFAULTPERIOD" NUMBER(5,0),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- ICONBARDISPLAY
--
  CREATE TABLE "ICONBARDISPLAY" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"SETTINGS" CLOB NOT NULL ENABLE
   );
--
-- INDEXTRACERDATA
--
  CREATE TABLE "INDEXTRACERDATA" 
   (	"TRACERID" NUMBER(19,0) NOT NULL ENABLE,
	"SEQ" NUMBER(19,0) NOT NULL ENABLE,
	"OPERATION" NUMBER(5,0) NOT NULL ENABLE,
	"ITERATOR" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"EXTRACTORID" NUMBER(19,0) NOT NULL ENABLE,
	"CREATETIME" DATE NOT NULL ENABLE,
	"EXTRACTTIME" DATE NOT NULL ENABLE,
	"DCSID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DCSCONVERSIONTIME" DATE NOT NULL ENABLE,
	"INDEXTIME" DATE NOT NULL ENABLE
   );
--
-- JURISDCODE
--
  CREATE TABLE "JURISDCODE" 
   (	"JURISDCODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"JURISDCODE_DESC_E" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- JUSTIFICATION
--
  CREATE TABLE "JUSTIFICATION" 
   (	"JUSTIFICATIONID" NUMBER(19,0) NOT NULL ENABLE,
	"JURISDCODE" VARCHAR2(32 CHAR),
	"CITATION" VARCHAR2(4000 CHAR),
	"LEGALREF" VARCHAR2(64 CHAR),
	"RECAFFECTED" VARCHAR2(255 CHAR),
	"RETCODE" VARCHAR2(32 CHAR),
	"RETPERIOD" VARCHAR2(4000 CHAR),
	"DISPOSITION" VARCHAR2(32 CHAR),
	"AGENCY" VARCHAR2(255 CHAR),
	"JUSTIFYDESC_E" VARCHAR2(255 CHAR)
   );
--
-- KDUAL
--
  CREATE TABLE "KDUAL" 
   (	"ONECOLUMN" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- KID
--
  CREATE TABLE "KID" 
   (	"IDTYPE" NUMBER(10,0) NOT NULL ENABLE,
	"ID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- KINI
--
  CREATE TABLE "KINI" 
   (	"INISECTION" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIKEYWORD" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIVALUE" CLOB NOT NULL ENABLE
   );
--
-- KLONG
--
  CREATE TABLE "KLONG" 
   (	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"LONGID" NUMBER(19,0) NOT NULL ENABLE,
	"SEGMENTID" NUMBER(10,0) NOT NULL ENABLE,
	"SEGMENT" CLOB NOT NULL ENABLE
   );
--
-- KMUTEX
--
  CREATE TABLE "KMUTEX" 
   (	"SECTION" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"TIMEADDED" DATE NOT NULL ENABLE
   );
--
-- KSTATE
--
  CREATE TABLE "KSTATE" 
   (	"STATEID" NUMBER(19,0) NOT NULL ENABLE,
	"STATENUM" NUMBER(19,0) NOT NULL ENABLE,
	"STATEUSERNUM" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- KUAF
--
  CREATE TABLE "KUAF" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"TYPE" NUMBER(19,0) NOT NULL ENABLE,
	"SPACEID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"USERDATA" VARCHAR2(4000 CHAR),
	"LEADERID" NUMBER(19,0),
	"DELETED" NUMBER(3,0),
	"USERPWD" VARCHAR2(255 CHAR),
	"GROUPID" NUMBER(19,0),
	"USERPRIVILEGES" NUMBER(10,0),
	"LASTNAME" VARCHAR2(64 CHAR),
	"MIDDLENAME" VARCHAR2(32 CHAR),
	"FIRSTNAME" VARCHAR2(64 CHAR),
	"MAILADDRESS" VARCHAR2(255 CHAR),
	"CONTACT" VARCHAR2(128 CHAR),
	"TITLE" VARCHAR2(64 CHAR),
	"PWDEXPIREDATE" DATE,
	"PWDEXPIREMODE" NUMBER(10,0),
	"SETTINGSNUM" NUMBER(5,0),
	"FAX" VARCHAR2(64 CHAR),
	"OFFICELOCATION" VARCHAR2(255 CHAR),
	"TIMEZONE" NUMBER(5,0),
	"PHOTOID" NUMBER(19,0),
	"GENDER" NUMBER(3,0),
	"BIRTHDAY" DATE,
	"PERSONALEMAIL" VARCHAR2(255 CHAR),
	"HOMEADDRESS1" VARCHAR2(255 CHAR),
	"HOMEADDRESS2" VARCHAR2(255 CHAR),
	"HOMEPHONE" VARCHAR2(64 CHAR),
	"HOMEFAX" VARCHAR2(64 CHAR),
	"CELLULARPHONE" VARCHAR2(64 CHAR),
	"PAGER" VARCHAR2(64 CHAR),
	"HOMEPAGE" VARCHAR2(255 CHAR),
	"FAVORITES1" VARCHAR2(255 CHAR),
	"FAVORITES2" VARCHAR2(255 CHAR),
	"FAVORITES3" VARCHAR2(255 CHAR),
	"INTERESTS" VARCHAR2(4000 CHAR)
   );
--
-- KUAFCHILDREN
--
  CREATE TABLE "KUAFCHILDREN" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"CHILDID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- KUAFIDENTITY
--
  CREATE TABLE "KUAFIDENTITY" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"TYPEID" NUMBER(19,0) NOT NULL ENABLE,
	"VALUE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DISPLAY" CLOB,
	"USERID" NUMBER(19,0)
   );
--
-- KUAFIDENTITYTYPE
--
  CREATE TABLE "KUAFIDENTITYTYPE" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"VALUE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DISPLAY" CLOB
   );
--
-- KUAFPREFS
--
  CREATE TABLE "KUAFPREFS" 
   (	"PREFSID" NUMBER(19,0) NOT NULL ENABLE,
	"PREFSKEYWORD" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"PREFSVALUE" CLOB NOT NULL ENABLE
   );
--
-- KUAFPROXY
--
  CREATE TABLE "KUAFPROXY" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"PROXYID" NUMBER(19,0) NOT NULL ENABLE,
	"PROXYTYPE" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- KUAFRIGHTSLIST
--
  CREATE TABLE "KUAFRIGHTSLIST" 
   (	"RLID" NUMBER(19,0) NOT NULL ENABLE,
	"RLRIGHTID" NUMBER(19,0) NOT NULL ENABLE,
	"RLPROXYTYPE" NUMBER(5,0)
   );
--
-- KUAFRIGHTSLISTNEW
--
  CREATE TABLE "KUAFRIGHTSLISTNEW" 
   (	"RLID" NUMBER(19,0) NOT NULL ENABLE,
	"RLRIGHTID" NUMBER(19,0) NOT NULL ENABLE,
	"RLPROXYTYPE" NUMBER(5,0)
   );
--
-- LABELDEFINITION
--
  CREATE TABLE "LABELDEFINITION" 
   (	"LABELDEFNAME" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"STOCKNAME" VARCHAR2(32 CHAR),
	"LABELCOMMENT" VARCHAR2(255 CHAR),
	"LABELDEFXML" CLOB,
	"LABELTYPE" NUMBER(3,0)
   );
--
-- LABELDEFSPECS
--
  CREATE TABLE "LABELDEFSPECS" 
   (	"DEFSPECS" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"LABELDEFNAME" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"COLUMNSTOSELECT" VARCHAR2(4000 CHAR),
	"TABLENAME" VARCHAR2(128 CHAR)
   );
--
-- LABELQUEUE
--
  CREATE TABLE "LABELQUEUE" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"LABELDEFNAME" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"UNIQUEID" VARCHAR2(64 CHAR),
	"USERID" NUMBER(19,0),
	"CREATEDATETIME" DATE,
	"LABELCONTENT" CLOB,
	"PRINTFLAG" NUMBER(3,0),
	"NOOFCOPIES" NUMBER(10,0)
   );
--
-- LABELSTOCK
--
  CREATE TABLE "LABELSTOCK" 
   (	"STOCKNAME" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"STOCKCOMMENT" VARCHAR2(255 CHAR),
	"LABELSPERPAGE" NUMBER(5,0),
	"STOCKDEFXML" CLOB
   );
--
-- LLATTRBLOBDATA
--
  CREATE TABLE "LLATTRBLOBDATA" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"VERNUM" NUMBER(19,0) NOT NULL ENABLE,
	"SEGMENTID" NUMBER(10,0) NOT NULL ENABLE,
	"SEGMENTBLOB" CLOB
   );
--
-- LLATTRDATA
--
  CREATE TABLE "LLATTRDATA" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"VERNUM" NUMBER(19,0) NOT NULL ENABLE,
	"DEFID" NUMBER(19,0) NOT NULL ENABLE,
	"DEFVERN" NUMBER(19,0) NOT NULL ENABLE,
	"ATTRID" NUMBER(10,0) NOT NULL ENABLE,
	"ATTRTYPE" NUMBER(10,0) NOT NULL ENABLE,
	"CUSTOMID" NUMBER(10,0) NOT NULL ENABLE,
	"ENTRYNUM" NUMBER(10,0) NOT NULL ENABLE,
	"PARENTKEYID" NUMBER(19,0) NOT NULL ENABLE,
	"KEYID" NUMBER(19,0),
	"VALINT" NUMBER(19,0),
	"VALREAL" NUMBER(28,14),
	"VALDATE" DATE,
	"VALSTR" VARCHAR2(255 CHAR),
	"VALLONG" CLOB
   );
--
-- LLCACHE
--
  CREATE TABLE "LLCACHE" 
   (	"OBJECTID" NUMBER(10,0) NOT NULL ENABLE,
	"SEGMENTID" NUMBER(10,0) NOT NULL ENABLE,
	"SEGMENTBLOB" CLOB,
	"OBJECTDATE" DATE NOT NULL ENABLE
   );
--
-- LLCLASSIFY
--
  CREATE TABLE "LLCLASSIFY" 
   (	"CID" NUMBER(19,0) NOT NULL ENABLE,
	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"STATUS" VARCHAR2(32 CHAR),
	"USERCLASSIFIED" VARCHAR2(32 CHAR),
	"SYSTEMCLASSIFIED" VARCHAR2(32 CHAR),
	"CREATEDDATE" DATE,
	"LASTUPDATE" DATE,
	"INHERITFLAG" NUMBER(3,0)
   );
--
-- LLCOMMENTS
--
  CREATE TABLE "LLCOMMENTS" 
   (	"COMMENTSID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"SUBJECT" VARCHAR2(4000 CHAR),
	"COMMENTS" CLOB,
	"PARENTID" NUMBER(19,0) NOT NULL ENABLE,
	"ORDERSTRING" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"ICONID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- LLCOMMNOTIFICATION
--
  CREATE TABLE "LLCOMMNOTIFICATION" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"CID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBTYPES" VARCHAR2(4000 CHAR) NOT NULL ENABLE
   );
--
-- LLCOMMREGISTRY
--
  CREATE TABLE "LLCOMMREGISTRY" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- LLDIRECTORY
--
  CREATE TABLE "LLDIRECTORY" 
   (	"CID" NUMBER(19,0) NOT NULL ENABLE,
	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"CREATEDDATE" DATE NOT NULL ENABLE,
	"SUBTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"CIDSUBTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"VOLUMEID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- LLEVENTQUEUE
--
  CREATE TABLE "LLEVENTQUEUE" 
   (	"EVENTSEQNO" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTHANDLERID" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTDATE" DATE NOT NULL ENABLE,
	"EVENTSOURCE" NUMBER(19,0),
	"EVENTID" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTACTION" NUMBER(5,0),
	"EVENTINT1" NUMBER(19,0),
	"EVENTINT2" NUMBER(19,0),
	"EVENTINT3" NUMBER(19,0),
	"EVENTINT4" NUMBER(19,0),
	"EVENTSTR5" VARCHAR2(255 CHAR),
	"EVENTSTR6" VARCHAR2(255 CHAR),
	"USERID" NUMBER(19,0)
   );
--
-- LLFORUMS
--
  CREATE TABLE "LLFORUMS" 
   (	"PARENTID" NUMBER(19,0) NOT NULL ENABLE,
	"VOLUMEID" NUMBER(19,0) NOT NULL ENABLE,
	"CATEGORYID" NUMBER(19,0)
   );
--
-- LLFORUMSDIRECTORY
--
  CREATE TABLE "LLFORUMSDIRECTORY" 
   (	"DIRECTORYID" NUMBER(19,0) NOT NULL ENABLE,
	"FORUMID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- LLFORUMSORDER
--
  CREATE TABLE "LLFORUMSORDER" 
   (	"FORUMID" NUMBER(19,0) NOT NULL ENABLE,
	"TOPICID" NUMBER(19,0) NOT NULL ENABLE,
	"ORDERSTRING" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"TOPICLEVEL" NUMBER(5,0) NOT NULL ENABLE,
	"TOPICSTATUS" NUMBER(5,0),
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"MODIFYDATE" DATE NOT NULL ENABLE,
	"PRIORITY" NUMBER(5,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- LLMULTIVOLUMEREGISTRY
--
  CREATE TABLE "LLMULTIVOLUMEREGISTRY" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VOLUMEID" NUMBER(19,0) NOT NULL ENABLE,
	"DEFAULTID" NUMBER(19,0)
   );
--
-- LLPOLLING
--
  CREATE TABLE "LLPOLLING" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"COMMENTNUM" NUMBER(10,0) NOT NULL ENABLE,
	"POLLDATA" CLOB
   );
--
-- LLPROSPECTOR
--
  CREATE TABLE "LLPROSPECTOR" 
   (	"RESULTID" NUMBER(10,0) NOT NULL ENABLE,
	"FILEDATE" VARCHAR2(255 CHAR),
	"FILENAME" VARCHAR2(255 CHAR),
	"FILESIZE" VARCHAR2(255 CHAR),
	"FILETIME" VARCHAR2(255 CHAR),
	"INFO_SOURCE" NUMBER(19,0) NOT NULL ENABLE,
	"MATCH_TIME" DATE NOT NULL ENABLE,
	"OTDATAID" NUMBER(19,0),
	"OTFILTERMIMETYPE" VARCHAR2(255 CHAR),
	"OTOBJECT" VARCHAR2(4000 CHAR) NOT NULL ENABLE,
	"OTSCORE" NUMBER(19,0) NOT NULL ENABLE,
	"OTSUMMARY" CLOB,
	"PROSPECTORID" NUMBER(19,0) NOT NULL ENABLE,
	"STATUS" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"OTLOCATIONLINK" VARCHAR2(4000 CHAR),
	"OTLOCATIONTITLE" VARCHAR2(4000 CHAR)
   );
--
-- LLPROSPECTORDATA
--
  CREATE TABLE "LLPROSPECTORDATA" 
   (	"PROSPECTORID" NUMBER(19,0) NOT NULL ENABLE,
	"PROSPECTORDATA" CLOB
   );
--
-- LLPROSPECTORREGISTRY
--
  CREATE TABLE "LLPROSPECTORREGISTRY" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- LLQUESTIONS
--
  CREATE TABLE "LLQUESTIONS" 
   (	"QUESTIONID" NUMBER(19,0) NOT NULL ENABLE,
	"URGENCY" NUMBER(5,0) NOT NULL ENABLE,
	"EXPIRATIONDATE" DATE,
	"CLOSED" NUMBER(5,0) NOT NULL ENABLE,
	"CLOSEDDATE" DATE,
	"COMMENTSNUM" NUMBER(5,0) NOT NULL ENABLE,
	"SUGGESTEDNUM" NUMBER(5,0) NOT NULL ENABLE,
	"REJECTEDNUM" NUMBER(5,0) NOT NULL ENABLE,
	"ACCEPTEDNUM" NUMBER(5,0) NOT NULL ENABLE
   );
--
-- LLSYSTEMDATA
--
  CREATE TABLE "LLSYSTEMDATA" 
   (	"SECTION" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"KEYWORD" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"VALUE" CLOB NOT NULL ENABLE
   );
--
-- LOAD
--
  CREATE TABLE "LOAD" 
   (	"ID_NUMBER" VARCHAR2(20),
	"NAME" VARCHAR2(50),
	"SURNAME" VARCHAR2(30),
	"GRANT_TYPE" VARCHAR2(10),
	"RES_CODE" VARCHAR2(10)
   );
--
-- LOCATORLABELS
--
  CREATE TABLE "LOCATORLABELS" 
   (	"FACILITY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"AREA" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"BOXLOCATOR" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"LABELDEFNAME" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"USERID" NUMBER(19,0),
	"CREATEDATETIME" DATE,
	"LABELCONTENT" CLOB,
	"PRINTFLAG" NUMBER(3,0),
	"NOOFCOPIES" NUMBER(10,0)
   );
--
-- LOCATORTYPE
--
  CREATE TABLE "LOCATORTYPE" 
   (	"LOCATORTYPE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(128 CHAR),
	"LOCATORTYPEDEPTH" NUMBER(28,14),
	"LOCATORTYPEHEIGHT" NUMBER(28,14),
	"LOCATORTYPELENGTH" NUMBER(28,14),
	"LOCATORTYPETOTAL" NUMBER(28,14),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- LOCLOCATORTYPE
--
  CREATE TABLE "LOCLOCATORTYPE" 
   (	"FACILITY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"AREA" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"BOXLOCATOR" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"LOCATORTYPE" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- MEDIATYPES
--
  CREATE TABLE "MEDIATYPES" 
   (	"MEDIATYPEID" NUMBER(19,0) NOT NULL ENABLE,
	"FIELDNUMBER" NUMBER(10,0) NOT NULL ENABLE,
	"FIELDNAME" VARCHAR2(128 CHAR),
	"FIELDDISPLAY" VARCHAR2(128 CHAR),
	"FIELDTYPE" NUMBER(5,0),
	"FIELDSIZE" NUMBER(10,0),
	"FIELDORDER" NUMBER(10,0),
	"POPUPVALS" VARCHAR2(4000 CHAR),
	"DEFAULTVAL" VARCHAR2(128 CHAR),
	"FIELDREQUIRED" NUMBER(3,0)
   );
--
-- METADATALANGUAGES
--
  CREATE TABLE "METADATALANGUAGES" 
   (	"LANGUAGECODE" VARCHAR2(6 CHAR) NOT NULL ENABLE,
	"ENABLED" NUMBER(3,0) NOT NULL ENABLE
   );
--
-- MIS_LIVELINK
--
  CREATE TABLE "MIS_LIVELINK" 
   (	"ID_NUMBER" VARCHAR2(50),
	"REGION_ID" VARCHAR2(2),
	"FILE_NUMBER" VARCHAR2(50),
	"BIN_ID" VARCHAR2(50),
	"BOX_NUMBER" VARCHAR2(50),
	"MINI_BOX_NUMBER" VARCHAR2(50),
	"POSITION" VARCHAR2(50),
	"RECORD_CHANGE" VARCHAR2(100),
	"DATE_CHANGE" VARCHAR2(50),
	"NAME" VARCHAR2(100),
	"SURNAME" VARCHAR2(100),
	"GRANT_TYPE" VARCHAR2(50),
	"APP_DATE" VARCHAR2(50),
	"REGISTRY_TYPE" VARCHAR2(50),
	"SUB_REGISTRY_TYPE" VARCHAR2(50),
	"MIS_STATUS" VARCHAR2(50)
   );
--
-- MIS_LIVELINK_FILE
--
  CREATE TABLE "MIS_LIVELINK_FILE" 
   (	"ID_NUMBER" VARCHAR2(20),
	"REGION_ID" VARCHAR2(2),
	"FILE_NUMBER" VARCHAR2(20),
	"BIN_ID" VARCHAR2(10),
	"BOX_NUMBER" VARCHAR2(10),
	"POSITION" VARCHAR2(10),
	"RECORD_CHANGE" VARCHAR2(50),
	"DATE_CHANGE" VARCHAR2(30),
	"NAME" VARCHAR2(50),
	"SURNAME" VARCHAR2(50),
	"GRANT_TYPE" VARCHAR2(30),
	"APP_DATE" VARCHAR2(30),
	"REGISTRY_TYPE" VARCHAR2(30),
	"SUB_REGISTRY_TYPE" VARCHAR2(30),
	"MIS_STATUS" VARCHAR2(30)
   );
--
-- MIS_LIVELINK_FILE_LOG
--
  CREATE TABLE "MIS_LIVELINK_FILE_LOG" 
   (	"MSG" VARCHAR2(200)
   );
--
-- MIS_LIVELINK_LOAD_LC
--
  CREATE TABLE "MIS_LIVELINK_LOAD_LC" 
   (	"ID_NUMBER" VARCHAR2(50),
	"REGION_ID" VARCHAR2(2),
	"FILE_NUMBER" VARCHAR2(50),
	"BIN_ID" VARCHAR2(50),
	"BOX_NUMBER" VARCHAR2(50),
	"MINI_BOX_NUMBER" VARCHAR2(50),
	"POSITION" VARCHAR2(50),
	"RECORD_CHANGE" VARCHAR2(100),
	"DATE_CHANGE" VARCHAR2(50),
	"NAME" VARCHAR2(100),
	"SURNAME" VARCHAR2(100),
	"GRANT_TYPE" VARCHAR2(50),
	"APP_DATE" VARCHAR2(50),
	"REGISTRY_TYPE" VARCHAR2(50),
	"SUB_REGISTRY_TYPE" VARCHAR2(50),
	"MIS_STATUS" VARCHAR2(50)
   );
--
-- MIS_LIVELINK_LOAD_LC_LOG
--
  CREATE TABLE "MIS_LIVELINK_LOAD_LC_LOG" 
   (	"MSG" VARCHAR2(200)
   );
--
-- MIS_LIVELINK_PO
--
  CREATE TABLE "MIS_LIVELINK_PO" 
   (	"ID_NUMBER" VARCHAR2(20),
	"REGION_ID" VARCHAR2(2),
	"FILE_NUMBER" VARCHAR2(15),
	"BIN_ID" VARCHAR2(10),
	"BOX_NUMBER" VARCHAR2(10),
	"POSITION" VARCHAR2(10),
	"NAME" VARCHAR2(50),
	"SURNAME" VARCHAR2(200),
	"RESULT" VARCHAR2(1000),
	"GRANT_TYPE" VARCHAR2(2),
	"APP_DATE" VARCHAR2(20)
   );
--
-- MIS_LIVELINK_TBL
--
  CREATE TABLE "MIS_LIVELINK_TBL" 
   (	"ID_NUMBER" VARCHAR2(50),
	"REGION_ID" VARCHAR2(2),
	"FILE_NUMBER" VARCHAR2(50),
	"BIN_ID" VARCHAR2(50),
	"BOX_NUMBER" VARCHAR2(50),
	"MINI_BOX_NUMBER" VARCHAR2(50),
	"POSITION" VARCHAR2(50),
	"RECORD_CHANGE" VARCHAR2(100),
	"DATE_CHANGE" VARCHAR2(50),
	"NAME" VARCHAR2(100),
	"SURNAME" VARCHAR2(100),
	"GRANT_TYPE" VARCHAR2(50),
	"APP_DATE" VARCHAR2(50),
	"REGISTRY_TYPE" VARCHAR2(50),
	"SUB_REGISTRY_TYPE" VARCHAR2(50),
	"MIS_STATUS" VARCHAR2(50)
   );
--
-- MIS_LIVELINK_TBL_LOG
--
  CREATE TABLE "MIS_LIVELINK_TBL_LOG" 
   (	"MSG" VARCHAR2(200)
   );
--
-- NGD_KINI
--
  CREATE TABLE "NGD_KINI" 
   (	"INISECTION" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIKEYWORD" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIVALUE" CLOB NOT NULL ENABLE
   );
--
-- NGD_NEWITEMHIST
--
  CREATE TABLE "NGD_NEWITEMHIST" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"ITEMSOURCE" VARCHAR2(4000 CHAR)
   );
--
-- NICKNAME
--
  CREATE TABLE "NICKNAME" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NICKNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"LOWERCASENICKNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DOMAIN" VARCHAR2(255 CHAR)
   );
--
-- NOTIFYEVENTS
--
  CREATE TABLE "NOTIFYEVENTS" 
   (	"EVENTSEQNO" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTDATE" DATE NOT NULL ENABLE,
	"EVENTSOURCE" NUMBER(19,0),
	"EVENTID" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTACTION" NUMBER(5,0),
	"EVENTINT1" NUMBER(19,0),
	"EVENTINT2" NUMBER(19,0),
	"EVENTINT3" NUMBER(19,0),
	"EVENTINT4" NUMBER(19,0),
	"EVENTSTR5" VARCHAR2(255 CHAR),
	"EVENTSTR6" VARCHAR2(255 CHAR)
   );
--
-- NOTIFYINTERESTS2
--
  CREATE TABLE "NOTIFYINTERESTS2" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"INTERESTLEVEL" NUMBER(3,0) NOT NULL ENABLE,
	"EVENTIDMASK" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- NOTIFYMESSAGES
--
  CREATE TABLE "NOTIFYMESSAGES" 
   (	"MESSAGESEQNO" NUMBER(19,0) NOT NULL ENABLE,
	"INTERESTLEVEL" NUMBER(3,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTDATE" DATE NOT NULL ENABLE,
	"EVENTSOURCE" NUMBER(19,0),
	"EVENTID" NUMBER(19,0),
	"EVENTINT1" NUMBER(19,0),
	"EVENTINT2" NUMBER(19,0),
	"SORTINT1" NUMBER(5,0) NOT NULL ENABLE,
	"SORTSTR2" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"SORTINT3" NUMBER(5,0) NOT NULL ENABLE,
	"MESSAGE" VARCHAR2(4000 CHAR)
   );
--
-- OBJECT
--
  CREATE TABLE "OBJECT" 
   (	"OBJECT" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"OBJECT_COLUMNS" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"RIMSFORMNAME" VARCHAR2(128 CHAR),
	"OBJECT_DESC_E" VARCHAR2(128 CHAR),
	"OBJECT_DESC_F" VARCHAR2(128 CHAR)
   );
--
-- OI_STATUS
--
  CREATE TABLE "OI_STATUS" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NODES_READ" NUMBER(19,0),
	"TOTAL_NODES" NUMBER(19,0),
	"IMPORT_FILE" VARCHAR2(4000 CHAR),
	"LOG_FILE" VARCHAR2(4000 CHAR),
	"SERVER_ID" VARCHAR2(1024 CHAR),
	"START_DATE" DATE,
	"END_DATE" DATE,
	"STATUS" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- OLDPASSWORDS
--
  CREATE TABLE "OLDPASSWORDS" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"USERPWD" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DATECHANGED" DATE NOT NULL ENABLE,
	"LASTCHANGED" NUMBER(3,0) NOT NULL ENABLE
   );
--
-- OTDOCUMENTHOLD
--
  CREATE TABLE "OTDOCUMENTHOLD" 
   (	"HOLDID" NUMBER(10,0) NOT NULL ENABLE,
	"OTITEMID" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"OTVOLUMEID" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"ACTIVEHOLD" NUMBER(10,0)
   );
--
-- OTEMAILBODIES
--
  CREATE TABLE "OTEMAILBODIES" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"SEGMENTID" NUMBER(19,0) NOT NULL ENABLE,
	"SEGMENTDATA" CLOB
   );
--
-- OTEMAILCONVERSATIONIDS
--
  CREATE TABLE "OTEMAILCONVERSATIONIDS" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"CONVERSATIONID" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- OTEMAILCUSTOMPROPERTIES
--
  CREATE TABLE "OTEMAILCUSTOMPROPERTIES" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"PROPERTYNAME" VARCHAR2(255 CHAR),
	"PROPERTYTYPE" NUMBER(19,0),
	"PROPERTYVALUE" VARCHAR2(4000 CHAR)
   );
--
-- OTEMAILLOCATIONMESSAGEIDS
--
  CREATE TABLE "OTEMAILLOCATIONMESSAGEIDS" 
   (	"LOCATIONNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"MESSAGEID" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- OTEMAILMESSAGEIDS
--
  CREATE TABLE "OTEMAILMESSAGEIDS" 
   (	"NODEID" NUMBER(19,0),
	"MESSAGEID" VARCHAR2(128 CHAR) NOT NULL ENABLE
   );
--
-- OTEMAILPARTICIPANTS
--
  CREATE TABLE "OTEMAILPARTICIPANTS" 
   (	"NODEID" NUMBER(19,0),
	"EMAILADDRESS" VARCHAR2(255 CHAR),
	"FULLNAME" VARCHAR2(255 CHAR),
	"SYSTEMPROVIDED" NUMBER(19,0),
	"PARTICIPANTROLE" NUMBER(19,0),
	"PARTICIPANTTYPE" NUMBER(19,0)
   );
--
-- OTEMAILPROPERTIES
--
  CREATE TABLE "OTEMAILPROPERTIES" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"OTEMAILSUBJECT" VARCHAR2(255 CHAR),
	"OTEMAILTO" VARCHAR2(4000 CHAR),
	"OTEMAILCC" VARCHAR2(4000 CHAR),
	"OTEMAILFROM" VARCHAR2(255 CHAR),
	"OTEMAILSENTDATE" DATE,
	"OTEMAILRECEIVEDDATE" DATE,
	"BODYFORMAT" NUMBER(19,0),
	"HASATTACHMENTS" NUMBER(19,0),
	"INSERTTYPE" NUMBER(19,0),
	"VERSION" NUMBER(19,0),
	"MESSAGETYPE" NUMBER(19,0),
	"MESSAGEID" VARCHAR2(255 CHAR),
	"SIGNEDENCRYPTED" NUMBER(19,0),
	"OTEMAILBCC" VARCHAR2(4000 CHAR),
	"OTEMAILONBEHALFOF" VARCHAR2(255 CHAR)
   );
--
-- PHYSITEMCO
--
  CREATE TABLE "PHYSITEMCO" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"COPYNUMBER" NUMBER(10,0) NOT NULL ENABLE,
	"LOCATION" VARCHAR2(64 CHAR),
	"UNIQUEID" VARCHAR2(64 CHAR),
	"CHARGEDTO" VARCHAR2(64 CHAR),
	"USERID" NUMBER(19,0),
	"CHARGEDATE" DATE,
	"RETURNBY" DATE,
	"NUMREMINDERS" NUMBER(10,0),
	"CPARENTID" NUMBER(19,0),
	"BORROWCOMMENT" VARCHAR2(255 CHAR),
	"BOXID" NUMBER(19,0),
	"PICKUP" NUMBER(3,0),
	"OBTAINEDBYID" NUMBER(19,0),
	"OBTAINEDBY" VARCHAR2(64 CHAR),
	"BORROWPERFORMERID" NUMBER(19,0),
	"ACTUALBORROWDATE" DATE,
	"SECURITYOVERRIDE" NUMBER(3,0),
	"ACKNOWLEDGE" NUMBER(3,0),
	"ACKNGUID" NUMBER(19,0)
   );
--
-- PHYSITEMDATA
--
  CREATE TABLE "PHYSITEMDATA" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"MEDIATYPEID" NUMBER(19,0) NOT NULL ENABLE,
	"DEFAULTLOCATION" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"FROMDATE" DATE,
	"TODATE" DATE,
	"CONTAINERNUMBER" NUMBER(10,0),
	"PHYSITEMKEYWORDS" VARCHAR2(4000 CHAR),
	"LOCATORTYPE" VARCHAR2(32 CHAR),
	"AREA" VARCHAR2(32 CHAR),
	"FACILITY" VARCHAR2(32 CHAR),
	"BOXLOCATOR" VARCHAR2(32 CHAR),
	"DATESENT" DATE,
	"REFRATE" VARCHAR2(32 CHAR),
	"TRANSFERID" VARCHAR2(64 CHAR),
	"TRANSRECEIVED" DATE,
	"OFFSITESTORID" VARCHAR2(32 CHAR),
	"CLIENTID" NUMBER(19,0),
	"CLIENT" VARCHAR2(64 CHAR),
	"TEMPORARYID" VARCHAR2(32 CHAR)
   );
--
-- PHYSITEMEXT
--
  CREATE TABLE "PHYSITEMEXT" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"FIELDNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"FIELDVALUE" VARCHAR2(255 CHAR)
   );
--
-- PHYSITEMHISTORY
--
  CREATE TABLE "PHYSITEMHISTORY" 
   (	"HID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"CHARGEDATE" DATE,
	"RETURNBY" DATE,
	"USERID" NUMBER(19,0),
	"CHARGEDTO" VARCHAR2(64 CHAR),
	"RETURNDATE" DATE,
	"BORROWCOMMENT" VARCHAR2(255 CHAR),
	"OBTAINEDBYID" NUMBER(19,0),
	"OBTAINEDBY" VARCHAR2(64 CHAR),
	"BORROWPERFORMERID" NUMBER(19,0),
	"ACTUALBORROWDATE" DATE,
	"RETURNPERFORMERID" NUMBER(19,0),
	"ACTUALRETURNDATE" DATE,
	"SECURITYOVERRIDE" NUMBER(3,0),
	"RETURNCOMMENT" VARCHAR2(255 CHAR),
	"ACKNOWLEDGE" NUMBER(3,0)
   );
--
-- PHYSITEMMICRO
--
  CREATE TABLE "PHYSITEMMICRO" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"MICROROLLNUM" NUMBER(10,0),
	"MICRODOCNUM" NUMBER(10,0),
	"MICROPAGENUM" NUMBER(10,0)
   );
--
-- PHYSITEMREQUEST
--
  CREATE TABLE "PHYSITEMREQUEST" 
   (	"REQUESTID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"DATEOFREQUEST" DATE NOT NULL ENABLE,
	"REQUESTDATE" DATE NOT NULL ENABLE,
	"REQUESTCOMMENT" VARCHAR2(255 CHAR),
	"REQUESTTYPE" VARCHAR2(32 CHAR),
	"CONTACTPERSON" VARCHAR2(64 CHAR),
	"ADDRESS" VARCHAR2(255 CHAR),
	"PHONE" VARCHAR2(32 CHAR),
	"FAX" VARCHAR2(32 CHAR),
	"EMAIL" VARCHAR2(128 CHAR)
   );
--
-- PHYSOBJCLIENT
--
  CREATE TABLE "PHYSOBJCLIENT" 
   (	"PHYSOBJCLIENT" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(64 CHAR),
	"EMAIL" VARCHAR2(255 CHAR),
	"ADDRESS" VARCHAR2(255 CHAR),
	"PHONE" VARCHAR2(64 CHAR),
	"CLIENTTYPE" NUMBER(3,0) NOT NULL ENABLE
   );
--
-- PHYSOBJFUNCACCESS
--
  CREATE TABLE "PHYSOBJFUNCACCESS" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"IDTYPE" NUMBER(10,0),
	"FUNCID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- PHYSOBJKEYWORDS
--
  CREATE TABLE "PHYSOBJKEYWORDS" 
   (	"NODEID" NUMBER(10,0) NOT NULL ENABLE,
	"PHYSOBJKEYWORD" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"OBJECTFIELD" VARCHAR2(64 CHAR) NOT NULL ENABLE
   );
--
-- PHYSOBJKINI
--
  CREATE TABLE "PHYSOBJKINI" 
   (	"INISECTION" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIKEYWORD" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIVALUE" VARCHAR2(255 CHAR)
   );
--
-- PHYSOBJLOCATION
--
  CREATE TABLE "PHYSOBJLOCATION" 
   (	"PHYSOBJLOCATION" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(64 CHAR),
	"EMAIL" VARCHAR2(255 CHAR),
	"CUSTODIANSITE" VARCHAR2(32 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- POLL_HISTORY
--
  CREATE TABLE "POLL_HISTORY" 
   (	"POLL_DATE" DATE NOT NULL ENABLE,
	"F_NAME" VARCHAR2(250) NOT NULL ENABLE,
	"POLL_STATUS" VARCHAR2(50),
	"ATTEMPT" NUMBER(10,0),
	"LINE_NO" NUMBER(10,0),
	"LINE_STATUS" VARCHAR2(20),
	"MESSAGE" LONG,
	"PROCESS" VARCHAR2(20),
	"POLL_ID" NUMBER(10,0)
   );
--
-- POWF_CLEARANCE
--
  CREATE TABLE "POWF_CLEARANCE" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"PARPOS" NUMBER(5,0) NOT NULL ENABLE,
	"POS" NUMBER(5,0) NOT NULL ENABLE,
	"CLEARANCE" VARCHAR2(32 CHAR)
   );
--
-- POWF_CREATEITEMS
--
  CREATE TABLE "POWF_CREATEITEMS" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"RELTYPE" NUMBER(3,0) NOT NULL ENABLE,
	"PARPOS" NUMBER(5,0) NOT NULL ENABLE,
	"POS" NUMBER(5,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR),
	"DCOMMENT" VARCHAR2(4000 CHAR),
	"LOCATION" VARCHAR2(64 CHAR),
	"UNIQUEID" VARCHAR2(32 CHAR),
	"KEYWORDS" VARCHAR2(4000 CHAR),
	"NUMBEROFCOPIES" NUMBER(5,0),
	"FROMDATE" DATE,
	"TODATE" DATE,
	"LOCATORTYPE" VARCHAR2(32 CHAR),
	"REFRATE" VARCHAR2(32 CHAR),
	"OFFSITESTORID" VARCHAR2(32 CHAR),
	"CLIENT_ID" VARCHAR2(32 CHAR),
	"CLIENT_NAME" VARCHAR2(32 CHAR),
	"TEMPORARYID" VARCHAR2(32 CHAR),
	"GENERATELABEL" NUMBER(3,0),
	"LABELTYPE" VARCHAR2(32 CHAR),
	"NUMBEROFLABELS" NUMBER(5,0),
	"NUMBEROFITEMS" NUMBER(5,0),
	"CLASS_ID" VARCHAR2(32 CHAR),
	"CLASS_PATH" VARCHAR2(255 CHAR),
	"CATEGORY_ID" VARCHAR2(32 CHAR),
	"CATEGORY_PATH" VARCHAR2(255 CHAR),
	"TARGET_ELEM" VARCHAR2(32 CHAR),
	"TARGET_ID" VARCHAR2(32 CHAR),
	"TARGET_PATH" VARCHAR2(255 CHAR),
	"TARGET_ATTRSELECT" VARCHAR2(32 CHAR),
	"MAP_ID" NUMBER(19,0),
	"TASKID" NUMBER(19,0),
	"ACTION" VARCHAR2(32 CHAR)
   );
--
-- POWF_DATADEF
--
  CREATE TABLE "POWF_DATADEF" 
   (	"MAPID" NUMBER(19,0) NOT NULL ENABLE,
	"TASKID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"PARTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"CHITYPE" NUMBER(19,0),
	"GUID" RAW(16) DEFAULT sys_guid() NOT NULL ENABLE
   );
--
-- POWF_ITEMEXT
--
  CREATE TABLE "POWF_ITEMEXT" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"PARPOS" NUMBER(5,0) NOT NULL ENABLE,
	"POS" NUMBER(5,0) NOT NULL ENABLE,
	"FIELDNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"FIELDVALUE" VARCHAR2(255 CHAR)
   );
--
-- POWF_SUPPMARK
--
  CREATE TABLE "POWF_SUPPMARK" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"PARPOS" NUMBER(5,0) NOT NULL ENABLE,
	"POS" NUMBER(5,0) NOT NULL ENABLE,
	"SUPPMARK" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- PROCESSSTATS
--
  CREATE TABLE "PROCESSSTATS" 
   (	"DATAID" NUMBER(19,0),
	"PROCESSTYPE" VARCHAR2(32 CHAR),
	"STARTDATE" DATE,
	"ENDDATE" DATE,
	"FORMAT" NUMBER(19,0),
	"DATA" CLOB
   );
--
-- PROJECTOVERVIEWSETTINGS
--
  CREATE TABLE "PROJECTOVERVIEWSETTINGS" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"NUMTODISPLAY" NUMBER(10,0) NOT NULL ENABLE,
	"SECTIONSTOSHOW" CLOB NOT NULL ENABLE
   );
--
-- PROVENANCETYPE
--
  CREATE TABLE "PROVENANCETYPE" 
   (	"PROVENANCETYPE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"PROVENANCETYPE_DESC_E" VARCHAR2(255 CHAR),
	"PROVENANCETYPE_DESC_ADD" VARCHAR2(255 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- PROVIDERCONFIRMMOVE
--
  CREATE TABLE "PROVIDERCONFIRMMOVE" 
   (	"RETRYID" NUMBER(19,0) NOT NULL ENABLE,
	"ENTRYTYPE" NUMBER(3,0) NOT NULL ENABLE,
	"QUEUINGDATE" DATE NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONTYPE" VARCHAR2(32 CHAR),
	"NEWPROVIDERID" NUMBER(19,0) NOT NULL ENABLE,
	"EXTRAINFO" VARCHAR2(4000 CHAR)
   );
--
-- PROVIDERDATA
--
  CREATE TABLE "PROVIDERDATA" 
   (	"PROVIDERID" NUMBER(19,0) NOT NULL ENABLE,
	"REFCNT" NUMBER(10,0),
	"PROVIDERTYPE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"PROVIDERDATA" CLOB NOT NULL ENABLE
   );
--
-- PROVIDERRETRY
--
  CREATE TABLE "PROVIDERRETRY" 
   (	"RETRYID" NUMBER(19,0) NOT NULL ENABLE,
	"ENTRYTYPE" NUMBER(3,0) NOT NULL ENABLE,
	"QUEUINGDATE" DATE NOT NULL ENABLE,
	"PROVIDERNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"PROVIDERDATA" CLOB NOT NULL ENABLE,
	"ERRORTYPE" NUMBER(5,0),
	"DELETEERROR" VARCHAR2(4000 CHAR),
	"RETENTIONEXPIRYDATE" DATE,
	"EXTRAINFO" VARCHAR2(4000 CHAR),
	"HASHSTR" VARCHAR2(64 CHAR) NOT NULL ENABLE
   );
--
-- RECD_ADMINCONFIG
--
  CREATE TABLE "RECD_ADMINCONFIG" 
   (	"SECTIONID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ENABLED" VARCHAR2(32 CHAR),
	"CONFIG" CLOB
   );
--
-- RECD_HISTORY
--
  CREATE TABLE "RECD_HISTORY" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"EVENTDATE" DATE NOT NULL ENABLE,
	"CLASS" NUMBER(5,0) NOT NULL ENABLE,
	"SUBTYPE" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "RECD_HISTORY_PRIMARY" PRIMARY KEY ("USERID","DATAID","CLASS") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- RECD_HOT
--
  CREATE TABLE "RECD_HOT" 
   (	"ORDERIDEN" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"SECTIONID" NUMBER(10,0) NOT NULL ENABLE,
	"SUBTYPE" NUMBER(19,0)
   );
--
-- RECD_OPERATIONSUMMARY
--
  CREATE TABLE "RECD_OPERATIONSUMMARY" 
   (	"FIRSTACCESS" DATE NOT NULL ENABLE,
	"RECENTACCESS" DATE NOT NULL ENABLE,
	"MEANDATE" NUMBER(28,14) NOT NULL ENABLE,
	"MEANSQDATE" NUMBER(28,14) NOT NULL ENABLE,
	"MEANTIME" NUMBER(28,14) NOT NULL ENABLE,
	"MEANSQTIME" NUMBER(28,14) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"OBJTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"ACTION" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"REFCOUNT" NUMBER(19,0) NOT NULL ENABLE,
	"SUBTYPE" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RECD_OPERATIONTRACKING
--
  CREATE TABLE "RECD_OPERATIONTRACKING" 
   (	"OPERATIONIDEN" NUMBER(10,0) NOT NULL ENABLE,
	"OPERATIONDATE" DATE NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"OBJTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"ACTION" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"FROMLOCATION" VARCHAR2(64 CHAR),
	"PATHINFO" VARCHAR2(4000 CHAR)
   );
--
-- RECD_OPINIONSUMMARY
--
  CREATE TABLE "RECD_OPINIONSUMMARY" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"RATINGSUM" NUMBER(28,14),
	"RATINGNUM" NUMBER(19,0),
	"RATINGAVG" NUMBER(28,14),
	"OPINIONDATEMAX" DATE
   );
--
-- RECD_OPINIONTRACKING
--
  CREATE TABLE "RECD_OPINIONTRACKING" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"OPINIONDATE" DATE NOT NULL ENABLE,
	"RATING" NUMBER(28,14),
	"USERCOMMENT" VARCHAR2(64 CHAR),
	"USEREXPLANATION" VARCHAR2(4000 CHAR)
   );
--
-- RECD_SYSTEMSTATSSUMMARY
--
  CREATE TABLE "RECD_SYSTEMSTATSSUMMARY" 
   (	"MEANDATE" NUMBER(28,14) NOT NULL ENABLE,
	"MEANSQDATE" NUMBER(28,14) NOT NULL ENABLE,
	"MEANTIME" NUMBER(28,14) NOT NULL ENABLE,
	"MEANSQTIME" NUMBER(28,14) NOT NULL ENABLE,
	"MEANCLICKSSEC" NUMBER(28,14) NOT NULL ENABLE,
	"MEANSQCLICKSSEC" NUMBER(28,14) NOT NULL ENABLE,
	"REFCOUNT" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RECURRENCE
--
  CREATE TABLE "RECURRENCE" 
   (	"RECURRENCE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(128 CHAR),
	"NUMBEROFDAYS" NUMBER(5,0) NOT NULL ENABLE,
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- REFRATE
--
  CREATE TABLE "REFRATE" 
   (	"REFRATE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- REGIONMAP
--
  CREATE TABLE "REGIONMAP" 
   (	"SEARCHMANAGERID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(440 CHAR) NOT NULL ENABLE,
	"DISPLAYNAME" VARCHAR2(4000 CHAR) NOT NULL ENABLE,
	"QUERYABLE" NUMBER(3,0),
	"DISPLAYABLE" NUMBER(3,0),
	"SEARCHBYDEFAULT" NUMBER(3,0),
	"SORTABLE" NUMBER(3,0),
	"FACET" NUMBER(3,0),
	"RWRAM" VARCHAR2(2 CHAR),
	"UORAM" VARCHAR2(2 CHAR),
	"RORAM" VARCHAR2(2 CHAR),
	"PURGED" NUMBER(3,0),
	"RDRAM" VARCHAR2(2 CHAR),
	"FACETTYPE" VARCHAR2(4 CHAR),
	CONSTRAINT "REGIONMAP_PRIMARY" PRIMARY KEY ("SEARCHMANAGERID","NAME") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
  OVERFLOW;
--
-- RELATTYPE
--
  CREATE TABLE "RELATTYPE" 
   (	"RELATTYPE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RELATTYPE_DESC" VARCHAR2(128 CHAR),
	"RECIPROCAL" VARCHAR2(32 CHAR)
   );
--
-- RENDITIONFOLDERS
--
  CREATE TABLE "RENDITIONFOLDERS" 
   (	"FOLDERID" NUMBER(19,0) NOT NULL ENABLE,
	"DIRECTORY" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"MIMETYPE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"RENDITIONTYPE" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- RENDITIONMIMETYPERULES
--
  CREATE TABLE "RENDITIONMIMETYPERULES" 
   (	"MIMETYPERULEID" NUMBER(19,0) NOT NULL ENABLE,
	"MIMETYPERULENAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"GLOBALRENDITION" NUMBER(19,0) NOT NULL ENABLE,
	"SETTINGS" CLOB
   );
--
-- RENDITIONNODEMIMETYPERULES
--
  CREATE TABLE "RENDITIONNODEMIMETYPERULES" 
   (	"NODERULEID" NUMBER(19,0) NOT NULL ENABLE,
	"MIMETYPERULEID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RENDITIONNODERULES
--
  CREATE TABLE "RENDITIONNODERULES" 
   (	"NODERULEID" NUMBER(19,0) NOT NULL ENABLE,
	"NODERULETYPE" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"ENABLED" NUMBER(19,0) NOT NULL ENABLE,
	"INCLUDESUBFOLDERS" NUMBER(19,0) NOT NULL ENABLE,
	"CREATEDDATE" DATE NOT NULL ENABLE,
	"CREATEDBY" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RENDITIONQUEUE
--
  CREATE TABLE "RENDITIONQUEUE" 
   (	"VERSIONSEQNO" NUMBER(19,0) NOT NULL ENABLE,
	"QUEUEDATE" DATE NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"ATTEMPT" NUMBER(19,0) NOT NULL ENABLE,
	"DIRUSED" VARCHAR2(255 CHAR),
	"NODERULEID" NUMBER(19,0)
   );
--
-- REQUESTTYPE
--
  CREATE TABLE "REQUESTTYPE" 
   (	"REQUESTTYPE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESC_E" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- RETCODE
--
  CREATE TABLE "RETCODE" 
   (	"RETCODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RETCODE_DESC_E" VARCHAR2(128 CHAR)
   );
--
-- RETENTIONUPDATEFAILED
--
  CREATE TABLE "RETENTIONUPDATEFAILED" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"RMRETENTION" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"FAILURETIME" DATE NOT NULL ENABLE,
	CONSTRAINT "RETENTIONUPDATEFAILED_INID" PRIMARY KEY ("NID") ENABLE
   );
--
-- RETENTIONUPDATELOG
--
  CREATE TABLE "RETENTIONUPDATELOG" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"EXECTIME" DATE NOT NULL ENABLE,
	"VERSIONNO" NUMBER(19,0),
	"ASARCID" VARCHAR2(64 CHAR),
	"ASDOCID" VARCHAR2(64 CHAR),
	"ASRETENTION" VARCHAR2(64 CHAR),
	"ERRORID" NUMBER(19,0),
	"ERRORMSG" CLOB,
	"RETRYCOUNT" NUMBER(19,0),
	CONSTRAINT "RETENTIONUPDATELOG_INID" PRIMARY KEY ("NID") ENABLE
   );
--
-- RETENTIONUPDATEORDER
--
  CREATE TABLE "RETENTIONUPDATEORDER" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"RETENTIONVALUE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"COUNT" NUMBER(19,0),
	CONSTRAINT "RETENTIONUPDATEORDER_INID" PRIMARY KEY ("NID") ENABLE
   );
--
-- RETENTIONUPDATERETRY
--
  CREATE TABLE "RETENTIONUPDATERETRY" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNO" NUMBER(19,0) NOT NULL ENABLE,
	"ASARCID" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"ASDOCID" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"RETENTIONVALUE" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- RETSTAGE
--
  CREATE TABLE "RETSTAGE" 
   (	"RETSTAGE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RETSTAGE_DESC_E" VARCHAR2(128 CHAR),
	"RETSTAGE_DESC_F" VARCHAR2(128 CHAR),
	"RETSTAGEORDER" NUMBER(5,0),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- RIMSDBVERSION
--
  CREATE TABLE "RIMSDBVERSION" 
   (	"RIMSDBVERSION" VARCHAR2(32 CHAR),
	"SCRIPTNAME" VARCHAR2(64 CHAR)
   );
--
-- RIMSKEYWORDED
--
  CREATE TABLE "RIMSKEYWORDED" 
   (	"OBJECT" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"OBJECTFIELD" VARCHAR2(64 CHAR) NOT NULL ENABLE
   );
--
-- RIMSNODECLASSIFICATION
--
  CREATE TABLE "RIMSNODECLASSIFICATION" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"RIMSACCESSION" VARCHAR2(32 CHAR),
	"RIMSADDRESSEE" VARCHAR2(4000 CHAR),
	"RIMSSUBJECT" VARCHAR2(255 CHAR),
	"RIMSCLASSIFICATION" VARCHAR2(128 CHAR),
	"RIMSDOCDATE" NUMBER(10,0),
	"RIMSESSENTIAL" VARCHAR2(32 CHAR),
	"RIMSESTABLISHMENT" VARCHAR2(255 CHAR),
	"RIMSMEDIATYPE" VARCHAR2(32 CHAR),
	"RIMSOFFICIAL" NUMBER(3,0),
	"RIMSORIGINATOR" VARCHAR2(255 CHAR),
	"RIMSRETSTAGE" VARCHAR2(32 CHAR),
	"RIMSRSI" VARCHAR2(32 CHAR),
	"RIMSSENTTO" VARCHAR2(4000 CHAR),
	"RIMSSTAGEDATE" NUMBER(10,0),
	"RIMSSTATUS" VARCHAR2(32 CHAR),
	"RIMSSTATUSDATE" NUMBER(10,0),
	"RIMSSTORAGE" VARCHAR2(32 CHAR),
	"CLASSID" NUMBER(19,0),
	"RIMSCYCLEPERIOD" NUMBER(5,0),
	"RIMSNEXTREVIEWDATE" NUMBER(10,0),
	"RIMSLASTREVIEWDATE" NUMBER(10,0),
	"RIMSRECEIVEDDATE" NUMBER(10,0)
   );
--
-- RIMSTABLES
--
  CREATE TABLE "RIMSTABLES" 
   (	"TABLENAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"COLUMNNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"TABLEDESC_E" VARCHAR2(128 CHAR),
	"TABLEDESC_F" VARCHAR2(128 CHAR),
	"COLDESC_E" VARCHAR2(128 CHAR),
	"COLDESC_F" VARCHAR2(128 CHAR),
	"COLTYPE" VARCHAR2(32 CHAR),
	"ATTRIBUTE" NUMBER(10,0),
	"BITMAP" VARCHAR2(255 CHAR),
	"COLPOSITION" NUMBER(10,0),
	"FIELD_DESC_E" VARCHAR2(128 CHAR),
	"FIELD_DESC_F" VARCHAR2(128 CHAR),
	"OBJECTFIELD" VARCHAR2(64 CHAR),
	"OBJECT" VARCHAR2(32 CHAR),
	"RIMSCONFIGFILTER" NUMBER(10,0),
	"ADVSRCHFLAG" NUMBER(10,0),
	"COLDATALENGTH" NUMBER(10,0),
	"LOOKUPINFO" VARCHAR2(255 CHAR),
	"QUICKFINDFLAG" NUMBER(10,0),
	"ADDITIONALSRCHFLAG" NUMBER(10,0)
   );
--
-- RM_ADDRIGHTS
--
  CREATE TABLE "RM_ADDRIGHTS" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"TYPE" NUMBER(10,0),
	"PRIVILEGED" NUMBER(3,0)
   );
--
-- RM_ASSIGNEDFUNCTIONS
--
  CREATE TABLE "RM_ASSIGNEDFUNCTIONS" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"IDTYPE" NUMBER(10,0),
	"FUNCID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- RM_CLASSIFICATION
--
  CREATE TABLE "RM_CLASSIFICATION" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"RSI" VARCHAR2(32 CHAR),
	"FILENUMBER" VARCHAR2(64 CHAR),
	"FILE_STATUS" VARCHAR2(32 CHAR),
	"CREATEDATE" NUMBER(10,0),
	"FILE_STATUS_DATE" NUMBER(10,0),
	"ESSENTIAL" VARCHAR2(32 CHAR),
	"STORAGE" VARCHAR2(32 CHAR),
	"DISPOSITION" VARCHAR2(32 CHAR),
	"KEYWORDS" VARCHAR2(4000 CHAR),
	"SUBJECT" VARCHAR2(4000 CHAR),
	"DISPAUTHORITY" VARCHAR2(64 CHAR),
	"CYCLEPERIOD" NUMBER(5,0),
	"CLOSEDFLAG" NUMBER(3,0),
	"CLOSEDDATE" NUMBER(10,0),
	"LASTADDITIONDATE" NUMBER(10,0),
	"CERTMODE" NUMBER(3,0),
	"ALLOWRMSUBFILES" NUMBER(3,0),
	"ALLOWRMVOLUMES" NUMBER(3,0)
   );
--
-- RM_CLASSJUSTIFY
--
  CREATE TABLE "RM_CLASSJUSTIFY" 
   (	"CLASSID" NUMBER(19,0) NOT NULL ENABLE,
	"JUSTIFICATIONID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RM_DELETEAUDIT
--
  CREATE TABLE "RM_DELETEAUDIT" 
   (	"AUDITID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR),
	"SUBTYPE" NUMBER(19,0),
	"MIMETYPE" VARCHAR2(255 CHAR),
	"CREATEID" NUMBER(19,0),
	"CREATEDATE" DATE,
	"FILENUMBER" VARCHAR2(64 CHAR),
	"CLASSNAME" VARCHAR2(255 CHAR),
	"STATUS" VARCHAR2(32 CHAR),
	"REQUESTID" NUMBER(19,0),
	"REQUESTDATE" DATE,
	"OFFICERID" NUMBER(19,0),
	"OFFICERDATE" DATE,
	"AUTHORITYID" NUMBER(19,0),
	"AUTHORIZATIONDATE" DATE,
	"AUTHCOMMENT" VARCHAR2(4000 CHAR),
	"WORKFLOWDELETE" NUMBER(3,0),
	"RSI" VARCHAR2(32 CHAR),
	"RIMSSTATUSDATE" NUMBER(10,0),
	"OWNER" NUMBER(19,0),
	"DISPAUTHORITY" VARCHAR2(64 CHAR),
	"RIMSDOCDATE" NUMBER(10,0),
	"FILENAME" VARCHAR2(255 CHAR),
	"DISPDESTROY" NUMBER(3,0),
	"ACCESSION" VARCHAR2(32 CHAR),
	"ESSENTIAL" VARCHAR2(32 CHAR),
	"STORAGE" VARCHAR2(32 CHAR),
	"KEYWORDS" VARCHAR2(4000 CHAR),
	"SUBJECT" VARCHAR2(4000 CHAR),
	"CYCLEPERIOD" NUMBER(5,0),
	"CLOSEDFLAG" NUMBER(3,0),
	"CLOSEDDATE" NUMBER(10,0),
	"LASTADDITIONDATE" NUMBER(10,0),
	"OFFICIAL" NUMBER(3,0),
	"RIMSNEXTREVIEWDATE" NUMBER(10,0),
	"RIMSLASTREVIEWDATE" NUMBER(10,0),
	"RIMSRECEIVEDDATE" NUMBER(10,0),
	"RIMSADDRESSEE" VARCHAR2(4000 CHAR),
	"RIMSESTABLISHMENT" VARCHAR2(255 CHAR),
	"RIMSORIGINATOR" VARCHAR2(255 CHAR),
	"RIMSSENTTO" VARCHAR2(4000 CHAR),
	"DISPNODEID" NUMBER(19,0),
	"QDATE" DATE,
	"CLASSID" NUMBER(19,0),
	"APPROVERID" NUMBER(19,0),
	"APPROVEDDATE" DATE,
	"VERSIONNUM" NUMBER(19,0) DEFAULT 0 NOT NULL ENABLE
   );
--
-- RM_DELETEAUDITMETADATA
--
  CREATE TABLE "RM_DELETEAUDITMETADATA" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(19,0) NOT NULL ENABLE,
	"TABTYPE" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"TABMETADATA" VARCHAR2(4000 CHAR)
   );
--
-- RM_DISPOSITIONACTIONERRORS
--
  CREATE TABLE "RM_DISPOSITIONACTIONERRORS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"QDATE" DATE NOT NULL ENABLE,
	"ERRORDATE" DATE NOT NULL ENABLE,
	"ERRORCODE" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR),
	"SUBTYPE" NUMBER(10,0),
	"ACTION" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"VERFILENAME" VARCHAR2(255 CHAR),
	"CLASSID" NUMBER(19,0),
	"ERRORSTRING" VARCHAR2(255 CHAR)
   );
--
-- RM_DISPOSITIONS
--
  CREATE TABLE "RM_DISPOSITIONS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"RETSTAGE" VARCHAR2(32 CHAR),
	"FROMDATE" DATE,
	"TODATE" DATE,
	"RSI" VARCHAR2(32 CHAR),
	"CONTAINER" NUMBER(19,0),
	"OBJECTTYPE" NUMBER(5,0),
	"RECORDCOUNT" NUMBER(19,0),
	"RUNSTATUS" NUMBER(5,0),
	"ACTION" VARCHAR2(32 CHAR),
	"DEFAULTACTIONINFO" VARCHAR2(32 CHAR),
	"STARTDATE" DATE,
	"COMPLETEDDATE" DATE,
	"ACCESSION" VARCHAR2(32 CHAR),
	"OBJECTTYPES" VARCHAR2(4000 CHAR),
	"ENABLED" NUMBER(3,0),
	"SCHEDRECURTYPE" VARCHAR2(32 CHAR),
	"SCHEDTIMEOFDAY" VARCHAR2(32 CHAR),
	"SCHEDFLOATDATE" VARCHAR2(32 CHAR),
	"SCHEDNEXTRUN" DATE,
	"EFFECTIVEDATE" DATE,
	"MULTISNAPSHOTS" NUMBER(3,0),
	"AUTOPROCESS" NUMBER(3,0),
	"EXCLUDECONTAINER" NUMBER(3,0),
	"MAXIMUMRETENTION" NUMBER(3,0),
	"SAVEDQUERYID" NUMBER(19,0),
	"FROMADVSEARCH" NUMBER(3,0),
	"MAKERENDITION" NUMBER(3,0)
   );
--
-- RM_DISPREJECTS
--
  CREATE TABLE "RM_DISPREJECTS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"QDATE" DATE NOT NULL ENABLE
   );
--
-- RM_DISPRESULTS
--
  CREATE TABLE "RM_DISPRESULTS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"ACTION" VARCHAR2(32 CHAR),
	"DEFAULTACTIONINFO" VARCHAR2(32 CHAR),
	"CALCULATEDDATE" DATE,
	"ACTIONPERFORMED" NUMBER(3,0),
	"PROCESS" NUMBER(3,0),
	"CLASSID" NUMBER(19,0),
	"RSI" VARCHAR2(32 CHAR),
	"QDATE" DATE,
	"FILENUMBER" VARCHAR2(64 CHAR),
	"NUMVERSTOKEEP" NUMBER(5,0),
	"PURGESUPERSEDED" NUMBER(3,0),
	"PURGEMAJORS" NUMBER(3,0),
	"ADVVERSIONING" NUMBER(3,0),
	"MAKERENDITION" NUMBER(3,0),
	"STAGECOUNT" NUMBER(5,0),
	"REVIEWERID" NUMBER(19,0),
	"REVIEWERID2" NUMBER(19,0),
	"APPROVALSTATUS" NUMBER(5,0),
	"APPROVERID" NUMBER(19,0),
	"APPROVEDDATE" DATE
   );
--
-- RM_DISPRESULTSVERS
--
  CREATE TABLE "RM_DISPRESULTSVERS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"QDATE" DATE NOT NULL ENABLE,
	"VERSIONID" NUMBER(19,0) NOT NULL ENABLE,
	"VERSION" NUMBER(19,0),
	"MAJORREL" NUMBER(19,0),
	"MAJOR" NUMBER(19,0),
	"MINOR" NUMBER(19,0),
	"CALCULATEDDATE" DATE,
	"RSI" VARCHAR2(32 CHAR),
	"CLASSID" NUMBER(19,0)
   );
--
-- RM_DISPREVIEWCOMMENTS
--
  CREATE TABLE "RM_DISPREVIEWCOMMENTS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"QDATE" DATE NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"STAGECOUNT" NUMBER(5,0),
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"COMMENTDATE" DATE NOT NULL ENABLE,
	"REVIEWCOMMENT" VARCHAR2(255 CHAR)
   );
--
-- RM_DISPREVIEWERS
--
  CREATE TABLE "RM_DISPREVIEWERS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"QDATE" DATE NOT NULL ENABLE,
	"REVIEWERID" NUMBER(19,0) NOT NULL ENABLE,
	"REVIEWERSTEP" NUMBER(5,0) NOT NULL ENABLE,
	"RECORDCOUNT" NUMBER(19,0),
	"REVIEWSTATUS" NUMBER(5,0),
	"NOTIFICATIONDATE" DATE,
	"OVERDUECOUNT" NUMBER(10,0),
	"OVERDUEEMAILDATE" DATE
   );
--
-- RM_DISPSETTINGS
--
  CREATE TABLE "RM_DISPSETTINGS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"SETTINGKEY" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"SETTINGVALUE" VARCHAR2(4000 CHAR)
   );
--
-- RM_DISPSNAPSHOTS
--
  CREATE TABLE "RM_DISPSNAPSHOTS" 
   (	"DISPNODEID" NUMBER(19,0) NOT NULL ENABLE,
	"QDATE" DATE NOT NULL ENABLE,
	"STATUS" NUMBER(5,0),
	"CACHEID" NUMBER(19,0),
	"REVIEWERSTEP" NUMBER(5,0),
	"REVIEWSTATUS" NUMBER(5,0),
	"SETTINGS" VARCHAR2(4000 CHAR),
	"RECORDCOUNT" NUMBER(10,0),
	"WORKID" NUMBER(19,0)
   );
--
-- RM_DOCRECTYPE
--
  CREATE TABLE "RM_DOCRECTYPE" 
   (	"RECORDTYPEID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RM_DOCXREF
--
  CREATE TABLE "RM_DOCXREF" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"DOCXREFTYP" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"XDATAID" NUMBER(19,0) NOT NULL ENABLE,
	"DOCXREFCOMMENT" VARCHAR2(255 CHAR),
	"ORIGID" NUMBER(19,0),
	"VERNUM" NUMBER(19,0)
   );
--
-- RM_FIXEDRET
--
  CREATE TABLE "RM_FIXEDRET" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"INITIALRET" DATE,
	"CURRENTRET" DATE,
	"INFINITE" NUMBER(5,0)
   );
--
-- RM_FUNCTIONS
--
  CREATE TABLE "RM_FUNCTIONS" 
   (	"FUNCID" NUMBER(5,0) NOT NULL ENABLE,
	"FUNCTIONNAME" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"CUSTMODULE" NUMBER(3,0)
   );
--
-- RM_HOLDQUERY
--
  CREATE TABLE "RM_HOLDQUERY" 
   (	"HOLDID" NUMBER(19,0) NOT NULL ENABLE,
	"QUERYID" NUMBER(19,0) NOT NULL ENABLE,
	"ENABLED" NUMBER(3,0),
	"RUNSTATUS" NUMBER(5,0)
   );
--
-- RM_HOLDQUERYHISTORY
--
  CREATE TABLE "RM_HOLDQUERYHISTORY" 
   (	"EVENTID" NUMBER(19,0) NOT NULL ENABLE,
	"HOLDID" NUMBER(19,0) NOT NULL ENABLE,
	"QUERYID" NUMBER(19,0),
	"QUERYNAME" VARCHAR2(255 CHAR),
	"COMMENTS" VARCHAR2(255 CHAR),
	"QUERYDETAILS" CLOB,
	"ACTION" NUMBER(5,0),
	"AUDITDATE" DATE NOT NULL ENABLE,
	"AUDITUSER" NUMBER(19,0) NOT NULL ENABLE,
	"UPDATENO" NUMBER(19,0)
   );
--
-- RM_KINI
--
  CREATE TABLE "RM_KINI" 
   (	"INISECTION" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIKEYWORD" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"INIVALUE" VARCHAR2(255 CHAR)
   );
--
-- RM_LINKRR
--
  CREATE TABLE "RM_LINKRR" 
   (	"RRCODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RRTITLE" VARCHAR2(128 CHAR),
	"RRSUBJ1" VARCHAR2(128 CHAR),
	"RRSUBJ2" VARCHAR2(128 CHAR),
	"RRSUBJ3" VARCHAR2(128 CHAR),
	"RRSUBJ4" VARCHAR2(128 CHAR),
	"RRSUBJ5" VARCHAR2(128 CHAR),
	"RRDESC" VARCHAR2(4000 CHAR),
	"RRNOTE" VARCHAR2(4000 CHAR),
	"RRA_TOT_RET" VARCHAR2(32 CHAR),
	"RRA_UN_RET" VARCHAR2(32 CHAR),
	"RRRETO_ALPHA" VARCHAR2(32 CHAR),
	"RRRETO_PLUS" VARCHAR2(32 CHAR),
	"RRRETO_NUMBER" VARCHAR2(32 CHAR),
	"RRRETO_UNITS" VARCHAR2(32 CHAR),
	"RRRETO_TYPE" VARCHAR2(32 CHAR),
	"RRRETO_EXP" VARCHAR2(128 CHAR),
	"RRRETU_ALPHA" VARCHAR2(32 CHAR),
	"RRRETU_PLUS" VARCHAR2(32 CHAR),
	"RRRETU_NUMBER" VARCHAR2(32 CHAR),
	"RRRETU_UNITS" VARCHAR2(32 CHAR),
	"RRRETU_TYPE" VARCHAR2(32 CHAR)
   );
--
-- RM_LINKRS
--
  CREATE TABLE "RM_LINKRS" 
   (	"RSCODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RSTITLE" VARCHAR2(128 CHAR),
	"RSSUBJ1" VARCHAR2(128 CHAR),
	"RSSUBJ2" VARCHAR2(128 CHAR),
	"RSSUBJ3" VARCHAR2(128 CHAR),
	"RSSUBJ4" VARCHAR2(128 CHAR),
	"RSSUBJ5" VARCHAR2(128 CHAR),
	"RSDESC" VARCHAR2(4000 CHAR),
	"RSNOTE" VARCHAR2(4000 CHAR),
	"RSA_TOT_RET" VARCHAR2(32 CHAR),
	"RSA_UN_RET" VARCHAR2(32 CHAR),
	"RSA_RR_CODE" VARCHAR2(32 CHAR),
	"RSRETO_ALPHA" VARCHAR2(32 CHAR),
	"RSRETO_PLUS" VARCHAR2(32 CHAR),
	"RSRETO_NUMBER" VARCHAR2(32 CHAR),
	"RSRETO_UNITS" VARCHAR2(32 CHAR),
	"RSRETO_TYPE" VARCHAR2(32 CHAR),
	"RSRETO_EXP" VARCHAR2(128 CHAR),
	"RSRETU_ALPHA" VARCHAR2(32 CHAR),
	"RSRETU_PLUS" VARCHAR2(32 CHAR),
	"RSRETU_NUMBER" VARCHAR2(32 CHAR),
	"RSRETU_UNITS" VARCHAR2(32 CHAR),
	"RSRETU_TYPE" VARCHAR2(32 CHAR)
   );
--
-- RM_MULTICLASS
--
  CREATE TABLE "RM_MULTICLASS" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"CLASSID" NUMBER(19,0) NOT NULL ENABLE,
	"RSI" VARCHAR2(32 CHAR),
	"DELELECFLAG" NUMBER(3,0)
   );
--
-- RM_OBJECTHOLD
--
  CREATE TABLE "RM_OBJECTHOLD" 
   (	"HOLDID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"ACTIVEHOLD" NUMBER(3,0) NOT NULL ENABLE,
	"APPLYCOMMENTS" VARCHAR2(255 CHAR),
	"USERID" NUMBER(19,0),
	"DOCXREFTYP" VARCHAR2(32 CHAR),
	"QUERYID" NUMBER(19,0),
	"UNIQUERUNID" NUMBER(19,0)
   );
--
-- RM_PARTRECORDS
--
  CREATE TABLE "RM_PARTRECORDS" 
   (	"PARTID" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RM_PICKLIST
--
  CREATE TABLE "RM_PICKLIST" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"CLASSID" NUMBER(19,0) NOT NULL ENABLE,
	"CREATEDATE" DATE NOT NULL ENABLE
   );
--
-- RM_PROVENANCE
--
  CREATE TABLE "RM_PROVENANCE" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"PROVENANCETYPE" VARCHAR2(32 CHAR),
	"PROVALTERNATENAME" VARCHAR2(255 CHAR),
	"PROVALTERNATEDESC" VARCHAR2(4000 CHAR),
	"PROVTEXT" VARCHAR2(4000 CHAR),
	"PROVSTARTDATE" DATE,
	"PROVENDDATE" DATE,
	"DISABLEFLAG" NUMBER(3,0),
	"EDITDATE" DATE,
	"EDITPATRON" VARCHAR2(32 CHAR),
	"PREVIOUSPARENTID" NUMBER(19,0),
	"LASTADDITIONDATE" NUMBER(10,0)
   );
--
-- RM_PROVENANCEHISTORY
--
  CREATE TABLE "RM_PROVENANCEHISTORY" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"PROVENANCETYPE" VARCHAR2(32 CHAR),
	"NAME" VARCHAR2(255 CHAR),
	"PROVALTERNATENAME" VARCHAR2(255 CHAR),
	"DCOMMENT" VARCHAR2(4000 CHAR),
	"PROVALTERNATEDESC" VARCHAR2(4000 CHAR),
	"PROVTEXT" VARCHAR2(4000 CHAR),
	"PROVSTARTDATE" DATE,
	"PROVENDDATE" DATE,
	"DISABLEFLAG" NUMBER(3,0),
	"EDITDATE" DATE NOT NULL ENABLE,
	"EDITPATRON" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- RM_QUEUE
--
  CREATE TABLE "RM_QUEUE" 
   (	"QORDER" DATE NOT NULL ENABLE,
	"QKEY" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"QNODEID" NUMBER(10,0) NOT NULL ENABLE,
	"QDATE" DATE NOT NULL ENABLE,
	"RUNASUSER" NUMBER(10,0),
	"SERVERID" VARCHAR2(32 CHAR),
	"QCACHEID" NUMBER(10,0)
   );
--
-- RM_RECORDSMANAGERS
--
  CREATE TABLE "RM_RECORDSMANAGERS" 
   (	"GROUPID" NUMBER(19,0),
	"RECMANGRID" NUMBER(19,0)
   );
--
-- RM_RECORDSOFFICERS
--
  CREATE TABLE "RM_RECORDSOFFICERS" 
   (	"GROUPID" NUMBER(19,0),
	"RECOFFID" NUMBER(19,0),
	"PRIMARYRECOFF" NUMBER(3,0)
   );
--
-- RM_RECORDTYPEDATA
--
  CREATE TABLE "RM_RECORDTYPEDATA" 
   (	"RECORDTYPEID" NUMBER(19,0) NOT NULL ENABLE,
	"RSI" VARCHAR2(32 CHAR),
	"DEFAULTTYPE" NUMBER(3,0)
   );
--
-- RM_STATS
--
  CREATE TABLE "RM_STATS" 
   (	"TYPE" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0),
	"USERGROUPID" NUMBER(19,0),
	"SERVERTHREAD" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"VALUEKEY" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"VALUEKEY1" VARCHAR2(255 CHAR),
	"RECORDCOUNT" NUMBER(10,0) NOT NULL ENABLE,
	"RUNDATE" DATE
   );
--
-- RM_STATUSACL
--
  CREATE TABLE "RM_STATUSACL" 
   (	"STATUS" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RIGHTID" NUMBER(19,0) NOT NULL ENABLE,
	"PERMISSIONS" NUMBER(19,0) NOT NULL ENABLE,
	"ACLTYPE" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- RM_TEMPDATA
--
  CREATE TABLE "RM_TEMPDATA" 
   (	"TEMPKEY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0),
	"USERID" NUMBER(19,0),
	"PERMSMASK" NUMBER(10,0),
	"TDATE" DATE,
	"VALUE1" VARCHAR2(32 CHAR)
   );
--
-- RM_USERAUDIT
--
  CREATE TABLE "RM_USERAUDIT" 
   (	"AUDITID" NUMBER(19,0),
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"AUDITDATE" DATE,
	"EVENT" VARCHAR2(128 CHAR),
	"EVENTDESC" VARCHAR2(255 CHAR)
   );
--
-- RM_USERHOLD
--
  CREATE TABLE "RM_USERHOLD" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"HOLDID" NUMBER(19,0) NOT NULL ENABLE,
	"STATUS" NUMBER(5,0) NOT NULL ENABLE
   );
--
-- RM_USERHOLDCRITERIA
--
  CREATE TABLE "RM_USERHOLDCRITERIA" 
   (	"HOLDID" NUMBER(19,0) NOT NULL ENABLE,
	"STATUS" NUMBER(5,0) NOT NULL ENABLE,
	"STARTDATE" DATE,
	"ENDDATE" DATE,
	"COMMENTS" VARCHAR2(255 CHAR)
   );
--
-- RMSEC_CLEARANCE
--
  CREATE TABLE "RMSEC_CLEARANCE" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"CLEARANCE" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- RMSEC_DEFINEDRULES
--
  CREATE TABLE "RMSEC_DEFINEDRULES" 
   (	"RULEID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"RULEACTION" NUMBER(3,0) NOT NULL ENABLE,
	"RULEDATE" DATE NOT NULL ENABLE,
	"RULEVALUE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RULEREASON" VARCHAR2(255 CHAR),
	"PROCESSED" NUMBER(10,0)
   );
--
-- RMSEC_DOCCLEARANCE
--
  CREATE TABLE "RMSEC_DOCCLEARANCE" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"INITIALSECURITY" NUMBER(10,0),
	"CURRENTSECURITY" NUMBER(10,0),
	"REASONSFOR" VARCHAR2(255 CHAR),
	"CLASSIFIEDBY" VARCHAR2(255 CHAR),
	"DERIVEDFROM" VARCHAR2(255 CHAR),
	"DECLASSIFYTYPE" NUMBER(3,0),
	"DECLASSIFYDATE" DATE,
	"DECLASSIFYEVENT" VARCHAR2(255 CHAR),
	"EXEMPTIONCATS" VARCHAR2(255 CHAR),
	"CLASSIFYINGAGENCY" VARCHAR2(255 CHAR),
	"DOWNGRADETYPE" NUMBER(3,0),
	"DOWNGRADEDATE" DATE,
	"DOWNGRADEEVENT" VARCHAR2(255 CHAR),
	"DOWNGRADEINST" VARCHAR2(255 CHAR),
	"REVIEWEDON" DATE,
	"REVIEWEDBY" VARCHAR2(255 CHAR),
	"DOWNGRADEDON" DATE,
	"DOWNGRADEDBY" VARCHAR2(255 CHAR),
	"DECLASSIFIEDON" DATE,
	"DECLASSIFIEDBY" VARCHAR2(255 CHAR),
	"UPGRADEDON" DATE,
	"UPGRADEDBY" VARCHAR2(255 CHAR),
	"UPGRADEREASONS" VARCHAR2(255 CHAR),
	"DATEDIRTY" NUMBER(3,0)
   );
--
-- RMSEC_DOCOPTIONS
--
  CREATE TABLE "RMSEC_DOCOPTIONS" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"REQUIREDMARKINGSFORSUBITEMS" NUMBER(10,0) NOT NULL ENABLE,
	"REQUIREDLEVELFORSUBITEMS" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- RMSEC_DOCSUPPMARK
--
  CREATE TABLE "RMSEC_DOCSUPPMARK" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"SUPPMARK" VARCHAR2(32 CHAR)
   );
--
-- RMSEC_SECURITY
--
  CREATE TABLE "RMSEC_SECURITY" 
   (	"SECURITYLEVEL" NUMBER(10,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(32 CHAR),
	"DESCRIPTION" VARCHAR2(32 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- RMSEC_SECURITYGUIDE
--
  CREATE TABLE "RMSEC_SECURITYGUIDE" 
   (	"SECURITYGUIDEID" NUMBER(19,0) NOT NULL ENABLE,
	"INFOREVEALING" VARCHAR2(255 CHAR),
	"SECURITYLEVEL" NUMBER(10,0),
	"REASONSFOR" VARCHAR2(255 CHAR),
	"DECLASSIFYTYPE" NUMBER(3,0),
	"DECLASSIFYDATE" DATE,
	"DECLASSIFYEVENT" VARCHAR2(255 CHAR),
	"EXEMPTIONCATS" VARCHAR2(255 CHAR),
	"GUIDEREMARKS" VARCHAR2(255 CHAR),
	"SUPPLEMENTALMARKINGS" VARCHAR2(255 CHAR)
   );
--
-- RMSEC_SESSIONCODE
--
  CREATE TABLE "RMSEC_SESSIONCODE" 
   (	"SESSIONCODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESCRIPTION" VARCHAR2(255 CHAR)
   );
--
-- RMSEC_SESSIONMARKING
--
  CREATE TABLE "RMSEC_SESSIONMARKING" 
   (	"SESSIONCODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"SUPPMARK" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- RMSEC_STATS
--
  CREATE TABLE "RMSEC_STATS" 
   (	"TYPE" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0),
	"USERGROUPID" NUMBER(19,0),
	"SERVERTHREAD" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"VALUEKEY" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"VALUEKEY1" VARCHAR2(255 CHAR),
	"RECORDCOUNT" NUMBER(10,0) NOT NULL ENABLE,
	"RUNDATE" DATE
   );
--
-- RMSEC_SUPPMARK
--
  CREATE TABLE "RMSEC_SUPPMARK" 
   (	"SUPPMARK" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"DESCRIPTION" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"BITMASK" NUMBER(10,0),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- RMSEC_TEMPDATA
--
  CREATE TABLE "RMSEC_TEMPDATA" 
   (	"TEMPKEY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0),
	"USERID" NUMBER(19,0),
	"PERMSMASK" NUMBER(10,0),
	"TDATE" DATE,
	"VALUE1" VARCHAR2(32 CHAR)
   );
--
-- RMSEC_USERSUPPMARKS
--
  CREATE TABLE "RMSEC_USERSUPPMARKS" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"SUPPMARK" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- RSI
--
  CREATE TABLE "RSI" 
   (	"RSI" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"SORTKEY" VARCHAR2(64 CHAR),
	"RSITITLE_E" VARCHAR2(255 CHAR),
	"RSITITLE_F" VARCHAR2(255 CHAR),
	"RSISUBJECT_E" VARCHAR2(255 CHAR),
	"RSISUBJECT_F" VARCHAR2(255 CHAR),
	"RSIDESC_E" VARCHAR2(4000 CHAR),
	"RSIDESC_F" VARCHAR2(4000 CHAR),
	"CREATEDATE" DATE,
	"RSISTATUS" VARCHAR2(32 CHAR),
	"STATUSDATE" DATE,
	"DISCONTFLAG" NUMBER(3,0),
	"DISCONTDATE" DATE,
	"DISCONTCOMMENT" VARCHAR2(255 CHAR),
	"REFRATE" VARCHAR2(32 CHAR),
	"VITALCODE" VARCHAR2(32 CHAR),
	"VITALSTOR" VARCHAR2(32 CHAR),
	"RSINOTEFLAG" NUMBER(3,0),
	"RETENTIONID" NUMBER(19,0),
	"ACTIVE" VARCHAR2(32 CHAR),
	"ACTIVEPER" NUMBER(28,14),
	"DORMANT" VARCHAR2(32 CHAR),
	"DORMANTPER" NUMBER(28,14),
	"TOTALPERIOD" VARCHAR2(64 CHAR),
	"DISPOSITION" VARCHAR2(32 CHAR),
	"ARCHIVEFLAG" NUMBER(3,0),
	"PATRON" VARCHAR2(32 CHAR),
	"REQUESTEDDATE" DATE,
	"RECEIVEDDATE" DATE,
	"COMPLETEDDATE" DATE,
	"ARCHSTATUS" VARCHAR2(32 CHAR),
	"ARCHSTATUSDATE" DATE,
	"ARCHCOMMENT" VARCHAR2(255 CHAR),
	"ARCHIVALFLAG" NUMBER(3,0),
	"BATCH_INDEX_FLAG" VARCHAR2(32 CHAR),
	"EDITDATE" DATE,
	"EDITPATRON" VARCHAR2(32 CHAR),
	"RM_RSI" NUMBER(3,0),
	"PROFILEFORMCODE" VARCHAR2(32 CHAR),
	"DISPCONTROL" NUMBER(3,0),
	"UNIQUEID" NUMBER(19,0)
   );
--
-- RSIAPPROVAL
--
  CREATE TABLE "RSIAPPROVAL" 
   (	"RSI" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RSISCHEDULEID" NUMBER(19,0) NOT NULL ENABLE,
	"APPROVEDBYUSERID" NUMBER(19,0),
	"APPROVEDDATE" DATE,
	"APPROVALCOMMENT" VARCHAR2(255 CHAR),
	"APPROVALEDITDATE" DATE,
	"APPROVALEDITUSERID" NUMBER(19,0)
   );
--
-- RSIAPPROVALHISTORY
--
  CREATE TABLE "RSIAPPROVALHISTORY" 
   (	"RSI" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RSISCHEDULEID" NUMBER(19,0) NOT NULL ENABLE,
	"APPROVALEDITDATE" DATE NOT NULL ENABLE,
	"APPROVEDBYUSERID" NUMBER(19,0),
	"APPROVEDDATE" DATE,
	"APPROVALCOMMENT" VARCHAR2(255 CHAR),
	"APPROVALEDITUSERID" NUMBER(19,0),
	"REMOVALEDITDATE" DATE,
	"REMOVALEDITUSERID" NUMBER(19,0)
   );
--
-- RSIEVENTSCHED
--
  CREATE TABLE "RSIEVENTSCHED" 
   (	"RSI" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"OBJECT" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RETSTAGE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RSISCHEDULEID" NUMBER(19,0) NOT NULL ENABLE,
	"RECORDTYPE" NUMBER(5,0),
	"EVENTTYPE" NUMBER(3,0),
	"RSIRULECODE" VARCHAR2(32 CHAR),
	"DATETOUSE" VARCHAR2(32 CHAR),
	"YEARENDMONTH" NUMBER(3,0),
	"YEARENDDAY" NUMBER(3,0),
	"RETYEARS" NUMBER(10,0),
	"RETMONTHS" NUMBER(10,0),
	"RETDAYS" NUMBER(10,0),
	"EVENTRULEDATE" DATE,
	"EVENTRULE" VARCHAR2(4000 CHAR),
	"EVENTCOMMENT" VARCHAR2(255 CHAR),
	"STAGEACTION" VARCHAR2(255 CHAR),
	"DISPOSITION" VARCHAR2(32 CHAR),
	"ACTIONDESC_E" VARCHAR2(4000 CHAR),
	"ACTIONDESC_F" VARCHAR2(4000 CHAR),
	"RECMDOFFICE" VARCHAR2(32 CHAR),
	"RECMDPATRON" VARCHAR2(32 CHAR),
	"RECMDDATE" DATE,
	"RECMDCOMMENT" VARCHAR2(255 CHAR),
	"APPROVALFLAG" NUMBER(3,0),
	"RETINTERVALS" NUMBER(3,0),
	"EDITDATE" DATE,
	"EDITPATRON" VARCHAR2(32 CHAR),
	"ACTIONCODE" VARCHAR2(32 CHAR),
	"RM_RR_CODE" VARCHAR2(32 CHAR),
	"MAXIMUMPERIOD" NUMBER(10,0),
	"EVENTRULECOMMENT" VARCHAR2(255 CHAR),
	"FIXEDRET" NUMBER(3,0),
	"CATIDATTRID" VARCHAR2(32 CHAR),
	"NUMVERSTOKEEP" NUMBER(10,0),
	"PURGESUPERSEDED" NUMBER(3,0),
	"PURGEMAJORS" NUMBER(3,0),
	"MAKERENDITION" NUMBER(3,0)
   );
--
-- RSIJUSTIFY
--
  CREATE TABLE "RSIJUSTIFY" 
   (	"RSI" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"JUSTIFICATIONID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- RSIKEYWORDS
--
  CREATE TABLE "RSIKEYWORDS" 
   (	"RSI" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"OBJECTFIELD" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"RSIKEYWORD" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"RIMSSOUNDEX" VARCHAR2(32 CHAR)
   );
--
-- RSIRULECODE
--
  CREATE TABLE "RSIRULECODE" 
   (	"RSIRULECODE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RSIRULECODE_DESC_E" VARCHAR2(128 CHAR),
	"RSIRULECODE_DESC_F" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- RSISTATUS
--
  CREATE TABLE "RSISTATUS" 
   (	"RSISTATUS" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"RSISTATUS_DESC_E" VARCHAR2(128 CHAR),
	"RSISTATUS_DESC_F" VARCHAR2(128 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- SEARCHSTATS_COMPONENT
--
  CREATE TABLE "SEARCHSTATS_COMPONENT" 
   (	"QUERYNR" NUMBER(28,14) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBQUERY" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"EXTRADATAI" NUMBER(19,0),
	"EXTRADATAS" VARCHAR2(64 CHAR),
	"OTSQL" VARCHAR2(4000 CHAR),
	"TERMS" VARCHAR2(4000 CHAR)
   );
--
-- SEARCHSTATS_QUERY
--
  CREATE TABLE "SEARCHSTATS_QUERY" 
   (	"QUERYNR" NUMBER(10,0) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"QUERYTIME" DATE NOT NULL ENABLE,
	"SEARCHTYPE" NUMBER(10,0) DEFAULT 0,
	"TEMPLATE" NUMBER(19,0) NOT NULL ENABLE,
	"RAWRESULTS" NUMBER(19,0),
	"QUERYHASH" NUMBER(19,0),
	"QUERYHASHGENERAL" NUMBER(19,0),
	"MAXDISPLAYED" NUMBER(19,0) DEFAULT 0,
	"QUERYTIMEINMS" NUMBER(28,14),
	"QUERYHASHNOFACET" NUMBER(19,0),
	"HOPCOUNT" NUMBER(19,0) DEFAULT 0 NOT NULL ENABLE
   );
--
-- SEARCHSTATS_SLICE
--
  CREATE TABLE "SEARCHSTATS_SLICE" 
   (	"QUERYNR" NUMBER(28,14) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"SLICE" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- SEARCHSTATS_STOPCONDITIONS
--
  CREATE TABLE "SEARCHSTATS_STOPCONDITIONS" 
   (	"QUERYNR" NUMBER(19,0) NOT NULL ENABLE,
	"QUERYHASHNOFACET" NUMBER(19,0) NOT NULL ENABLE,
	"STOPTIME" DATE NOT NULL ENABLE,
	"HITINDEX" NUMBER(10,0) NOT NULL ENABLE,
	"OPERATION" VARCHAR2(64 CHAR) NOT NULL ENABLE
   );
--
-- SEARCHSTATS_TERMS
--
  CREATE TABLE "SEARCHSTATS_TERMS" 
   (	"QUERYNR" NUMBER(28,14) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"TERM" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"TERMLOWER" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- SOCPENBRM
--
  CREATE TABLE "SOCPENBRM" 
   (	"FILE_TYPE" VARCHAR2(20),
	"REC_TYPE" VARCHAR2(20),
	"PENSION_NO" VARCHAR2(20) NOT NULL ENABLE,
	"PAYPOINT" VARCHAR2(20),
	"GRANT_TYPE1" VARCHAR2(20),
	"GRANT_TYPE2" VARCHAR2(20),
	"GRANT_TYPE3" VARCHAR2(20),
	"GRANT_TYPE4" VARCHAR2(20),
	"PRIM_STATUS1" VARCHAR2(20),
	"PRIM_STATUS2" VARCHAR2(20),
	"PRIM_STATUS3" VARCHAR2(20),
	"PRIM_STATUS4" VARCHAR2(20),
	"SEC_STATUS1" VARCHAR2(20),
	"SEC_STATUS2" VARCHAR2(20),
	"SEC_STATUS3" VARCHAR2(20),
	"SEC_STATUS4" VARCHAR2(20),
	"STATUS_DATE1" VARCHAR2(20),
	"STATUS_DATE2" VARCHAR2(20),
	"STATUS_DATE3" VARCHAR2(20),
	"STATUS_DATE4" VARCHAR2(20),
	"APP_DATE1" VARCHAR2(20),
	"APP_DATE2" VARCHAR2(20),
	"APP_DATE3" VARCHAR2(20),
	"APP_DATE4" VARCHAR2(20),
	"REVIEW_CODE1" VARCHAR2(20),
	"REVIEW_CODE2" VARCHAR2(20),
	"REVIEW_CODE3" VARCHAR2(20),
	"REVIEW_CODE4" VARCHAR2(20),
	"STATUS_REASON1" VARCHAR2(20),
	"STATUS_REASON2" VARCHAR2(20),
	"STATUS_REASON3" VARCHAR2(20),
	"STATUS_REASON4" VARCHAR2(20),
	"STAT_PER1" VARCHAR2(20),
	"STAT_PER2" VARCHAR2(20),
	"STAT_PER3" VARCHAR2(20),
	"STAT_PER4" VARCHAR2(20),
	"DATE_ACCEPT1" VARCHAR2(20),
	"DATE_ACCEPT2" VARCHAR2(20),
	"DATE_ACCEPT3" VARCHAR2(20),
	"DATE_ACCEPT4" VARCHAR2(20),
	"ORIG_APP_DATE1" VARCHAR2(20),
	"ORIG_APP_DATE2" VARCHAR2(20),
	"ORIG_APP_DATE3" VARCHAR2(20),
	"ORIG_APP_DATE4" VARCHAR2(20),
	"OLD_ID1" VARCHAR2(20),
	"OLD_ID2" VARCHAR2(20),
	"OLD_ID3" VARCHAR2(20),
	"OLD_ID4" VARCHAR2(20),
	"OLD_ID5" VARCHAR2(20),
	"OLD_ID6" VARCHAR2(20),
	"OLD_ID7" VARCHAR2(20),
	"OLD_ID8" VARCHAR2(20),
	"OLD_ID9" VARCHAR2(20),
	"OLD_ID10" VARCHAR2(20),
	"BRANCH" VARCHAR2(20),
	"SURNAME" VARCHAR2(60),
	"NAME" VARCHAR2(60),
	"ADDRESS" VARCHAR2(60),
	"POSTAL_ADDRESS" VARCHAR2(60),
	"POSTAL_CODE" VARCHAR2(60),
	"NO_KIDS" VARCHAR2(60),
	"PAYMENT_METHOD" VARCHAR2(60),
	"SEX" VARCHAR2(60),
	"MARITAL_STATUS" VARCHAR2(60),
	"BIRTHDATE" VARCHAR2(60),
	"KIDS_INVOLVED" VARCHAR2(20),
	"NO_CARE_DEP" VARCHAR2(60),
	"ACCOUNT_NO" VARCHAR2(20),
	"SEC_PAYPOINT" VARCHAR2(60),
	"PAYMENT_MODE" VARCHAR2(60),
	"RE_REGISTERED" VARCHAR2(20),
	"NO_KIDS_OWN" VARCHAR2(20),
	"NO_KIDS_OTHER" VARCHAR2(20),
	"PROVINCE" VARCHAR2(60),
	"TELNO" VARCHAR2(20),
	"CELLNO" VARCHAR2(20),
	"REVIEWPERIOD" VARCHAR2(20),
	"MEDICALPERIOD" VARCHAR2(20),
	"LIFECERTPERIOD" VARCHAR2(20),
	"DOCS_PRESENT" VARCHAR2(255)
   );
--
-- SOCPENBRM_ARCHIVE
--
  CREATE TABLE "SOCPENBRM_ARCHIVE" 
   (	"FILE_TYPE" VARCHAR2(20),
	"REC_TYPE" VARCHAR2(20),
	"PENSION_NO" VARCHAR2(20) NOT NULL ENABLE,
	"PAYPOINT" VARCHAR2(20),
	"GRANT_TYPE1" VARCHAR2(20),
	"GRANT_TYPE2" VARCHAR2(20),
	"GRANT_TYPE3" VARCHAR2(20),
	"GRANT_TYPE4" VARCHAR2(20),
	"PRIM_STATUS1" VARCHAR2(20),
	"PRIM_STATUS2" VARCHAR2(20),
	"PRIM_STATUS3" VARCHAR2(20),
	"PRIM_STATUS4" VARCHAR2(20),
	"SEC_STATUS1" VARCHAR2(20),
	"SEC_STATUS2" VARCHAR2(20),
	"SEC_STATUS3" VARCHAR2(20),
	"SEC_STATUS4" VARCHAR2(20),
	"STATUS_DATE1" VARCHAR2(20),
	"STATUS_DATE2" VARCHAR2(20),
	"STATUS_DATE3" VARCHAR2(20),
	"STATUS_DATE4" VARCHAR2(20),
	"APP_DATE1" VARCHAR2(20),
	"APP_DATE2" VARCHAR2(20),
	"APP_DATE3" VARCHAR2(20),
	"APP_DATE4" VARCHAR2(20),
	"REVIEW_CODE1" VARCHAR2(20),
	"REVIEW_CODE2" VARCHAR2(20),
	"REVIEW_CODE3" VARCHAR2(20),
	"REVIEW_CODE4" VARCHAR2(20),
	"STATUS_REASON1" VARCHAR2(20),
	"STATUS_REASON2" VARCHAR2(20),
	"STATUS_REASON3" VARCHAR2(20),
	"STATUS_REASON4" VARCHAR2(20),
	"STAT_PER1" VARCHAR2(20),
	"STAT_PER2" VARCHAR2(20),
	"STAT_PER3" VARCHAR2(20),
	"STAT_PER4" VARCHAR2(20),
	"DATE_ACCEPT1" VARCHAR2(20),
	"DATE_ACCEPT2" VARCHAR2(20),
	"DATE_ACCEPT3" VARCHAR2(20),
	"DATE_ACCEPT4" VARCHAR2(20),
	"ORIG_APP_DATE1" VARCHAR2(20),
	"ORIG_APP_DATE2" VARCHAR2(20),
	"ORIG_APP_DATE3" VARCHAR2(20),
	"ORIG_APP_DATE4" VARCHAR2(20),
	"OLD_ID1" VARCHAR2(20),
	"OLD_ID2" VARCHAR2(20),
	"OLD_ID3" VARCHAR2(20),
	"OLD_ID4" VARCHAR2(20),
	"OLD_ID5" VARCHAR2(20),
	"OLD_ID6" VARCHAR2(20),
	"OLD_ID7" VARCHAR2(20),
	"OLD_ID8" VARCHAR2(20),
	"OLD_ID9" VARCHAR2(20),
	"OLD_ID10" VARCHAR2(20),
	"BRANCH" VARCHAR2(20),
	"SURNAME" VARCHAR2(60),
	"NAME" VARCHAR2(60),
	"ADDRESS" VARCHAR2(60),
	"POSTAL_ADDRESS" VARCHAR2(60),
	"POSTAL_CODE" VARCHAR2(60),
	"NO_KIDS" VARCHAR2(60),
	"PAYMENT_METHOD" VARCHAR2(60),
	"SEX" VARCHAR2(60),
	"MARITAL_STATUS" VARCHAR2(60),
	"BIRTHDATE" VARCHAR2(60),
	"KIDS_INVOLVED" VARCHAR2(20),
	"NO_CARE_DEP" VARCHAR2(60),
	"ACCOUNT_NO" VARCHAR2(20),
	"SEC_PAYPOINT" VARCHAR2(60),
	"PAYMENT_MODE" VARCHAR2(60),
	"RE_REGISTERED" VARCHAR2(20),
	"NO_KIDS_OWN" VARCHAR2(20),
	"NO_KIDS_OTHER" VARCHAR2(20),
	"PROVINCE" VARCHAR2(60),
	"TELNO" VARCHAR2(20),
	"CELLNO" VARCHAR2(20),
	"REVIEWPERIOD" VARCHAR2(20),
	"MEDICALPERIOD" VARCHAR2(20),
	"LIFECERTPERIOD" VARCHAR2(20),
	"DOCS_PRESENT" VARCHAR2(255)
   );
--
-- SOCPENBRM_LOG
--
  CREATE TABLE "SOCPENBRM_LOG" 
   (	"MSG" VARCHAR2(200)
   );
--
-- SOCPENID_TEMP
--
  CREATE TABLE "SOCPENID_TEMP" 
   (	"FILE_TYPE" VARCHAR2(50),
	"REC_TYPE" VARCHAR2(50),
	"PENSION-NO" VARCHAR2(50),
	"PAYPOINT" VARCHAR2(50),
	"GRANT-TYPE1" VARCHAR2(50),
	"GRANT-TYPE2" VARCHAR2(50),
	"GRANT-TYPE3" VARCHAR2(50),
	"GRANT-TYPE4" VARCHAR2(50),
	"PRIM-STATUS1" VARCHAR2(50),
	"PRIM-STATUS2" VARCHAR2(50),
	"PRIM-STATUS3" VARCHAR2(50),
	"PRIM-STATUS4" VARCHAR2(50),
	"SEC-STATUS1" VARCHAR2(50),
	"SEC-STATUS2" VARCHAR2(50),
	"SEC-STATUS3" VARCHAR2(50),
	"SEC-STATUS4" VARCHAR2(50),
	"STATUS-DATE1" VARCHAR2(50),
	"STATUS-DATE2" VARCHAR2(50),
	"STATUS-DATE3" VARCHAR2(50),
	"STATUS-DATE4" VARCHAR2(50),
	"APP-DATE1" VARCHAR2(50),
	"APP-DATE2" VARCHAR2(50),
	"APP-DATE3" VARCHAR2(50),
	"APP-DATE4" VARCHAR2(50),
	"REVIEW-CODE1" VARCHAR2(50),
	"REVIEW-CODE2" VARCHAR2(50),
	"REVIEW-CODE3" VARCHAR2(50),
	"REVIEW-CODE4" VARCHAR2(50),
	"STATUS-REASON1" VARCHAR2(50),
	"STATUS-REASON2" VARCHAR2(50),
	"STATUS-REASON3" VARCHAR2(50),
	"STATUS-REASON4" VARCHAR2(50),
	"STAT-PER1" VARCHAR2(50),
	"STAT-PER2" VARCHAR2(50),
	"STAT-PER3" VARCHAR2(50),
	"STAT-PER4" VARCHAR2(50),
	"DATE-ACCEPT1" VARCHAR2(50),
	"DATE-ACCEPT2" VARCHAR2(50),
	"DATE-ACCEPT3" VARCHAR2(50),
	"DATE-ACCEPT4" VARCHAR2(50),
	"ORIG-APP-DATE1" VARCHAR2(50),
	"ORIG-APP-DATE2" VARCHAR2(50),
	"ORIG-APP-DATE3" VARCHAR2(50),
	"ORIG-APP-DATE4" VARCHAR2(50),
	"OLD-ID1" VARCHAR2(50),
	"OLD-ID2" VARCHAR2(50),
	"OLD-ID3" VARCHAR2(50),
	"OLD-ID4" VARCHAR2(50),
	"OLD-ID5" VARCHAR2(50),
	"OLD-ID6" VARCHAR2(50),
	"OLD-ID7" VARCHAR2(50),
	"OLD-ID8" VARCHAR2(50),
	"OLD-ID9" VARCHAR2(50),
	"OLD-ID10" VARCHAR2(50),
	"BRANCH" VARCHAR2(50),
	"SURNAME" VARCHAR2(50),
	"NAME" VARCHAR2(50),
	"ADDRESS" VARCHAR2(50),
	"POSTAL-ADDRESS" VARCHAR2(50),
	"POSTAL-CODE" VARCHAR2(50),
	"NO-KIDS" VARCHAR2(50),
	"PAYMENT-METHOD" VARCHAR2(50),
	"SEX" VARCHAR2(50),
	"MARITAL-STATUS" VARCHAR2(50),
	"BIRTHDATE" VARCHAR2(50),
	"KIDS-INVOLVED" VARCHAR2(50),
	"NO-CARE-DEP" VARCHAR2(50),
	"ACCOUNT-NO" VARCHAR2(50),
	"SEC-PAYPOINT" VARCHAR2(50),
	"PAYMENT-MODE" VARCHAR2(50),
	"RE-REGISTERED" VARCHAR2(50),
	"NO-KIDS-OWN" VARCHAR2(50),
	"NO-KIDS-OTHER" VARCHAR2(50),
	"PROVINCE" VARCHAR2(50),
	"TELNO" VARCHAR2(50),
	"CELLNO" VARCHAR2(50),
	"REVIEWPERIOD" VARCHAR2(50),
	"MEDICALPERIOD" VARCHAR2(50),
	"LIFECERTPERIOD" VARCHAR2(50)
   );
--
-- SOCPENIDTEMP
--
  CREATE TABLE "SOCPENIDTEMP" 
   (	"PENSION-NO" VARCHAR2(13) NOT NULL ENABLE,
	"BRANCH" VARCHAR2(6),
	"PROVINCE" NUMBER(38,0)
   );
--
-- SOVCONTROLRULES
--
  CREATE TABLE "SOVCONTROLRULES" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"RULEID" NUMBER(10,0),
	"TYPEID" NUMBER(10,0),
	"ORDERID" NUMBER(10,0),
	"RULETYPE" VARCHAR2(32 CHAR),
	"ATTR1TYPE" NUMBER(10,0),
	"ATTR2TYPE" NUMBER(10,0),
	"ATTR3TYPE" VARCHAR2(255 CHAR),
	"ATTR4TYPE" VARCHAR2(255 CHAR)
   );
--
-- SOVMGMTMSGS
--
  CREATE TABLE "SOVMGMTMSGS" 
   (	"NAME" VARCHAR2(255 CHAR),
	"SIGID" VARCHAR2(32 CHAR),
	"OBJTYPE" VARCHAR2(32 CHAR),
	"MSG" VARCHAR2(4000 CHAR),
	"DATESTR" VARCHAR2(32 CHAR),
	"CMPMSG" VARCHAR2(4000 CHAR),
	"TYPE" VARCHAR2(32 CHAR),
	"BSEEN" VARCHAR2(32 CHAR)
   );
--
-- SPCJOB
--
  CREATE TABLE "SPCJOB" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_CONDITIONTYPE" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"SPC_CONDITIONVALUE" CLOB,
	"SPC_RUNSTATE" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_ACTIVITY" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_RESUMEINFO" VARCHAR2(4000 CHAR),
	"SPC_ERRORMESSAGE" VARCHAR2(4000 CHAR),
	"SPC_LASTSTARTEDAT" DATE,
	"SPC_LASTENDEDAT" DATE,
	"SPC_RECURRENCE" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_STARTDATE" DATE,
	"SPC_ENDDATE" DATE
   );
--
-- SPCREQUEST
--
  CREATE TABLE "SPCREQUEST" 
   (	"SPC_REQUESTTYPE" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_REQUESTSTATE" NUMBER(19,0) NOT NULL ENABLE,
	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_ORIGINATORTYPE" VARCHAR2(64 CHAR) NOT NULL ENABLE
   );
--
-- SPCSCHEDULE
--
  CREATE TABLE "SPCSCHEDULE" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_DAY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"SPC_TIME" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_DURATION" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- SPCSTATISTICS
--
  CREATE TABLE "SPCSTATISTICS" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_STAT_RUNSTATE" NUMBER(19,0) NOT NULL ENABLE,
	"SPC_STAT_TOTALCOUNT" NUMBER(19,0),
	"SPC_STAT_TOTALBYTES" VARCHAR2(32 CHAR),
	"SPC_STAT_MOVEDCOUNT" NUMBER(19,0),
	"SPC_STAT_MOVEDBYTES" VARCHAR2(32 CHAR),
	"SPC_STAT_STARTDATE" DATE,
	"SPC_STAT_ENDDATE" DATE,
	"SPC_STAT_ENDSTATE" NUMBER(19,0),
	"SPC_STAT_ERRORMESSAGE" VARCHAR2(4000 CHAR)
   );
--
-- SPECIAL_CHARACTERS
--
  CREATE TABLE "SPECIAL_CHARACTERS" 
   (	"SPECIAL_CHAR" VARCHAR2(32 CHAR) NOT NULL ENABLE
   );
--
-- SS_APPLICATION
--
  CREATE TABLE "SS_APPLICATION" 
   (	"APP_ID" NUMBER(10,0),
	"FORM_NUMBER" VARCHAR2(30) NOT NULL ENABLE,
	"ID_NUMBER" CHAR(25),
	"SOCPEN_ID_NUMBER" VARCHAR2(13),
	"ALT_ID_NUMBER_1" VARCHAR2(13),
	"ALT_ID_NUMBER_2" VARCHAR2(13),
	"ALT_ID_NUMBER_3" VARCHAR2(13),
	"SURNAME" VARCHAR2(50),
	"NAME" VARCHAR2(30),
	"APPLICATION_DATE" VARCHAR2(50),
	"GRANT_TYPE" VARCHAR2(10),
	"FORM_TYPE" CHAR(1) NOT NULL ENABLE,
	"DISABILITY_TYPE" VARCHAR2(15),
	"DISABILITY_DESC" VARCHAR2(70),
	"MED_FORM" VARCHAR2(15),
	"DOC_NAME" VARCHAR2(30),
	"GENDER" VARCHAR2(6),
	"RACE" NUMBER(10,0),
	"PAYPOINT" VARCHAR2(30),
	"TOWN" NUMBER(10,0),
	"REGION_CODE" CHAR(10),
	"SERVICE_ID" NUMBER(10,0),
	"DISTRICT_OFFICE" VARCHAR2(5),
	"BOX" VARCHAR2(10),
	"POSITN" VARCHAR2(20),
	"A_YEAR" CHAR(20),
	"BOX_TYPE" VARCHAR2(30),
	"LETTER_GEN_DATE" VARCHAR2(50),
	"LETTER_SENT_DATE" VARCHAR2(50),
	"ON_PERSAL" VARCHAR2(30),
	"ON_GEPF" VARCHAR2(30),
	"ON_MUNI" VARCHAR2(30),
	"PERSAL_NO" VARCHAR2(8),
	"APPL_STATUS" VARCHAR2(20),
	"DATE_IN" VARCHAR2(50),
	"ACTION_DATE" VARCHAR2(50),
	"ACTION_RESULT" VARCHAR2(20),
	"REASON" VARCHAR2(300),
	"MATCH_TYPE" VARCHAR2(20),
	"REGISTRY_REMOVAL" VARCHAR2(30),
	"APPLICATION_DOC" VARCHAR2(30),
	"ID_BOOK" VARCHAR2(30),
	"MEDICAL_CERT" VARCHAR2(30),
	"BIRTH_CERT" VARCHAR2(30),
	"COURT_ORD" VARCHAR2(30),
	"WAR_PAPERS" VARCHAR2(30),
	"USER_ID_CREATED" VARCHAR2(8),
	"OLD_POSITION" NUMBER(10,0),
	"APPROVED_AMOUNT" NUMBER(18,0),
	"ONE_OFF_PAYMENT" NUMBER(18,0),
	"PAYMENT_DATE" VARCHAR2(50),
	"DC_PERSAL_NO" NUMBER(10,0),
	"DC_ACTION" VARCHAR2(10),
	"DC_ACTION_DATE" VARCHAR2(50),
	"DC_COMPLETE" VARCHAR2(30),
	"LETTER" VARCHAR2(50),
	"LETTER_MEMO" VARCHAR2(255),
	"COPY_PRINT_DATE" VARCHAR2(50),
	"BANKNAME" VARCHAR2(20),
	"ANNEXURE_A" VARCHAR2(50),
	"ANNEXURE_B" VARCHAR2(50),
	"HOME_AFFAIRS_REF1" VARCHAR2(50),
	"HOME_AFFAIRS_REF2" VARCHAR2(50),
	"ID_DOC" NUMBER(1,0),
	"PROOF_ID" NUMBER(1,0),
	"BIRTH_CERTIFICATE" NUMBER(1,0),
	"PROOF_BIRTH" NUMBER(1,0),
	"SOCPEN_REF" VARCHAR2(13),
	"REFUGEE_GRANT" NUMBER(1,0),
	"DATE_EXPIRY_OF_TEMP_ID" VARCHAR2(50),
	"PAYMENT_METHOD" NUMBER(10,0),
	"CLIENT_DOB" VARCHAR2(50),
	"FLAG_ADMIN_REVIEW" NUMBER(1,0),
	"QA_AMENDMENTS" NUMBER(1,0),
	"VERSION" VARCHAR2(50),
	"SERVICE_POINT_ID" NUMBER(10,0)
   );
--
-- STORAGE
--
  CREATE TABLE "STORAGE" 
   (	"STORAGE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"STORAGE_DESC_E" VARCHAR2(64 CHAR),
	"STORAGE_DESC_F" VARCHAR2(64 CHAR),
	"DISABLEDFLAG" NUMBER(3,0)
   );
--
-- STORAGELOCATOR
--
  CREATE TABLE "STORAGELOCATOR" 
   (	"FACILITY" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"AREA" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"BOXLOCATOR" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"LOCATORTYPE" VARCHAR2(32 CHAR),
	"REFRATE" VARCHAR2(32 CHAR),
	"TOTALSPACE" NUMBER(28,14),
	"FREESPACE" NUMBER(28,14),
	"STORLOCDEPTH" NUMBER(28,14),
	"STORLOCHEIGHT" NUMBER(28,14),
	"STORLOCLENGTH" NUMBER(28,14),
	"LOCATORSORTKEY" VARCHAR2(128 CHAR)
   );
--
-- SYSTEMLANGUAGES
--
  CREATE TABLE "SYSTEMLANGUAGES" 
   (	"LANGUAGECODE" VARCHAR2(6 CHAR) NOT NULL ENABLE,
	"LANGUAGENAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"LANGUAGENAMELOCAL" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- TABLES
--
  CREATE TABLE "TABLES" 
   (	"TABLES" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"TABLES_DESC_E" VARCHAR2(64 CHAR),
	"TABLES_DESC_F" VARCHAR2(64 CHAR),
	"FILTERED" VARCHAR2(32 CHAR),
	"RIMSCONFIGFILTER" NUMBER(5,0),
	"EXCEPTIONFLAG" NUMBER(5,0)
   );
--
-- TDW_FILE_LOCATION
--
  CREATE TABLE "TDW_FILE_LOCATION" 
   (	"REGION" VARCHAR2(50),
	"CONTAINER_CODE" VARCHAR2(20),
	"CONTAINER_ALTCODE" VARCHAR2(50),
	"FILEFOLDER_CODE" VARCHAR2(20),
	"FILEFOLDER_ALTCODE" VARCHAR2(50),
	"DESCRIPTION" VARCHAR2(20),
	"GRANT_TYPE" VARCHAR2(40)
   );
--
-- TEMP_ANCESTORS_0
--
  CREATE TABLE "TEMP_ANCESTORS_0" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"ANCESTORID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- TEMP_ANCESTORS_1
--
  CREATE TABLE "TEMP_ANCESTORS_1" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"ANCESTORID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- TEMP_ANCESTORS_2
--
  CREATE TABLE "TEMP_ANCESTORS_2" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"ANCESTORID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- TEMP_ANCESTORS_3
--
  CREATE TABLE "TEMP_ANCESTORS_3" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"ANCESTORID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- TEMP_ANCESTORS_4
--
  CREATE TABLE "TEMP_ANCESTORS_4" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"ANCESTORID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- TEMP_ANCESTORS_5
--
  CREATE TABLE "TEMP_ANCESTORS_5" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"ANCESTORID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- TEMP_ANCESTORS_HEAP
--
  CREATE TABLE "TEMP_ANCESTORS_HEAP" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"ANCESTORID" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- TERMLEVEL
--
  CREATE TABLE "TERMLEVEL" 
   (	"TERMLEVEL" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"TERMLEVEL_DESC" VARCHAR2(128 CHAR),
	"TERMLEVELNUMBER" NUMBER(10,0),
	"TERMTYPE" NUMBER(10,0)
   );
--
-- TESTTABLE
--
  CREATE TABLE "TESTTABLE" 
   (	"VOLUMEID" NUMBER(10,0) NOT NULL ENABLE,
	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"VERSIONNUM" NUMBER(10,0) NOT NULL ENABLE,
	"SEQ" NUMBER(10,0),
	"ROWSEQNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"ITERATIONNUM" NUMBER(10,0) DEFAULT 1 NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR),
	"SURNAME" VARCHAR2(255 CHAR),
	"REGION" VARCHAR2(255 CHAR),
	"DISTRICT" VARCHAR2(255 CHAR)
   );
--
-- THESHISTORY
--
  CREATE TABLE "THESHISTORY" 
   (	"TERMID" NUMBER(19,0) NOT NULL ENABLE,
	"EDITDATE" DATE NOT NULL ENABLE,
	"EDITPATRON" NUMBER(19,0),
	"TERM" VARCHAR2(64 CHAR),
	"TERMTYPE" NUMBER(10,0),
	"LANGUAGE" VARCHAR2(32 CHAR),
	"SCOPENOTE" VARCHAR2(255 CHAR),
	"KEYWORD" VARCHAR2(64 CHAR),
	"TERMLEVEL" VARCHAR2(32 CHAR),
	"STARTDATE" DATE,
	"ENDDATE" DATE,
	"TERMCOMMENTS" VARCHAR2(4000 CHAR),
	"FILENUMBER" VARCHAR2(64 CHAR),
	"RSI" VARCHAR2(32 CHAR),
	"TERMACTION" VARCHAR2(32 CHAR)
   );
--
-- THESRELATIONS
--
  CREATE TABLE "THESRELATIONS" 
   (	"TERMID1" NUMBER(19,0) NOT NULL ENABLE,
	"RELATTYPE" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"TERMID2" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- THESTERMS
--
  CREATE TABLE "THESTERMS" 
   (	"TERMID" NUMBER(19,0) NOT NULL ENABLE,
	"TERM" VARCHAR2(64 CHAR),
	"TERMTYPE" NUMBER(10,0),
	"LANGUAGE" VARCHAR2(32 CHAR),
	"SCOPENOTE" VARCHAR2(255 CHAR),
	"KEYWORD" VARCHAR2(64 CHAR),
	"TERMLEVEL" VARCHAR2(32 CHAR),
	"STARTDATE" DATE,
	"ENDDATE" DATE,
	"TERMCOMMENTS" VARCHAR2(4000 CHAR),
	"FILENUMBER" VARCHAR2(64 CHAR),
	"RSI" VARCHAR2(32 CHAR),
	"TERMSOURCE" VARCHAR2(32 CHAR)
   );
--
-- TOAD_PLAN_TABLE
--
  CREATE TABLE "TOAD_PLAN_TABLE" 
   (	"STATEMENT_ID" VARCHAR2(30),
	"PLAN_ID" NUMBER,
	"TIMESTAMP" DATE,
	"REMARKS" VARCHAR2(4000),
	"OPERATION" VARCHAR2(30),
	"OPTIONS" VARCHAR2(255),
	"OBJECT_NODE" VARCHAR2(128),
	"OBJECT_OWNER" VARCHAR2(30),
	"OBJECT_NAME" VARCHAR2(30),
	"OBJECT_ALIAS" VARCHAR2(65),
	"OBJECT_INSTANCE" NUMBER(*,0),
	"OBJECT_TYPE" VARCHAR2(30),
	"OPTIMIZER" VARCHAR2(255),
	"SEARCH_COLUMNS" NUMBER,
	"ID" NUMBER(*,0),
	"PARENT_ID" NUMBER(*,0),
	"DEPTH" NUMBER(*,0),
	"POSITION" NUMBER(*,0),
	"COST" NUMBER(*,0),
	"CARDINALITY" NUMBER(*,0),
	"BYTES" NUMBER(*,0),
	"OTHER_TAG" VARCHAR2(255),
	"PARTITION_START" VARCHAR2(255),
	"PARTITION_STOP" VARCHAR2(255),
	"PARTITION_ID" NUMBER(*,0),
	"OTHER" LONG,
	"DISTRIBUTION" VARCHAR2(30),
	"CPU_COST" NUMBER(*,0),
	"IO_COST" NUMBER(*,0),
	"TEMP_SPACE" NUMBER(*,0),
	"ACCESS_PREDICATES" VARCHAR2(4000),
	"FILTER_PREDICATES" VARCHAR2(4000),
	"PROJECTION" VARCHAR2(4000),
	"TIME" NUMBER(*,0),
	"QBLOCK_NAME" VARCHAR2(30),
	"OTHER_XML" CLOB
   );
--
-- TRANSFERS
--
  CREATE TABLE "TRANSFERS" 
   (	"TRANSFERID" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"TRANSSORTKEY" VARCHAR2(255 CHAR),
	"USERID" NUMBER(19,0),
	"TRSFCREATE" DATE,
	"TRSFSENT" DATE,
	"TRSFRECD" DATE,
	"TRSFCOMMENT" VARCHAR2(255 CHAR),
	"TRSFESTSIZE" NUMBER(28,14),
	"TRSFDATEFROM" DATE,
	"TRSFDATETO" DATE,
	"TRSFCONTENT" VARCHAR2(4000 CHAR)
   );
--
-- UPDATEAGENTHISTORY
--
  CREATE TABLE "UPDATEAGENTHISTORY" 
   (	"AGENT_ID" VARCHAR2(255 CHAR),
	"EVENT_TYPE" NUMBER(3,0),
	"EVENT_DATE" DATE,
	"EVENT_RESULT" VARCHAR2(255 CHAR),
	"EVENT_SOURCE" VARCHAR2(255 CHAR),
	"EVENT_METADATA" VARCHAR2(4000 CHAR)
   );
--
-- UPDATEAGENTS
--
  CREATE TABLE "UPDATEAGENTS" 
   (	"AGENT_ID" VARCHAR2(255 CHAR),
	"HOST_NAME" VARCHAR2(255 CHAR),
	"HOST_IP" VARCHAR2(64 CHAR),
	"HOST_PORT" VARCHAR2(64 CHAR),
	"HOST_OS" VARCHAR2(255 CHAR),
	"STATUS" VARCHAR2(255 CHAR),
	"CREATE_DATETIME" DATE,
	"LAST_MODIFY_DATETIME" DATE,
	"ISACTIVE" NUMBER(3,0),
	"METADATA" CLOB
   );
--
-- UPDATEAGENTSESSION
--
  CREATE TABLE "UPDATEAGENTSESSION" 
   (	"SESSIONID" VARCHAR2(64 CHAR),
	"CREATIONDATETIME" DATE,
	"UPDATEDATETIME" DATE
   );
--
-- UPDATEPACKAGES
--
  CREATE TABLE "UPDATEPACKAGES" 
   (	"PKG_ID" NUMBER(19,0) NOT NULL ENABLE,
	"PKG_NAME" VARCHAR2(255 CHAR),
	"PKG_STATUS" NUMBER(3,0),
	"PKG_TYPE" NUMBER(3,0),
	"PKG_METADATA" VARCHAR2(4000 CHAR)
   );
--
-- UPDATEPACKAGES_DATA
--
  CREATE TABLE "UPDATEPACKAGES_DATA" 
   (	"PKG_ID" VARCHAR2(255 CHAR),
	"PKG_DATA" BLOB
   );
--
-- UPDATESETTINGS
--
  CREATE TABLE "UPDATESETTINGS" 
   (	"NAME" VARCHAR2(255 CHAR),
	"VALUE" CLOB,
	"TYPE" VARCHAR2(64 CHAR),
	"DESCRIPTION" VARCHAR2(255 CHAR),
	"SECTION" VARCHAR2(255 CHAR),
	"DISPLAY" NUMBER(3,0),
	"CONTROLID" VARCHAR2(255 CHAR),
	"METADATA" BLOB,
	"LASTUPDATED" DATE
   );
--
-- USERLABELS
--
  CREATE TABLE "USERLABELS" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"LABELDEFNAME" VARCHAR2(32 CHAR) NOT NULL ENABLE,
	"USERID" NUMBER(19,0),
	"CREATEDATETIME" DATE,
	"LABELCONTENT" CLOB,
	"PRINTFLAG" NUMBER(3,0),
	"NOOFCOPIES" NUMBER(5,0)
   );
--
-- USERNICKNAME
--
  CREATE TABLE "USERNICKNAME" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"NICKNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DOMAIN" VARCHAR2(255 CHAR),
	"PWPDATAID" NUMBER(19,0) NOT NULL ENABLE,
	"XSL" NUMBER(19,0)
   );
--
-- USERTABRIGHTS
--
  CREATE TABLE "USERTABRIGHTS" 
   (	"TABNAME" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"RIGHTID" NUMBER(19,0) NOT NULL ENABLE,
	"OWNEREDIT" NUMBER(3,0) NOT NULL ENABLE
   );
--
-- WDATA
--
  CREATE TABLE "WDATA" 
   (	"DATA_WORKID" NUMBER(19,0) NOT NULL ENABLE,
	"DATA_SUBWORKID" NUMBER(19,0) NOT NULL ENABLE,
	"DATA_TYPE" NUMBER(10,0) NOT NULL ENABLE,
	"DATA_SUBTYPE" NUMBER(10,0) NOT NULL ENABLE,
	"DATA_USERDATA" VARCHAR2(4000 CHAR),
	"DATA_DESCRIPTION" VARCHAR2(4000 CHAR)
   );
--
-- WEBEDITLOCK
--
  CREATE TABLE "WEBEDITLOCK" 
   (	"ANCHORNID" NUMBER(19,0) NOT NULL ENABLE,
	"OWNERID" NUMBER(19,0) NOT NULL ENABLE,
	"EXPIRYDATE" DATE,
	"LINKRESDATE" DATE
   );
--
-- WEBNODESDISPLAY
--
  CREATE TABLE "WEBNODESDISPLAY" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"WND_OWNER" NUMBER(10,0),
	"WND_CREATEDBY" NUMBER(10,0),
	"WND_CREATEDATE" DATE,
	"WND_MODIFIEDBY" NUMBER(10,0),
	"WND_VERSION" NUMBER(10,0),
	"WND_COMMENTS" NUMBER(19,0)
   );
--
-- WEBNODESFILTER
--
  CREATE TABLE "WEBNODESFILTER" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"WNF_ATTR_1164938_6" VARCHAR2(64 CHAR),
	"WNF_ATTR_1164938_2" NUMBER(19,0),
	"WNF_READYDATE" DATE
   );
--
-- WEBNODESMETA_EN_ZA
--
  CREATE TABLE "WEBNODESMETA_EN_ZA" 
   (	"DATAID" NUMBER(19,0) NOT NULL ENABLE,
	"NAME" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"DCOMMENT" VARCHAR2(255 CHAR)
   );
--
-- WEBREPORTS
--
  CREATE TABLE "WEBREPORTS" 
   (	"NODEID" NUMBER(10,0) NOT NULL ENABLE,
	"USERID" NUMBER(10,0) NOT NULL ENABLE,
	"SEQNO" NUMBER(10,0),
	"SCHEDENABLED" NUMBER(10,0),
	"NEXTRUN" DATE,
	"RUNTIMES" NUMBER(10,0),
	"REPMIN" NUMBER(10,0),
	"REPHOUR" NUMBER(10,0),
	"REPDAY" NUMBER(10,0),
	"REPWEEK" NUMBER(10,0),
	"WRDATA" CLOB
   );
--
-- WEBREPORTSTATS
--
  CREATE TABLE "WEBREPORTSTATS" 
   (	"USERID" NUMBER(10,0) NOT NULL ENABLE,
	"USERSTATUS" NUMBER(10,0),
	"DATEFIRSTACTION" DATE,
	"DATELASTACTION" DATE,
	"ACTION" VARCHAR2(64 CHAR),
	"NODEID" NUMBER(10,0),
	"STATS" CLOB,
	CONSTRAINT "WEBREPORTSTATS_PRIMARY" PRIMARY KEY ("USERID") ENABLE
   );
--
-- WEBREPORTTRIGGERS
--
  CREATE TABLE "WEBREPORTTRIGGERS" 
   (	"DATAID" NUMBER(10,0) NOT NULL ENABLE,
	"WRID" NUMBER(10,0) NOT NULL ENABLE,
	"INHERIT" NUMBER(10,0),
	"TRIGGERS" CLOB,
	"SHOW" NUMBER(10,0)
   );
--
-- WEBREPORTUGTRIGGERS
--
  CREATE TABLE "WEBREPORTUGTRIGGERS" 
   (	"ROWNO" NUMBER(10,0) NOT NULL ENABLE,
	"UGEVENT" VARCHAR2(64 CHAR) NOT NULL ENABLE,
	"WRID" NUMBER(10,0) NOT NULL ENABLE,
	"USERID" NUMBER(10,0),
	"GLOBAL" NUMBER(10,0),
	"INHERIT" NUMBER(10,0)
   );
--
-- WFATTRDATA
--
  CREATE TABLE "WFATTRDATA" 
   (	"WF_ID" NUMBER(19,0) NOT NULL ENABLE,
	"WF_ATTRID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_ATTRTYPE" NUMBER(10,0) NOT NULL ENABLE,
	"WF_ENTRYNUM" NUMBER(10,0) NOT NULL ENABLE,
	"WF_VALINT" NUMBER(19,0),
	"WF_VALREAL" NUMBER(28,14),
	"WF_VALDATE" DATE,
	"WF_VALSTR" VARCHAR2(255 CHAR),
	"WF_VALLONG" CLOB
   );
--
-- WFATTRDATAVERSIONS
--
  CREATE TABLE "WFATTRDATAVERSIONS" 
   (	"WF_ID" NUMBER(19,0) NOT NULL ENABLE,
	"WF_SUBWORKID" NUMBER(19,0) NOT NULL ENABLE,
	"WF_TASKID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_ATTRID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_ATTRTYPE" NUMBER(10,0) NOT NULL ENABLE,
	"WF_ENTRYNUM" NUMBER(10,0) NOT NULL ENABLE,
	"WF_VALINT" NUMBER(19,0),
	"WF_VALREAL" NUMBER(28,14),
	"WF_VALDATE" DATE,
	"WF_VALSTR" VARCHAR2(255 CHAR),
	"WF_VALLONG" CLOB,
	"WF_TASKITERNUM" NUMBER(10,0)
   );
--
-- WFCOMMENTS
--
  CREATE TABLE "WFCOMMENTS" 
   (	"WF_WORKFLOWID" NUMBER(19,0) NOT NULL ENABLE,
	"WF_TASKID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_VALUE" CLOB,
	"WF_DATESAVED" DATE NOT NULL ENABLE,
	"WF_SEQUENCE" NUMBER(10,0),
	"WF_PERFORMERID" NUMBER(19,0)
   );
--
-- WFDISPOSITIONS
--
  CREATE TABLE "WFDISPOSITIONS" 
   (	"WF_WORKFLOWID" NUMBER(19,0) NOT NULL ENABLE,
	"WF_TASKID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_VALUE" VARCHAR2(4000 CHAR)
   );
--
-- WFFORMS
--
  CREATE TABLE "WFFORMS" 
   (	"WF_WORKFLOWID" NUMBER(19,0) NOT NULL ENABLE,
	"WF_FORMID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_VALUE" CLOB
   );
--
-- WFFORMSLOCK
--
  CREATE TABLE "WFFORMSLOCK" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- WFFORMSVERSIONS
--
  CREATE TABLE "WFFORMSVERSIONS" 
   (	"WF_WORKFLOWID" NUMBER(19,0) NOT NULL ENABLE,
	"WF_TASKID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_FORMID" NUMBER(10,0) NOT NULL ENABLE,
	"WF_VALUE" CLOB,
	"WF_SUBWORKID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- WIKILINKS
--
  CREATE TABLE "WIKILINKS" 
   (	"CONTAINERID" NUMBER(19,0) NOT NULL ENABLE,
	"SOURCEID" NUMBER(19,0) NOT NULL ENABLE,
	"TARGETID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- WIKIREDIRECTS
--
  CREATE TABLE "WIKIREDIRECTS" 
   (	"CONTAINERID" NUMBER(19,0) NOT NULL ENABLE,
	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"PREVIOUSNAME" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- WINDEXNOTIFY
--
  CREATE TABLE "WINDEXNOTIFY" 
   (	"WORKID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBWORKID" NUMBER(19,0) NOT NULL ENABLE,
	"OPERATION" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- WLOCK
--
  CREATE TABLE "WLOCK" 
   (	"WLOCK_WORKID" NUMBER(19,0)
   );
--
-- WMAP
--
  CREATE TABLE "WMAP" 
   (	"MAP_MAPID" NUMBER(19,0) NOT NULL ENABLE,
	"MAP_STARTLINKS" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"MAP_ENDLINKS" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"MAP_INITIATECB" VARCHAR2(4000 CHAR),
	"MAP_COMPLETECB" VARCHAR2(4000 CHAR),
	"MAP_DELETECB" VARCHAR2(4000 CHAR),
	"MAP_PAINTER" VARCHAR2(4000 CHAR),
	"MAP_FLAGS" NUMBER(10,0),
	"MAP_TITLE" VARCHAR2(255 CHAR),
	"MAP_DESCRIPTION" VARCHAR2(4000 CHAR),
	"MAP_INSTRUCTIONS" VARCHAR2(4000 CHAR),
	"MAP_PRIORITY" NUMBER(10,0),
	"MAP_PROJECT" VARCHAR2(255 CHAR),
	"MAP_OWNERID" NUMBER(19,0),
	"MAP_USERDATA" VARCHAR2(4000 CHAR),
	"MAP_MANAGERID" NUMBER(19,0),
	"MAP_DUEDURATION" NUMBER(10,0),
	"MAP_DUEDATE" DATE,
	"MAP_DUETIME" NUMBER(10,0),
	"MAP_STARTDATE" DATE,
	"MAP_STOPCB" VARCHAR2(4000 CHAR),
	"MAP_SUSPENDCB" VARCHAR2(4000 CHAR),
	"MAP_RESUMECB" VARCHAR2(4000 CHAR),
	"MAP_ARCHIVECB" VARCHAR2(4000 CHAR),
	"MAP_CUSTOMDATA" VARCHAR2(4000 CHAR),
	"MAP_TYPE" NUMBER(10,0),
	"MAP_SUBTYPE" NUMBER(10,0),
	"MAP_MAPOBJID" NUMBER(19,0)
   );
--
-- WMAPTASK
--
  CREATE TABLE "WMAPTASK" 
   (	"MAPTASK_MAPID" NUMBER(19,0) NOT NULL ENABLE,
	"MAPTASK_TASKID" NUMBER(10,0) NOT NULL ENABLE,
	"MAPTASK_WAITCOUNT" NUMBER(10,0) NOT NULL ENABLE,
	"MAPTASK_SUBMAPID" NUMBER(19,0),
	"MAPTASK_PERFORMERID" NUMBER(19,0),
	"MAPTASK_INITIATECB" VARCHAR2(4000 CHAR),
	"MAPTASK_COMPLETECB" VARCHAR2(4000 CHAR),
	"MAPTASK_READYCB" VARCHAR2(4000 CHAR),
	"MAPTASK_DONECB" VARCHAR2(4000 CHAR),
	"MAPTASK_KILLCB" VARCHAR2(4000 CHAR),
	"MAPTASK_PERFORMERCB" VARCHAR2(4000 CHAR),
	"MAPTASK_SUBMAPIDCB" VARCHAR2(4000 CHAR),
	"MAPTASK_CONDITIONCB" VARCHAR2(4000 CHAR),
	"MAPTASK_CONDITION" VARCHAR2(4000 CHAR),
	"MAPTASK_FORM" VARCHAR2(4000 CHAR),
	"MAPTASK_TRUELINKS" VARCHAR2(64 CHAR),
	"MAPTASK_FALSELINKS" VARCHAR2(64 CHAR),
	"MAPTASK_LOOPLINKS" VARCHAR2(64 CHAR),
	"MAPTASK_PREVIOUSLINKS" VARCHAR2(64 CHAR),
	"MAPTASK_PAINTER" VARCHAR2(4000 CHAR),
	"MAPTASK_DUEDURATION" NUMBER(10,0),
	"MAPTASK_DUEDATE" DATE,
	"MAPTASK_DUETIME" NUMBER(10,0),
	"MAPTASK_FLAGS" NUMBER(10,0),
	"MAPTASK_TITLE" VARCHAR2(255 CHAR),
	"MAPTASK_DESCRIPTION" VARCHAR2(4000 CHAR),
	"MAPTASK_INSTRUCTIONS" VARCHAR2(4000 CHAR),
	"MAPTASK_PRIORITY" NUMBER(10,0),
	"MAPTASK_USERDATA" VARCHAR2(4000 CHAR),
	"MAPTASK_STARTDATE" DATE,
	"MAPTASK_RESURRECTCB" VARCHAR2(4000 CHAR),
	"MAPTASK_CUSTOMDATA" VARCHAR2(4000 CHAR),
	"MAPTASK_TYPE" NUMBER(10,0),
	"MAPTASK_SUBTYPE" NUMBER(10,0),
	"MAPTASK_BEFORESENDCB" VARCHAR2(4000 CHAR)
   );
--
-- WOPIFAILEDSESSIONS
--
  CREATE TABLE "WOPIFAILEDSESSIONS" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"ORIGINALVERID" NUMBER(19,0) NOT NULL ENABLE,
	"SESSIONID" NUMBER(19,0) NOT NULL ENABLE,
	"ORIGINALPARENTID" NUMBER(19,0) NOT NULL ENABLE
   );
--
-- WOPISESSIONS
--
  CREATE TABLE "WOPISESSIONS" 
   (	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"ORIGINALVERID" NUMBER(19,0) NOT NULL ENABLE,
	"SESSIONSTART" DATE NOT NULL ENABLE,
	"LOCKID" VARCHAR2(1024 CHAR) NOT NULL ENABLE,
	"WOPILOCKTS" DATE NOT NULL ENABLE,
	"SESSIONID" NUMBER(19,0)
   );
--
-- WOPITICKETS
--
  CREATE TABLE "WOPITICKETS" 
   (	"TICKET" VARCHAR2(1024 CHAR) NOT NULL ENABLE,
	"RDM" VARCHAR2(1024 CHAR) NOT NULL ENABLE,
	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"NODEID" NUMBER(19,0) NOT NULL ENABLE,
	"EXP" DATE NOT NULL ENABLE
   );
--
-- WOPIUSERINFO
--
  CREATE TABLE "WOPIUSERINFO" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"USERINFOSTRING" VARCHAR2(1024 CHAR) NOT NULL ENABLE
   );
--
-- WOPIUSERNOTIFY
--
  CREATE TABLE "WOPIUSERNOTIFY" 
   (	"USERID" NUMBER(19,0) NOT NULL ENABLE,
	"PROMOTEDATE" DATE,
	"PROMOTESTATUS" NUMBER(10,0),
	"SHOWLICENSEDATE" DATE,
	"SHOWLICENSESTATUS" NUMBER(10,0)
   );
--
-- WORKERPACKAGES
--
  CREATE TABLE "WORKERPACKAGES" 
   (	"TASKID" NUMBER(19,0) NOT NULL ENABLE,
	"BLOB" CLOB NOT NULL ENABLE
   );
--
-- WORKERQUEUE
--
  CREATE TABLE "WORKERQUEUE" 
   (	"NID" NUMBER(19,0) NOT NULL ENABLE,
	"QUEUETIME" DATE NOT NULL ENABLE,
	"TYPE" NUMBER(19,0) NOT NULL ENABLE,
	"PRIORITY" NUMBER(19,0) NOT NULL ENABLE,
	"ATTEMPTS" NUMBER(19,0) NOT NULL ENABLE,
	"HANDLERID" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"FINGERPRINT" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"ACTIVATIONDATE" DATE NOT NULL ENABLE
   );
--
-- WORKERQUEUECHILDREN
--
  CREATE TABLE "WORKERQUEUECHILDREN" 
   (	"TASKID" NUMBER(19,0) NOT NULL ENABLE,
	"CHILDTASKID" NUMBER(19,0) NOT NULL ENABLE,
	CONSTRAINT "WORKERQUEUECHILDREN_PRIMARY" PRIMARY KEY ("TASKID","CHILDTASKID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS
 ;
--
-- WORKERQUEUECOMPLETE
--
  CREATE TABLE "WORKERQUEUECOMPLETE" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"QUEUETIME" DATE NOT NULL ENABLE,
	"TYPE" NUMBER(19,0) NOT NULL ENABLE,
	"PRIORITY" NUMBER(19,0) NOT NULL ENABLE,
	"ATTEMPTS" NUMBER(19,0) NOT NULL ENABLE,
	"HANDLERID" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"RESULT" CLOB NOT NULL ENABLE,
	"FINGERPRINT" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- WORKERQUEUECURRENT
--
  CREATE TABLE "WORKERQUEUECURRENT" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"QUEUETIME" DATE NOT NULL ENABLE,
	"TYPE" NUMBER(19,0) NOT NULL ENABLE,
	"PRIORITY" NUMBER(19,0) NOT NULL ENABLE,
	"ATTEMPTS" NUMBER(19,0) NOT NULL ENABLE,
	"HANDLERID" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"WORKERID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"FINGERPRINT" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"STATUS" NUMBER(19,0) NOT NULL ENABLE,
	"WORKERTIME" DATE NOT NULL ENABLE
   );
--
-- WORKERQUEUEERROR
--
  CREATE TABLE "WORKERQUEUEERROR" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"QUEUETIME" DATE,
	"TYPE" NUMBER(19,0),
	"PRIORITY" NUMBER(19,0),
	"ATTEMPTS" NUMBER(19,0),
	"HANDLERID" VARCHAR2(128 CHAR),
	"WORKERID" VARCHAR2(255 CHAR),
	"FINGERPRINT" VARCHAR2(255 CHAR),
	"STATUS" NUMBER(19,0),
	"WORKERTIME" DATE,
	"ERRORTIME" DATE NOT NULL ENABLE,
	"DESCRIPTION" CLOB,
	"USERID" NUMBER(19,0),
	"PARENTID" NUMBER(19,0)
   );
--
-- WORKERQUEUEPENDING
--
  CREATE TABLE "WORKERQUEUEPENDING" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE,
	"QUEUETIME" DATE NOT NULL ENABLE,
	"TYPE" NUMBER(19,0) NOT NULL ENABLE,
	"PRIORITY" NUMBER(19,0) NOT NULL ENABLE,
	"ATTEMPTS" NUMBER(19,0) NOT NULL ENABLE,
	"HANDLERID" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"FINGERPRINT" VARCHAR2(255 CHAR) NOT NULL ENABLE
   );
--
-- WORKERQUEUETRACKING
--
  CREATE TABLE "WORKERQUEUETRACKING" 
   (	"CHECKTIME" NUMBER(10,0) NOT NULL ENABLE,
	"HANDLERID" VARCHAR2(128 CHAR) NOT NULL ENABLE,
	"EVENTTYPE" NUMBER(3,0) NOT NULL ENABLE,
	"COUNT" NUMBER(10,0)
   );
--
-- WORKERSTATUS
--
  CREATE TABLE "WORKERSTATUS" 
   (	"WORKERID" VARCHAR2(255 CHAR) NOT NULL ENABLE,
	"AGENTTYPE" NUMBER(3,0) NOT NULL ENABLE,
	"LASTUPDATE" DATE,
	"LASTSTATUS" NUMBER(10,0),
	"STATUSSTR" VARCHAR2(255 CHAR),
	"COUNTER" NUMBER(10,0)
   );
--
-- WSUBWORK
--
  CREATE TABLE "WSUBWORK" 
   (	"SUBWORK_WORKID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBWORK_SUBWORKID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBWORK_MAPID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBWORK_FLAGS" NUMBER(10,0),
	"SUBWORK_RETURNSUBWORKID" NUMBER(19,0),
	"SUBWORK_RETURNTASKID" NUMBER(10,0),
	"SUBWORK_DATEDUE_MIN" DATE,
	"SUBWORK_DATEDUE_MAX" DATE,
	"SUBWORK_DATEINITIATED" DATE,
	"SUBWORK_DATECOMPLETED" DATE,
	"SUBWORK_STATUS" NUMBER(5,0),
	"SUBWORK_TITLE" VARCHAR2(255 CHAR),
	"SUBWORK_PROJECT" VARCHAR2(255 CHAR),
	"SUBWORK_USERDATA" VARCHAR2(4000 CHAR),
	"SUBWORK_CUSTOMDATA" VARCHAR2(4000 CHAR)
   );
--
-- WSUBWORKTASK
--
  CREATE TABLE "WSUBWORKTASK" 
   (	"SUBWORKTASK_WORKID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBWORKTASK_SUBWORKID" NUMBER(19,0) NOT NULL ENABLE,
	"SUBWORKTASK_TASKID" NUMBER(10,0) NOT NULL ENABLE,
	"SUBWORKTASK_WAITCOUNT" NUMBER(10,0) NOT NULL ENABLE,
	"SUBWORKTASK_PERFORMERID" NUMBER(19,0),
	"SUBWORKTASK_DATEDUE_MIN" DATE,
	"SUBWORKTASK_DATEDUE_MAX" DATE,
	"SUBWORKTASK_DATEMILESTONE" DATE,
	"SUBWORKTASK_DATEREADY" DATE,
	"SUBWORKTASK_DATEDONE" DATE,
	"SUBWORKTASK_STATUS" NUMBER(5,0),
	"SUBWORKTASK_FLAGS" NUMBER(10,0),
	"SUBWORKTASK_TYPE" NUMBER(10,0),
	"SUBWORKTASK_TITLE" VARCHAR2(255 CHAR),
	"SUBWORKTASK_USERDATA" VARCHAR2(4000 CHAR),
	"SUBWORKTASK_CUSTOMDATA" VARCHAR2(4000 CHAR),
	"SUBWORKTASK_ITERNUM" NUMBER(10,0)
   );
--
-- WWORK
--
  CREATE TABLE "WWORK" 
   (	"WORK_WORKID" NUMBER(19,0) NOT NULL ENABLE,
	"WORK_FLAGS" NUMBER(10,0),
	"WORK_DATEDUE_MIN" DATE,
	"WORK_DATEDUE_MAX" DATE,
	"WORK_DATEINITIATED" DATE,
	"WORK_DATECOMPLETED" DATE,
	"WORK_OWNERID" NUMBER(19,0),
	"WORK_MANAGERID" NUMBER(19,0),
	"WORK_STATUS" NUMBER(5,0),
	"WORK_PROJECT" VARCHAR2(255 CHAR),
	"WORK_USERDATA" VARCHAR2(4000 CHAR),
	"WORK_CUSTOMDATA" VARCHAR2(4000 CHAR),
	"WORK_OWNERPERMS" NUMBER(10,0)
   );
--
-- WWORKACL
--
  CREATE TABLE "WWORKACL" 
   (	"WORKACL_WORKID" NUMBER(19,0) NOT NULL ENABLE,
	"WORKACL_RIGHTID" NUMBER(19,0) NOT NULL ENABLE,
	"WORKACL_PERMISSIONS" NUMBER(10,0) NOT NULL ENABLE
   );
--
-- WWORKAUDIT
--
  CREATE TABLE "WWORKAUDIT" 
   (	"WORKAUDIT_WORKID" NUMBER(19,0) NOT NULL ENABLE,
	"WORKAUDIT_AUDITID" NUMBER(19,0) NOT NULL ENABLE,
	"WORKAUDIT_SUBWORKID" NUMBER(19,0) NOT NULL ENABLE,
	"WORKAUDIT_TASKID" NUMBER(10,0) NOT NULL ENABLE,
	"WORKAUDIT_PERFORMERID" NUMBER(19,0),
	"WORKAUDIT_DATE" DATE,
	"WORKAUDIT_STATUS" NUMBER(10,0),
	"WORKAUDIT_USERDATA" CLOB,
	"WORKAUDIT_TASKITERNUM" NUMBER(10,0)
   );
--
-- XSOCPENID_CHILD
--
  CREATE TABLE "XSOCPENID_CHILD" 
   (	"FILE_TYPE" VARCHAR2(20),
	"REC_TYPE" VARCHAR2(20),
	"PENSION_NO" VARCHAR2(20),
	"GRANT_TYPE" VARCHAR2(20),
	"STATUS_CODE" VARCHAR2(20),
	"STATUS_DATE" VARCHAR2(20),
	"CHILD_ID_NUMBER" VARCHAR2(20),
	"BIRTH_DATE" VARCHAR2(20),
	"OLD_ID" VARCHAR2(20),
	"NAME" VARCHAR2(60),
	"SURNAME" VARCHAR2(60),
	"APPLICATION_DATE" VARCHAR2(20),
	"CHARACTERISTIC_ID" VARCHAR2(20)
   );
--
-- ZSAPOSHISTORY
--
  CREATE TABLE "ZSAPOSHISTORY" 
   (	"SOCPEN" VARCHAR2(255) NOT NULL ENABLE,
	"ID" VARCHAR2(255) NOT NULL ENABLE,
	"LOADED" DATE NOT NULL ENABLE,
	"NOTES" LONG
   );
--
-- ACTIVE_GRANTS
--
CREATE OR REPLACE VIEW "ACTIVE_GRANTS" 
  AS 
  SELECT b.PENSION_NO,a.NAME,a.SURNAME,case when Approval_capture_date is not null and Approval_capture_date > Application_date then 
          Approval_capture_date
     ELSE
          CASE WHEN Application_date is not null and Application_date > Original_application_date then 
            Application_date
          ELSE
            CASE WHEN Original_application_date is not null then
              Original_application_date
            ELSE
              sysdate - 43000
            END
          END
    END as original_Application_date,SEC_PAYPOINT, GRANT_TYPE ,a.PROVINCE,a.ADDRESS, ROUND(sysdate - b.original_Application_date)  as AGE
from sassa.socpen_personal_grants  b
--No physical file exists in any registry type (Main, Archive ) for the same ID and grant type
inner join CONTENTSERVER.SOCPENBRM_MAIN_AND_ARCHIVE a on b.PENSION_NO = a.pension_No
--The grant must be active on SocPen (primary and secondary grant combination of B-2, 9-2 or A-2)
where (((b.PRIM_STATUS = 'B') and(b.SEC_STATUS = '2')) or
        ((b.PRIM_STATUS = '9') and(b.SEC_STATUS = '2')) or
        ((b.PRIM_STATUS = 'A')  and(b.SEC_STATUS = '2')));
--
-- ALL_FILES
--
CREATE OR REPLACE VIEW "ALL_FILES" 
  AS 
  SELECT  ID_NUMBER,case GRANT_TYPE when '1' then '0' When '2' then '1' When '10' then 'C' When '11' then 'S' ELSE GRANT_TYPE END as GRANT_TYPE,'MIS' as SourceTBL  FROM CONTENTSERVER.MIS_LIVELINK_TBL
UNION
SELECT APPLICANT_NO as ID_NUMBER, case GRANT_TYPE when '1' then '0' When '2' then '1' When '10' then 'C' When '11' then 'S' ELSE GRANT_TYPE  END as GRANT_TYPE,'DCFILE' as SourceTBL   FROM CONTENTSERVER.DC_FILE
UNION
SELECT ID_NUMBER,case GRANT_TYPE when '1' then '0' When '2' then '1' When '10' then 'C' When '11' then 'S' ELSE GRANT_TYPE END as GRANT_TYPE,'SSAPP' as SourceTBL  FROM CONTENTSERVER.SS_APPLICATION
UNION
SELECT DESCRIPTION AS ID_NUMBER,case GRANT_TYPE when '1' then '0' When '2' then '1' When '10' then 'C' When '11' then 'S' ELSE GRANT_TYPE END as GRANT_TYPE,'TDW' as SourceTBL  FROM CONTENTSERVER.TDW_FILE_LOCATION;
--
-- ARCHIVEDWORK
--
CREATE OR REPLACE VIEW "ARCHIVEDWORK" 
  AS 
  select ArchivedWorkBase."WORK_WORKID",ArchivedWorkBase."WORK_STATUS",ArchivedWorkBase."WORK_OWNERID",ArchivedWorkBase."WORK_MANAGERID",ArchivedWorkBase."WORK_DATEDUE_MAX",ArchivedWorkBase."SUBWORK_SUBWORKID",ArchivedWorkBase."SUBWORK_DATEINITIATED",ArchivedWorkBase."SUBWORK_TITLE",ArchivedWorkBase."SUBWORK_STATUS",ArchivedWorkBase."SUBWORK_RETURNSUBWORKID",ArchivedWorkBase."SUBWORK_USERDATA",ArchivedWorkBase."MAP_MAPID",ArchivedWorkBase."MAP_MAPOBJID", Name Work_ManagerID_Name from ArchivedWorkBase, KUAF where Work_ManagerID=ID(+);
--
-- ARCHIVEDWORKBASE
--
CREATE OR REPLACE VIEW "ARCHIVEDWORKBASE" 
  AS 
  select Work_WorkID, Work_Status, Work_OwnerID, Work_ManagerID, Work_DateDue_Max, SubWork_SubWorkID, SubWork_DateInitiated, SubWork_Title, SubWork_Status, SubWork_ReturnSubWorkID, SubWork_UserData, Map_MapID, Map_MapObjID from WWork, WSubWork, WMap where SubWork_WorkID=Work_WorkID and SubWork_MapID=Map_MapID and Work_Status=-3;
--
-- CUST_BI_IRM
--
CREATE OR REPLACE VIEW "CUST_BI_IRM" 
  AS 
  SELECT 
	VOLUMEID,
	REGION,
	DISTRICT,
	LOCAL_OFFICE,
	GRANT_TYPE,
	IDENTITY_NUMBER,
	UPHOLD_THE_APPLICATION AS "UPHOLD", 
	VARY_THE_INITIAL_DECISION as "VARY",
	DISMISS_APPLICATION as "DISMISS",
	WITHDRAWAL,
	FIRSTDATE as "CAPTURED_DATE",
	LASTDATE,
	OUTCOME_DATE,
  APPLICATION_DATE,
	LAST_ACTION,
	RECONSIDERER 
	FROM CUST_IRM 
WHERE VERSIONNUM = -1;
--
-- CUST_FILEEXISTS
--
CREATE OR REPLACE VIEW "CUST_FILEEXISTS" 
  AS 
  SELECT o.PENSION_NO as PENSION_NO, o.GRANT_TYPE 
FROM SOCPENGRANTS o, MISNATIONAL d 
WHERE 
o.PENSION_NO = d.ID_NUMBER AND 
o.GRANT_TYPE = '0' AND 
d.GRANT_TYPE = '3' 

UNION 

SELECT o.PENSION_NO as PENSION_NO, o.GRANT_TYPE 
FROM SOCPENGRANTS o, DC_FILE d 
WHERE 
o.PENSION_NO = d.APPLICANT_NO AND 
o.GRANT_TYPE = '0' AND 
d.GRANT_TYPE = '3' 

UNION 

SELECT s.PENSION_NO, s.GRANT_TYPE 
FROM SOCPENGRANTS s, MISNATIONAL m 
WHERE 
s.PENSION_NO = m.ID_NUMBER AND 
s.GRANT_TYPE = upper(m.GRANT_TYPE) 

UNION 

SELECT s.PENSION_NO, s.GRANT_TYPE 
FROM SOCPENGRANTS s, DC_FILE b 
WHERE 
s.PENSION_NO = b.APPLICANT_NO AND 
s.GRANT_TYPE = b.GRANT_TYPE 
 
UNION 

SELECT d.APPLICANT_NO as PENSION_NO, d.GRANT_TYPE 
FROM DC_FILE d 
WHERE 
d.MISSING <> 'Y';
--
-- CUST_IRM_VW
--
CREATE OR REPLACE VIEW "CUST_IRM_VW" 
  AS 
  (select DECODE(UPHOLD_THE_APPLICATION||VARY_THE_INITIAL_DECISION||DISMISS_APPLICATION, 100,'Uphold', 010,'Vary', 001,'Dismiss', 000,'In Progress', NULL) as "IRM_OUTCOME", DECODE(APP_DISAGREEMENT||MED_DISAGREEMENT||OTHER, 100,'Means', 010,'Medical', 001,'Other', 000,'In Progress', NULL) as "DISAGREEMENT", DECODE(TRIBUNAL_UPHOLD||TRIBUNAL_VARY||TRIBUNAL_DISMISS, 100,'Uphold', 010,'Vary', 001,'Dismiss', 000,'In Progress', NULL) as "TRIBUNAL_OUTCOME", CUST_IRM."VOLUMEID",CUST_IRM."DATAID",CUST_IRM."VERSIONNUM",CUST_IRM."SEQ",CUST_IRM."ROWSEQNUM",CUST_IRM."ITERATIONNUM",CUST_IRM."REGION",CUST_IRM."IDENTITY_NUMBER",CUST_IRM."AGE",CUST_IRM."SURNAME",CUST_IRM."GENDER",CUST_IRM."FULL_NAMES",CUST_IRM."COMMUNICATION_METHOD",CUST_IRM."TELEPHONE_NUMBER",CUST_IRM."EMAIL",CUST_IRM."CELLPHONE_NUMBER",CUST_IRM."FAX",CUST_IRM."RESIDENTIAL_ADDRESS",CUST_IRM."RES_POSTAL_CODE",CUST_IRM."POSTAL_ADDRESS",CUST_IRM."POSTAL_CODE",CUST_IRM."SASSA_OFFICE",CUST_IRM."APPLICATION_DATE",CUST_IRM."REJECTION_DATE",CUST_IRM."GRANT_TYPE",CUST_IRM."APP_DISAGREEMENT",CUST_IRM."MED_DISAGREEMENT",CUST_IRM."OTHER",CUST_IRM."IDENTITY_DOC",CUST_IRM."INTERNAL_RECONSIDERATIONAL",CUST_IRM."POA",CUST_IRM."APP_REPRESENTATIVE",CUST_IRM."REP_IDENTITY_NUMBER",CUST_IRM."RELATION",CUST_IRM."REP_SURNAME",CUST_IRM."REP_GENDER",CUST_IRM."REP_FULL_NAMES",CUST_IRM."APPCONTACT_TEL",CUST_IRM."APPCONTACT_CELL",CUST_IRM."REP_FAX",CUST_IRM."REP_EMAIL",CUST_IRM."NATIONALITY",CUST_IRM."REP_OTHER",CUST_IRM."COMMENT_OTHER",CUST_IRM."MAILADDRESS",CUST_IRM."APPLICATION_NATURE",CUST_IRM."PROOF_OF_INCOME_ASSETS",CUST_IRM."MEDICAL_ADVISORY",CUST_IRM."MEDICAL_REASONS",CUST_IRM."LETTER_OF_REJECTION",CUST_IRM."REVIEWER_NAME",CUST_IRM."UPHOLD_THE_APPLICATION",CUST_IRM."VARY_THE_INITIAL_DECISION",CUST_IRM."DISMISS_APPLICATION",CUST_IRM."REASON_FOR_DECISION",CUST_IRM."YEAR",CUST_IRM."REP_DATE",CUST_IRM."OUTCOME_LETTER_ATTACHED",CUST_IRM."DISTRICT",CUST_IRM."LOCAL_OFFICE",CUST_IRM."WITHDRAWAL",CUST_IRM."FIRSTDATE",CUST_IRM."LASTDATE",CUST_IRM."TRIBUNAL_UPHOLD",CUST_IRM."TRIBUNAL_VARY",CUST_IRM."TRIBUNAL_DISMISS",CUST_IRM."TRIBUNAL_REASON_DECISION",CUST_IRM."INVALID_DATE",CUST_IRM."OUTCOME_DATE",CUST_IRM."MESSAGE_TO_REGISTRY",CUST_IRM."REGISTRY_CLERK",CUST_IRM."FULL_NAMES_REGISTRY",CUST_IRM."DATE_REQUESTED_REGISTRY",CUST_IRM."MESSAGE_FROM_REGISTRY",CUST_IRM."DATE_REPLIED_REGISTRY",CUST_IRM."LAST_ACTION",CUST_IRM."GRANTEE",CUST_IRM."ALLOCATION_TYPE",CUST_IRM."AWARDED_PERIOD",CUST_IRM."AWARDED_UNIT",CUST_IRM."DEPENDANT_ID",CUST_IRM."DEPENDANT_SURNAME",CUST_IRM."DEPENDANT_FULLNAMES",CUST_IRM."DUPLICATEIRM",CUST_IRM."DATE_RECEIVED",CUST_IRM."BIRTHPERIOD",CUST_IRM."TEL_1",CUST_IRM."CELL_1",CUST_IRM."TEL_2",CUST_IRM."CELL_2",CUST_IRM."FAX_1",CUST_IRM."FAX_2",CUST_IRM."AMOUNT_ALLOCATED",CUST_IRM."LEGAL_FIRM",CUST_IRM."COMPANY_REGISTERATION",CUST_IRM."COMPANY_TELNO",CUST_IRM."COMPANY_EMAIL",CUST_IRM."COMPANY_CELLNO",CUST_IRM."LEGAL_REPRESENTATIVE",CUST_IRM."APPEAL_DATE",CUST_IRM."APPEAL_INITIATOR_FULLNAME",CUST_IRM."APPEAL_INITIATOR_EMAIL",CUST_IRM."APPEAL_INITIATOR_USER",CUST_IRM."TRIBUNAL_OUTCOME_DATE",CUST_IRM."IMPLIMENTOR_FULLNAME",CUST_IRM."IMPLIMENTOR_EMAIL",CUST_IRM."APPEAL_INITIATOR_USERNAME",CUST_IRM."IMPLIMENTATION_DATE",CUST_IRM."IMPLIMENTOR_COMMENTS",CUST_IRM."APPEAL_RECON_FULLNAME",CUST_IRM."APPEAL_RECON_EMAIL",CUST_IRM."APPEAL_RECON_USER_",CUST_IRM."COMPANY_ADDRESS",CUST_IRM."COMPANY_POSTAL_CODE",CUST_IRM."DSD_INITIATOR_FULLNAME",CUST_IRM."DSD_INITIATOR_EMAIL",CUST_IRM."DSD_INITIATOR_USER",CUST_IRM."DSD_RECON_FULLNAME",CUST_IRM."DSD_RECON_EMAIL",CUST_IRM."DSD_RECON_USER",CUST_IRM."IMPLEMENTOR",CUST_IRM."IMPLEMENTOR_EMAIL",CUST_IRM."IMPLEMENTOR_USER",CUST_IRM."DSD_INITIATED",CUST_IRM."DSD_FEEDBACK",CUST_IRM."DSD_IMPLEMENTED",CUST_IRM."WITHDRAWAL_DATE",CUST_IRM."RECONSIDERER",CUST_IRM."POSTAL_CODE1",CUST_IRM."POSTAL_CODE2" from CUST_IRM )
 ;
--
-- CUST_KOFAX
--
CREATE OR REPLACE VIEW "CUST_KOFAX" 
  AS 
  SELECT P.DATAID P_DATAID, P.NAME P_NAME, B.DATAID B_DATAID, B.NAME B_NAME, S.DATAID S_DATAID, S.NAME S_NAME, D.DATAID D_DATAID, D.NAME D_NAME FROM DTREE R, DTREE P, DTREE B, DTREE S, DTREE D WHERE R.DATAID = '47634' AND (R.DATAID = P.PARENTID) AND (P.DATAID = B.PARENTID) AND (B.DATAID = S.PARENTID) AND (S.DATAID = D.PARENTID) AND P.SUBTYPE = 0 AND B.SUBTYPE = 0 AND S.SUBTYPE = 0 AND D.SUBTYPE = 144 AND D.CREATEDBY = 25722704
 ;
--
-- CUST_KOFAX_DOCS
--
CREATE OR REPLACE VIEW "CUST_KOFAX_DOCS" 
  AS 
  SELECT D.DATAID AS "DOC_DATAID", D.NAME AS "DOC_NAME", D.SUBTYPE AS "SUBTYPE", 'DOCUMENT' AS "LEVEL", D.CREATEDBY AS "CREATEDBY", M.DATAID AS "MIS_DATAID", M.NAME AS "MIS_NAME", B.DATAID AS "ID_DATAID", B.NAME AS "ID_NAME", P.DATAID AS "PER_DATAID", P.NAME AS "PER_NAME" FROM DTREE P, DTREE B, DTREE M, DTREE D WHERE P.PARENTID = 47634 AND B.PARENTID = P.DATAID AND M.PARENTID = B.DATAID AND D.PARENTID = M.DATAID AND P.DATAID != 28693402 AND P.DATAID != 30467889 AND P.DATAID != 30468138 AND P.DATAID != 30468685 AND D.CREATEDBY IN(25722704, 28693044, 28693335, 28693336, 28693497, 28693498, 28693499, 28693500, 28693604, 28693776, 28693779, 29134500, 29134549, 29134688, 29134691, 29134872, 29134946, 29134947, 29135047, 29135048 )
 ;
--
-- CUST_MISSING182DAYS
--
CREATE OR REPLACE VIEW "CUST_MISSING182DAYS" 
  AS 
  SELECT 
s.PENSION_NO,
s.PRIM_STATUS, 
s.SEC_STATUS,
s.APP_DATE, 
s.GRANT_TYPE, 
g.TYPE_NAME, 
s.SEX,
s.POSTAL_CODE,
s.POSTAL_ADDRESS,
s.ADDRESS,
s.NAME,
s.SURNAME,
s.PROVINCE, 
r.REGION_NAME, 
d.REGION_ID as BRM_REGION, 
m.REGION_ID AS MIS_REGION, 
d.MISSING as DC_MISSING_FLAG, 
d.UNQ_FILE_NO as BRM_FILE_NO, 
m.FILE_NUMBER as MIS_FILE_NUMBER, do.UNQ_FILE_NO as BRM_DIS_FILE, mo.FILE_NUMBER as MIS_DIS_FILE 
from SOCPENGRANTS s 
left join DC_FILE d on (s.PENSION_NO = d.APPLICANT_NO and s.GRANT_TYPE = d.GRANT_TYPE)
left join DC_REGION r on (TRIM(s.PROVINCE) = TRIM(d.REGION_ID) ) 
left join MISNATIONAL m on (s.PENSION_NO = m.id_number and s.GRANT_TYPE = m.GRANT_TYPE)
left join MISNATIONAL mo on (s.PENSION_NO = mo.id_number and TRIM(mo.GRANT_TYPE) = '3')
left join DC_FILE do on (s.PENSION_NO = do.APPLICANT_NO and TRIM(do.GRANT_TYPE) = '3')
left join DC_GRANT_TYPE g on (s.GRANT_TYPE = g.TYPE_ID) 

 WHERE s.PRIM_STATUS IN ('B','9','A') AND s.SEC_STATUS = '2' 
 AND to_date(s.APP_DATE,'yyyymmdd') < (SYSDATE-182);
--
-- CUST_MISSING60DAYS
--
CREATE OR REPLACE VIEW "CUST_MISSING60DAYS" 
  AS 
  SELECT 
s.PENSION_NO,
s.PRIM_STATUS, 
s.SEC_STATUS,
s.APP_DATE, 
s.GRANT_TYPE, 
g.TYPE_NAME, 
s.SEX,
s.POSTAL_CODE,
s.POSTAL_ADDRESS,
s.ADDRESS,
s.NAME,
s.SURNAME,
s.PROVINCE, 
r.REGION_NAME, 
d.REGION_ID as BRM_REGION, 
m.REGION_ID AS MIS_REGION, 
d.MISSING as DC_MISSING_FLAG, 
d.UNQ_FILE_NO as BRM_FILE_NO, 
m.FILE_NUMBER as MIS_FILE_NUMBER, do.UNQ_FILE_NO as BRM_DIS_FILE, mo.FILE_NUMBER as MIS_DIS_FILE 
from SOCPENGRANTS s 
left join DC_FILE d on (s.PENSION_NO = d.APPLICANT_NO and s.GRANT_TYPE = d.GRANT_TYPE)
left join DC_REGION r on (TRIM(s.PROVINCE) = TRIM(d.REGION_ID) ) 
left join MISNATIONAL m on (s.PENSION_NO = m.id_number and s.GRANT_TYPE = m.GRANT_TYPE)
left join MISNATIONAL mo on (s.PENSION_NO = mo.id_number and TRIM(mo.GRANT_TYPE) = '3')
left join DC_FILE do on (s.PENSION_NO = do.APPLICANT_NO and TRIM(do.GRANT_TYPE) = '3')
left join DC_GRANT_TYPE g on (s.GRANT_TYPE = g.TYPE_ID) 

 WHERE s.PRIM_STATUS IN ('B','9','A') AND s.SEC_STATUS = '2' 
 AND to_date(s.APP_DATE,'yyyymmdd') < (SYSDATE-60);
--
-- CUST_WR_LR_VW
--
CREATE OR REPLACE VIEW "CUST_WR_LR_VW" 
  AS 
  select 
PARENTID, 
DATAID, 
NAME WEBREPORTNAME, 
SUBTYPE OBJSUBTYPE, 
substr(substr(EXTENDEDDATA, instr(EXTENDEDDATA,'datasource_id',1,1)+16), 0, instr(substr(EXTENDEDDATA, instr(EXTENDEDDATA,'datasource_id',1,1)+16),',',1,1)-2) LIVEREPORTID,
EXTENDEDDATA 
from dtree 
where subtype = 30303;
--
-- DBROWSEANCESTORS
--
CREATE OR REPLACE VIEW "DBROWSEANCESTORS" 
  AS 
  SELECT DataID, AncestorID FROM DBrowseAncestorsCore WHERE Deleted = 0;
--
-- DC_BOXPICKLIST
--
CREATE OR REPLACE VIEW "DC_BOXPICKLIST" 
  AS 
  SELECT 
p.UNQ_PICKLIST,
p.REGION_ID,
p.REGISTRY_TYPE,
p.USERID,
p.PICKLIST_DATE,
p.PICKLIST_STATUS,
b.UNQ_NO,
b.BIN_NUMBER,
b.BOX_NUMBER,
b.BOX_RECEIVED,
b.BOX_COMPLETED,
b.ARCHIVE_YEAR 
FROM 
DC_PICKLIST p, DC_BOXPICKED b  
WHERE p.UNQ_PICKLIST = b.UNQ_PICKLIST;
--
-- DTREE
--
CREATE OR REPLACE VIEW "DTREE" 
  AS 
  SELECT "OWNERID","PARENTID","DATAID","NAME","ORIGINOWNERID","ORIGINDATAID","USERID","GROUPID","UPERMISSIONS","GPERMISSIONS","WPERMISSIONS","SPERMISSIONS","ACLCOUNT","PERMID","DATATYPE","CREATEDBY","CREATEDATE","MODIFIEDBY","MODIFYDATE","MAXVERS","RESERVED","RESERVEDBY","RESERVEDDATE","VERSIONNUM","DCOMMENT","DCATEGORY","SUBTYPE","EXATT1","EXATT2","ORDERING","MAJOR","MINOR","RELEASEREF","CHILDCOUNT","ASSIGNEDTO","DATEASSIGNED","DATEEFFECTIVE","DATEEXPIRATION","DATEDUE","DATESTARTED","DATECOMPLETED","STATUS","PRIORITY","GIF","EXTENDEDDATA","CATALOG","CACHEEXPIRATION","DELETED","GUID" FROM DTreeCore WHERE Deleted=0;
--
-- DTREEDELETED
--
CREATE OR REPLACE VIEW "DTREEDELETED" 
  AS 
  SELECT "OWNERID","PARENTID","DATAID","NAME","ORIGINOWNERID","ORIGINDATAID","USERID","GROUPID","UPERMISSIONS","GPERMISSIONS","WPERMISSIONS","SPERMISSIONS","ACLCOUNT","PERMID","DATATYPE","CREATEDBY","CREATEDATE","MODIFIEDBY","MODIFYDATE","MAXVERS","RESERVED","RESERVEDBY","RESERVEDDATE","VERSIONNUM","DCOMMENT","DCATEGORY","SUBTYPE","EXATT1","EXATT2","ORDERING","MAJOR","MINOR","RELEASEREF","CHILDCOUNT","ASSIGNEDTO","DATEASSIGNED","DATEEFFECTIVE","DATEEXPIRATION","DATEDUE","DATESTARTED","DATECOMPLETED","STATUS","PRIORITY","GIF","EXTENDEDDATA","CATALOG","CACHEEXPIRATION","DELETED","GUID" FROM DTreeCore WHERE Deleted = 1;
--
-- LLIDS
--
CREATE OR REPLACE VIEW "LLIDS" 
  AS 
  SELECT b.Name FROM DTREE b, DTREE p WHERE b.ParentID = p.DataID AND p.ParentID = '47634'
 ;
--
-- MIS_LIVELINK_VIEW
--
CREATE OR REPLACE VIEW "MIS_LIVELINK_VIEW" 
  AS 
  SELECT 

ID_NUMBER,
REGION_ID,
FILE_NUMBER,
BIN_ID,
BOX_NUMBER,
POSITION,
NAME,
SURNAME,
'' AS "RESULT",
GRANT_TYPE,
APP_DATE

FROM CONTENTSERVER.MIS_LIVELINK_FILE;
--
-- MISNATIONAL
--
CREATE OR REPLACE VIEW "MISNATIONAL" 
  AS 
  SELECT 
  CAST("ID_NUMBER" AS VARCHAR2 (20)) AS "ID_NUMBER",
  "REGION_ID" AS "REGION_ID",--Don't cast, Col is defined as VARCHAR2 (2)
  CAST("FILE_NUMBER" AS VARCHAR2 (30)) AS "FILE_NUMBER",
  CAST("BIN_ID" AS VARCHAR2 (10)) AS "BIN_ID",
  CAST("BOX_NUMBER" AS VARCHAR2 (10)) AS "BOX_NUMBER",
  CAST("POSITION" AS VARCHAR2 (10)) AS "POSITION",
  CAST("NAME" AS VARCHAR2 (30)) AS "NAME",
  CAST("SURNAME" AS VARCHAR2 (50)) AS "SURNAME",
  CAST("GRANT_TYPE" AS VARCHAR2 (30)) AS "GRANT_TYPE",
  "APP_DATE" AS "APP_DATE",--Don't cast, Col is defined as VARCHAR2 (50)
  DECODE("REGISTRY_TYPE", 
      'Main File', 'M', 
      'Main LC', 'M', 
      'Archive File', 'A', 
      'Archive LC', 'A', 
      'Special', 'S', 
      'Special LC', 'S', 
      'NULL', null, 
      null, null ) AS "BOX_TYPE", 
  CAST("SUB_REGISTRY_TYPE" AS VARCHAR2 (30)) AS "SUB_REGISTRY_TYPE", 
  '' AS "DISTRICT_CODE" --Hard coded, don't need casting
FROM MIS_LIVELINK_LOAD_LC 

UNION ALL 

SELECT 
  "ID_NUMBER" AS "ID_NUMBER",--Don't cast, Col is defined as VARCHAR2 (20)
  "REGION_ID" AS "REGION_ID",--Don't cast, Col is defined as VARCHAR2 (2)
  CAST("FILE_NUMBER" AS VARCHAR2 (30)) AS "FILE_NUMBER",
  "BIN_ID" AS "BIN_ID",--Don't cast, Col is defined as VARCHAR2 (10)
  "BOX_NUMBER" AS "BOX_NUMBER",--Don't cast, Col is defined as VARCHAR2 (10)
  "POSITION" AS "POSITION",--Don't cast, Col is defined as VARCHAR2 (10)
  CAST("NAME" AS VARCHAR2 (30)) AS "NAME",
  "SURNAME" AS "SURNAME",--Don't cast, Col is defined as VARCHAR2 (50)
  "GRANT_TYPE" AS "GRANT_TYPE",--Don't cast, Col is defined as VARCHAR2 (30)
  CAST("APP_DATE" AS VARCHAR2 (50)) AS "APP_DATE",
  DECODE("REGISTRY_TYPE", 
      'Main File', 'M', 
      'Main LC', 'M', 
      'Archive File', 'A', 
      'Archive LC', 'A', 
      'Special', 'S', 
      'Special LC', 'S', 
      'NULL', null, 
      null, null ) AS "BOX_TYPE", 
  "SUB_REGISTRY_TYPE" AS "SUB_REGISTRY_TYPE", --Don't cast, Col is defined as VARCHAR2 (30)
  '' AS "DISTRICT_CODE" --Hard coded, don't need casting
FROM MIS_LIVELINK_FILE 

UNION ALL 

SELECT 
  CAST("ID_NUMBER" AS VARCHAR2 (20)) AS "ID_NUMBER",
  '2' AS "REGION_ID",--Hard coded, don't need casting
  CAST(TRIM("FORM_TYPE")||TRIM("FORM_NUMBER") AS VARCHAR2 (30)) AS "FILE_NUMBER",
  '' AS "BIN_ID",--Hard coded, don't need casting
  CAST("BOX" AS VARCHAR2 (10)) AS "BOX_NUMBER",
  CAST("POSITN" AS VARCHAR2 (10)) AS "POSITION",
  "NAME" AS "NAME",--Don't cast, Col is defined as VARCHAR2 (30)
  "SURNAME" AS "SURNAME",--Don't cast, Col is defined as VARCHAR2 (50)
  CAST("GRANT_TYPE" AS VARCHAR2 (30)) AS "GRANT_TYPE",
  "APPLICATION_DATE" AS "APP_DATE", --Don't cast, Col is defined as VARCHAR2 (50)
  DECODE(UPPER("BOX_TYPE"), 
      'M', 'M', 
      'A', 'A', 
      'S', 'S', 
      'NULL', null, 
      null, null ) AS "BOX_TYPE", 
  CAST("A_YEAR" AS VARCHAR2 (30)) AS "SUB_REGISTRY_TYPE", 
  "DISTRICT_OFFICE" AS "DISTRICT_CODE" 
FROM SS_APPLICATION WITH READ ONLY;
--
-- SOCPENBRM_MAIN_AND_ARCHIVE
--
CREATE OR REPLACE VIEW "SOCPENBRM_MAIN_AND_ARCHIVE" 
  AS 
  SELECT PENSION_NO,NAME,SURNAME,PROVINCE,ADDRESS,SEC_PAYPOINT From CONTENTSERVER.SocPenBRM
UNION
SELECT PENSION_NO,NAME,SURNAME,PROVINCE,ADDRESS,SEC_PAYPOINT  From CONTENTSERVER.SocPenBRM_ARCHIVE;
--
-- SOCPENBRM_VIEW
--
CREATE OR REPLACE VIEW "SOCPENBRM_VIEW" 
  AS 
  SELECT  
      --  '' AS "FILE_TYPE",
       -- '' AS "REC_TYPE",
        CAST (SP.PENSION_NO AS VARCHAR2 (20)) AS "PENSION-NO",
        CAST (SP.PAYPOINT AS VARCHAR2 (20)) AS "PAYPOINT",
		(SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "GRANT-TYPE1",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "GRANT-TYPE2",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "GRANT-TYPE3",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "GRANT-TYPE4",
		(SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "PRIM-STATUS1",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "PRIM-STATUS2",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "PRIM-STATUS3",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "PRIM-STATUS4",
			 (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "SEC-STATUS1",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "SEC-STATUS2",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "SEC-STATUS3",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "SEC-STATUS4",
			 
			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-DATE4",
			 (SELECT DISTINCT CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "APP-DATE4",
			 '' AS "REVIEW-CODE1",
          '' AS "REVIEW-CODE2",
          '' AS "REVIEW-CODE3",
          '' AS "REVIEW-CODE4",
		  
		  (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-REASON1",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-REASON2",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-REASON3",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-REASON4",
			 (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STAT-PER1",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STAT-PER2",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STAT-PER3",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STAT-PER4",
			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "DATE-ACCEPT1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "DATE-ACCEPT2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "DATE-ACCEPT3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "DATE-ACCEPT4",
			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "ORIG-APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "ORIG-APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "ORIG-APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
						   FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "ORIG-APP-DATE4",
			 (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '001')
             AS "OLD-ID1",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '002')
             AS "OLD-ID2",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '003')
             AS "OLD-ID3",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '004')
             AS "OLD-ID4",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '005')
             AS "OLD-ID5",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '006')
             AS "OLD-ID6",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '007')
             AS "OLD-ID7",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '008')
             AS "OLD-ID8",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '009')
             AS "OLD-ID9",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '010')
             AS "OLD-ID10",
			 CAST (SBNKDT.BRANCH AS VARCHAR2 (20)) AS "BRANCH",
          CAST (SP.SURNAME AS VARCHAR2 (20)) AS "SURNAME",
          CAST (SP.NAME AS VARCHAR2 (20)) AS "NAME",
		  CAST (
                SA.STREET_ADDR_1
             || ' '
             || SA.STREET_ADDR_2
             || ' '
             || SA.STREET_ADDR_3
             || ' '
             || SA.STREET_ADDR_4 AS VARCHAR2 (20))
             AS "ADDRESS",
          CAST (
                SA.POSTAL_ADDR_1
             || ' '
             || SA.POSTAL_ADDR_2
             || ' '
             || SA.POSTAL_ADDR_3
             || ' '
             || SA.POSTAL_ADDR_4 AS VARCHAR2 (20))
             AS "POSTAL-ADDRESS",
          CAST (SA.RESIDENTIAL_POSTAL_CODE AS VARCHAR2 (20)) AS "POSTAL-CODE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "NO-KIDS",
		  CAST (SP.PAYMENT_METHOD AS VARCHAR2 (20)) AS "PAYMENT-METHOD",
          CAST (SP.SEX AS VARCHAR2 (20)) AS "SEX",
          CAST (SP.MARITAL_STATUS AS VARCHAR2 (20)) AS "MARITAL-STATUS",
		  CAST (
             TO_CHAR (TO_DATE (TO_DATE (SP.BIRTHDATE, 'DD-MON-YY')),
                      'YYYYMMDD') AS VARCHAR2 (20))
             AS "BIRTHDATE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "KIDS-INVOLVED",
		  CAST (SP.NO_CARE_DEP AS VARCHAR2 (20)) AS "NO-CARE-DEP",
          CAST (SBNKDT.ACCOUNT_NO AS VARCHAR2 (20)) AS "ACCOUNT-NO",
		  CAST (SP.SECONDARY_PAYPOINT AS VARCHAR2 (20)) AS "SEC-PAYPOINT",
          CAST (SP.PAYMENT_MODE AS VARCHAR2 (20)) AS "PAYMENT-MODE",
          '' AS "RE-REGISTERED",
		  CAST (SP.NO_KIDS_OWN AS VARCHAR2 (20)) AS "NO-KIDS-OWN",
          CAST (SP.NO_KIDS_OTHER AS VARCHAR2 (20)) AS "NO-KIDS-OTHER",
		  CAST (SUBSTR (SP.SECONDARY_PAYPOINT, 1, 1) AS VARCHAR2 (20)) AS "PROVINCE",
		  CAST (SP.TELEPHONE AS VARCHAR2 (20)) AS "TELNO",
          CAST (SP.CELL_NO AS VARCHAR2 (20)) AS "CELLNO",
		  CAST (SR.REVIEW_PERIOD AS VARCHAR2 (20)) AS "REVIEWPERIOD",
          CAST (SR.MEDICAL_REVIEW_PERIOD AS VARCHAR2 (20)) AS "MEDICALPERIOD",
          CAST (SR.LIFE_CERTIFICATE_PERIOD AS VARCHAR2 (20)) AS "LIFECERTPERIOD",
		  '' AS "DOCS-PRESENT"
		  
		  FROM SASSA.SOCPEN_PERSONAL SP
          LEFT OUTER JOIN SASSA.SOCPEN_REVIEW SR
             ON SR.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA.SOCPEN_BANK_DETAILS SBNKDT
             ON SBNKDT.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA.SOCPEN_ADRES SA
             ON SA.PENSION_NO = SP.PENSION_NO
    WHERE SP.PENSION_NO IS NOT NULL;
--
-- SOCPENBRM_VIEW_NEW
--
CREATE OR REPLACE VIEW "SOCPENBRM_VIEW_NEW" 
  AS 
  SELECT
CAST (PENSION_NO AS VARCHAR2 (20)) AS "PENSION-NO",
NAME,
SURNAME,
PROVINCE AS SOCPEN_PROVINCE,
GRANT_TYPE1,
GRANT_TYPE2,
GRANT_TYPE3,
GRANT_TYPE4,
APP_DATE1,
APP_DATE2,
APP_DATE3,
APP_DATE4,
PRIM_STATUS1,
PRIM_STATUS2,
PRIM_STATUS3,
PRIM_STATUS4,
SEC_STATUS1,
SEC_STATUS2,
SEC_STATUS3,
SEC_STATUS4,
STATUS_DATE1,
STATUS_DATE2,
STATUS_DATE3,
STATUS_DATE4,
PENSION_NO,
OLD_ID1,
OLD_ID3,
OLD_ID4,
OLD_ID5,
OLD_ID6,
OLD_ID7,
OLD_ID8,
OLD_ID9,
OLD_ID10

FROM CONTENTSERVER. SOCPENBRM;
--
-- SOCPENDOCS
--
CREATE OR REPLACE VIEW "SOCPENDOCS" 
  AS 
  SELECT 
    DAC.ADABAS_ISN, 
    DAC.ID_NO, 
    DAC.APPLICATION_NO, 
    DAC.CHILD_ID_NO, 
    DAC.GRANT_TYPE,   
    DI.DPS_PE_SEQ AS "DPS_PE_SEQ_IN",
    DI.DOC_NO_IN AS "DOC_NO_IN_IN"      

 FROM 
   SASSA. SOCPEN_DOW_APPLICATIONS_CHEC01 DAC, 
    SASSA.SOCPEN_DOCUMENTS_IN DI  

 WHERE 
    DAC.ADABAS_ISN = DI.ADABAS_ISN;
--
-- SOCPENGRANTS
--
CREATE OR REPLACE VIEW "SOCPENGRANTS" 
  AS 
  SELECT
        PENSION_NO,
        PAYPOINT,
        GRANT_TYPE1 AS GRANT_TYPE,
        PRIM_STATUS1 AS PRIM_STATUS,
        SEC_STATUS1 AS SEC_STATUS,
        STATUS_DATE1 AS STATUS_DATE,
        APP_DATE1 AS APP_DATE,
        REVIEW_CODE1 AS REVIEW_CODE,
        STATUS_REASON1 AS STATUS_REASON,
        STAT_PER1 AS STAT_PER,
        DATE_ACCEPT1 AS DATE_ACCEPT,
        ORIG_APP_DATE1 AS ORIG_APP_DATE,
        OLD_ID1, OLD_ID2, OLD_ID3, OLD_ID4, OLD_ID5, OLD_ID6, OLD_ID7, OLD_ID8, OLD_ID9, OLD_ID10,
        BRANCH,
        SURNAME,
        "NAME",
        "ADDRESS",
        POSTAL_ADDRESS,
        POSTAL_CODE,
        NO_KIDS,
        PAYMENT_METHOD,
        SEX,
        MARITAL_STATUS,
        BIRTHDATE,
        KIDS_INVOLVED,
        NO_CARE_DEP,
        ACCOUNT_NO,
        SEC_PAYPOINT,
        PAYMENT_MODE,
        NO_KIDS_OWN,
        NO_KIDS_OTHER,
        PROVINCE,
        TELNO,
        CELLNO,
        REVIEWPERIOD,
        MEDICALPERIOD,
        LIFECERTPERIOD,
        DOCS_PRESENT
    FROM CONTENTSERVER.SPMAIN_ARCHIVE
    WHERE GRANT_TYPE1 IS NOT NULL
UNION ALL
 SELECT
        PENSION_NO,
        PAYPOINT,
        GRANT_TYPE2 AS GRANT_TYPE,
        PRIM_STATUS2 AS PRIM_STATUS,
        SEC_STATUS2 AS SEC_STATUS,
        STATUS_DATE2 AS STATUS_DATE,
        APP_DATE2 AS APP_DATE,
        REVIEW_CODE2 AS REVIEW_CODE,
        STATUS_REASON2 AS STATUS_REASON,
        STAT_PER2 AS STAT_PER,
        DATE_ACCEPT2 AS DATE_ACCEPT,
        ORIG_APP_DATE2 AS ORIG_APP_DATE,
        OLD_ID1, OLD_ID2, OLD_ID3, OLD_ID4, OLD_ID5, OLD_ID6, OLD_ID7, OLD_ID8, OLD_ID9, OLD_ID10,
        BRANCH,
        SURNAME,
        "NAME",
        "ADDRESS",
        POSTAL_ADDRESS,
        POSTAL_CODE,
        NO_KIDS,
        PAYMENT_METHOD,
        SEX,
        MARITAL_STATUS,
        BIRTHDATE,
        KIDS_INVOLVED,
        NO_CARE_DEP,
        ACCOUNT_NO,
        SEC_PAYPOINT,
        PAYMENT_MODE,
        NO_KIDS_OWN,
        NO_KIDS_OTHER,
        PROVINCE,
        TELNO,
        CELLNO,
        REVIEWPERIOD,
        MEDICALPERIOD,
        LIFECERTPERIOD,
        DOCS_PRESENT
    FROM CONTENTSERVER.SPMAIN_ARCHIVE
    WHERE GRANT_TYPE2 IS NOT NULL
UNION ALL
 SELECT
        PENSION_NO,
        PAYPOINT,
        GRANT_TYPE3 AS GRANT_TYPE,
        PRIM_STATUS3 AS PRIM_STATUS,
        SEC_STATUS3 AS SEC_STATUS,
        STATUS_DATE3 AS STATUS_DATE,
        APP_DATE3 AS APP_DATE,
        REVIEW_CODE3 AS REVIEW_CODE,
        STATUS_REASON3 AS STATUS_REASON,
        STAT_PER3 AS STAT_PER,
        DATE_ACCEPT3 AS DATE_ACCEPT,
        ORIG_APP_DATE3 AS ORIG_APP_DATE,
        OLD_ID1, OLD_ID2, OLD_ID3, OLD_ID4, OLD_ID5, OLD_ID6, OLD_ID7, OLD_ID8, OLD_ID9, OLD_ID10,
        BRANCH,
        SURNAME,
        "NAME",
        "ADDRESS",
        POSTAL_ADDRESS,
        POSTAL_CODE,
        NO_KIDS,
        PAYMENT_METHOD,
        SEX,
        MARITAL_STATUS,
        BIRTHDATE,
        KIDS_INVOLVED,
        NO_CARE_DEP,
        ACCOUNT_NO,
        SEC_PAYPOINT,
        PAYMENT_MODE,
        NO_KIDS_OWN,
        NO_KIDS_OTHER,
        PROVINCE,
        TELNO,
        CELLNO,
        REVIEWPERIOD,
        MEDICALPERIOD,
        LIFECERTPERIOD,
        DOCS_PRESENT
    FROM CONTENTSERVER.SPMAIN_ARCHIVE
    WHERE GRANT_TYPE3 IS NOT NULL
UNION ALL
 SELECT
        PENSION_NO,
        PAYPOINT,
        GRANT_TYPE4 AS  GRANT_TYPE,
        PRIM_STATUS4 AS  PRIM_STATUS,
        SEC_STATUS4 AS  SEC_STATUS,
        STATUS_DATE4 AS  STATUS_DATE,
        APP_DATE4 AS  APP_DATE,
        REVIEW_CODE4 AS  REVIEW_CODE,
        STATUS_REASON4 AS  STATUS_REASON,
        STAT_PER4 AS  STAT_PER,
        DATE_ACCEPT4 AS  DATE_ACCEPT,
        ORIG_APP_DATE4 AS  ORIG_APP_DATE,
        OLD_ID1, OLD_ID2, OLD_ID3, OLD_ID4, OLD_ID5, OLD_ID6, OLD_ID7, OLD_ID8, OLD_ID9, OLD_ID10,
        BRANCH,
        SURNAME,
        "NAME",
        "ADDRESS",
        POSTAL_ADDRESS,
        POSTAL_CODE,
        NO_KIDS,
        PAYMENT_METHOD,
        SEX,
        MARITAL_STATUS,
        BIRTHDATE,
        KIDS_INVOLVED,
        NO_CARE_DEP,
        ACCOUNT_NO,
        SEC_PAYPOINT,
        PAYMENT_MODE,
        NO_KIDS_OWN,
        NO_KIDS_OTHER,
        PROVINCE,
        TELNO,
        CELLNO,
        REVIEWPERIOD,
        MEDICALPERIOD,
        LIFECERTPERIOD,
        DOCS_PRESENT
    FROM CONTENTSERVER.SPMAIN_ARCHIVE
    WHERE GRANT_TYPE4 IS NOT NULL;
--
-- SOCPENID
--
CREATE OR REPLACE VIEW "SOCPENID" 
  AS 
  SELECT                                                           --DISTINCT
         '' AS "FILE_TYPE",
          '' AS "REC_TYPE",
          CAST (SP.PENSION_NO AS VARCHAR2 (20)) AS "PENSION-NO",
          CAST (SP.PAYPOINT AS VARCHAR2 (20)) AS "PAYPOINT",
          --
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "GRANT-TYPE1",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "GRANT-TYPE2",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "GRANT-TYPE3",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "GRANT-TYPE4",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "PRIM-STATUS1",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "PRIM-STATUS2",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "PRIM-STATUS3",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "PRIM-STATUS4",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "SEC-STATUS1",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "SEC-STATUS2",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "SEC-STATUS3",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "SEC-STATUS4",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-DATE4",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "APP-DATE4",
          '' AS "REVIEW-CODE1",
          '' AS "REVIEW-CODE2",
          '' AS "REVIEW-CODE3",
          '' AS "REVIEW-CODE4",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-REASON1",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-REASON2",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-REASON3",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-REASON4",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STAT-PER1",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STAT-PER2",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STAT-PER3",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STAT-PER4",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "DATE-ACCEPT1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "DATE-ACCEPT2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "DATE-ACCEPT3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "DATE-ACCEPT4",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "ORIG-APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "ORIG-APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "ORIG-APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "ORIG-APP-DATE4",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '001')
             AS "OLD-ID1",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '002')
             AS "OLD-ID2",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '003')
             AS "OLD-ID3",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '004')
             AS "OLD-ID4",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '005')
             AS "OLD-ID5",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '006')
             AS "OLD-ID6",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '007')
             AS "OLD-ID7",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '008')
             AS "OLD-ID8",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '009')
             AS "OLD-ID9",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '010')
             AS "OLD-ID10",
          --
          CAST (SBNKDT.BRANCH AS VARCHAR2 (20)) AS "BRANCH",
          CAST (SP.SURNAME AS VARCHAR2 (20)) AS "SURNAME",
          CAST (SP.NAME AS VARCHAR2 (20)) AS "NAME",
          CAST (
                SA.STREET_ADDR_1
             || ' '
             || SA.STREET_ADDR_2
             || ' '
             || SA.STREET_ADDR_3
             || ' '
             || SA.STREET_ADDR_4 AS VARCHAR2 (20))
             AS "ADDRESS",
          CAST (
                SA.POSTAL_ADDR_1
             || ' '
             || SA.POSTAL_ADDR_2
             || ' '
             || SA.POSTAL_ADDR_3
             || ' '
             || SA.POSTAL_ADDR_4 AS VARCHAR2 (20))
             AS "POSTAL-ADDRESS",
          CAST (SA.RESIDENTIAL_POSTAL_CODE AS VARCHAR2 (20)) AS "POSTAL-CODE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "NO-KIDS",
          CAST (SP.PAYMENT_METHOD AS VARCHAR2 (20)) AS "PAYMENT-METHOD",
          CAST (SP.SEX AS VARCHAR2 (20)) AS "SEX",
          CAST (SP.MARITAL_STATUS AS VARCHAR2 (20)) AS "MARITAL-STATUS",
          CAST (
             TO_CHAR (TO_DATE (TO_DATE (SP.BIRTHDATE, 'DD-MON-YY')),
                      'YYYYMMDD') AS VARCHAR2 (20))
             AS "BIRTHDATE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "KIDS-INVOLVED",
          CAST (SP.NO_CARE_DEP AS VARCHAR2 (20)) AS "NO-CARE-DEP",
          CAST (SBNKDT.ACCOUNT_NO AS VARCHAR2 (20)) AS "ACCOUNT-NO",
          CAST (SP.SECONDARY_PAYPOINT AS VARCHAR2 (20)) AS "SEC-PAYPOINT",
          CAST (SP.PAYMENT_MODE AS VARCHAR2 (20)) AS "PAYMENT-MODE",
          '' AS "RE-REGISTERED",
          CAST (SP.NO_KIDS_OWN AS VARCHAR2 (20)) AS "NO-KIDS-OWN",
          CAST (SP.NO_KIDS_OTHER AS VARCHAR2 (20)) AS "NO-KIDS-OTHER",
          CAST (SUBSTR (SP.SECONDARY_PAYPOINT, 1, 1) AS VARCHAR2 (20)) AS "PROVINCE",
          CAST (SP.TELEPHONE AS VARCHAR2 (20)) AS "TELNO",
          CAST (SP.CELL_NO AS VARCHAR2 (20)) AS "CELLNO",
          CAST (SR.REVIEW_PERIOD AS VARCHAR2 (20)) AS "REVIEWPERIOD",
          CAST (SR.MEDICAL_REVIEW_PERIOD AS VARCHAR2 (20)) AS "MEDICALPERIOD",
          CAST (SR.LIFE_CERTIFICATE_PERIOD AS VARCHAR2 (20))
             AS "LIFECERTPERIOD",
          '' AS "DOCS-PRESENT"
     FROM SASSA.SOCPEN_PERSONAL SP
          LEFT OUTER JOIN SASSA.SOCPEN_REVIEW SR
             ON SR.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA.SOCPEN_BANK_DETAILS SBNKDT
             ON SBNKDT.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA.SOCPEN_ADRES SA
             ON SA.PENSION_NO = SP.PENSION_NO
    WHERE SP.PENSION_NO IS NOT NULL
--AND PAYPOINT IS NOT NULL
--AND ROWNUM < 1000000
--ORDER BY SURNAME DESC
;
--
-- SPMAIN_ARCHIVE
--
CREATE OR REPLACE VIEW "SPMAIN_ARCHIVE" 
  AS 
  SELECT "FILE_TYPE","REC_TYPE","PENSION_NO","PAYPOINT","GRANT_TYPE1","GRANT_TYPE2","GRANT_TYPE3","GRANT_TYPE4","PRIM_STATUS1","PRIM_STATUS2","PRIM_STATUS3","PRIM_STATUS4","SEC_STATUS1","SEC_STATUS2","SEC_STATUS3","SEC_STATUS4","STATUS_DATE1","STATUS_DATE2","STATUS_DATE3","STATUS_DATE4","APP_DATE1","APP_DATE2","APP_DATE3","APP_DATE4","REVIEW_CODE1","REVIEW_CODE2","REVIEW_CODE3","REVIEW_CODE4","STATUS_REASON1","STATUS_REASON2","STATUS_REASON3","STATUS_REASON4","STAT_PER1","STAT_PER2","STAT_PER3","STAT_PER4","DATE_ACCEPT1","DATE_ACCEPT2","DATE_ACCEPT3","DATE_ACCEPT4","ORIG_APP_DATE1","ORIG_APP_DATE2","ORIG_APP_DATE3","ORIG_APP_DATE4","OLD_ID1","OLD_ID2","OLD_ID3","OLD_ID4","OLD_ID5","OLD_ID6","OLD_ID7","OLD_ID8","OLD_ID9","OLD_ID10","BRANCH","SURNAME","NAME","ADDRESS","POSTAL_ADDRESS","POSTAL_CODE","NO_KIDS","PAYMENT_METHOD","SEX","MARITAL_STATUS","BIRTHDATE","KIDS_INVOLVED","NO_CARE_DEP","ACCOUNT_NO","SEC_PAYPOINT","PAYMENT_MODE","RE_REGISTERED","NO_KIDS_OWN","NO_KIDS_OTHER","PROVINCE","TELNO","CELLNO","REVIEWPERIOD","MEDICALPERIOD","LIFECERTPERIOD","DOCS_PRESENT" FROM CONTENTSERVER.SOCPENBRM
UNION
SELECT "FILE_TYPE","REC_TYPE","PENSION_NO","PAYPOINT","GRANT_TYPE1","GRANT_TYPE2","GRANT_TYPE3","GRANT_TYPE4","PRIM_STATUS1","PRIM_STATUS2","PRIM_STATUS3","PRIM_STATUS4","SEC_STATUS1","SEC_STATUS2","SEC_STATUS3","SEC_STATUS4","STATUS_DATE1","STATUS_DATE2","STATUS_DATE3","STATUS_DATE4","APP_DATE1","APP_DATE2","APP_DATE3","APP_DATE4","REVIEW_CODE1","REVIEW_CODE2","REVIEW_CODE3","REVIEW_CODE4","STATUS_REASON1","STATUS_REASON2","STATUS_REASON3","STATUS_REASON4","STAT_PER1","STAT_PER2","STAT_PER3","STAT_PER4","DATE_ACCEPT1","DATE_ACCEPT2","DATE_ACCEPT3","DATE_ACCEPT4","ORIG_APP_DATE1","ORIG_APP_DATE2","ORIG_APP_DATE3","ORIG_APP_DATE4","OLD_ID1","OLD_ID2","OLD_ID3","OLD_ID4","OLD_ID5","OLD_ID6","OLD_ID7","OLD_ID8","OLD_ID9","OLD_ID10","BRANCH","SURNAME","NAME","ADDRESS","POSTAL_ADDRESS","POSTAL_CODE","NO_KIDS","PAYMENT_METHOD","SEX","MARITAL_STATUS","BIRTHDATE","KIDS_INVOLVED","NO_CARE_DEP","ACCOUNT_NO","SEC_PAYPOINT","PAYMENT_MODE","RE_REGISTERED","NO_KIDS_OWN","NO_KIDS_OTHER","PROVINCE","TELNO","CELLNO","REVIEWPERIOD","MEDICALPERIOD","LIFECERTPERIOD","DOCS_PRESENT" FROM CONTENTSERVER.SOCPENBRM_ARCHIVE;
--
-- TODO
--
CREATE OR REPLACE VIEW "TODO" 
  AS 
  select TodoBase."WORK_WORKID",TodoBase."WORK_OWNERID",TodoBase."WORK_MANAGERID",TodoBase."WORK_STATUS",TodoBase."WORK_OWNERPERMS",TodoBase."SUBWORK_SUBWORKID",TodoBase."SUBWORK_TITLE",TodoBase."SUBWORK_STATUS",TodoBase."SUBWORKTASK_TASKID",TodoBase."SUBWORKTASK_PERFORMERID",TodoBase."SUBWORKTASK_TITLE",TodoBase."SUBWORKTASK_DATEMILESTONE",TodoBase."SUBWORKTASK_DATEDUE_MAX",TodoBase."SUBWORKTASK_DATEREADY",TodoBase."SUBWORKTASK_USERDATA",TodoBase."MAPTASK_STARTDATE",TodoBase."MAPTASK_TYPE",TodoBase."MAPTASK_SUBTYPE",TodoBase."MAPTASK_PRIORITY", a.Name Work_OwnerID_Name, b.Name Work_ManagerID_Name, c.Name SubWorkTask_PerformerID_Name from TodoBase, KUAF a, KUAF b, KUAF c where Work_OwnerID=a.ID(+) and Work_ManagerID=b.ID(+) and SubWorkTask_PerformerID=c.ID(+);
--
-- TODO2
--
CREATE OR REPLACE VIEW "TODO2" 
  AS 
  select TodoBase."WORK_WORKID",TodoBase."WORK_OWNERID",TodoBase."WORK_MANAGERID",TodoBase."WORK_STATUS",TodoBase."WORK_OWNERPERMS",TodoBase."SUBWORK_SUBWORKID",TodoBase."SUBWORK_TITLE",TodoBase."SUBWORK_STATUS",TodoBase."SUBWORKTASK_TASKID",TodoBase."SUBWORKTASK_PERFORMERID",TodoBase."SUBWORKTASK_TITLE",TodoBase."SUBWORKTASK_DATEMILESTONE",TodoBase."SUBWORKTASK_DATEDUE_MAX",TodoBase."SUBWORKTASK_DATEREADY",TodoBase."SUBWORKTASK_USERDATA",TodoBase."MAPTASK_STARTDATE",TodoBase."MAPTASK_TYPE",TodoBase."MAPTASK_SUBTYPE",TodoBase."MAPTASK_PRIORITY", a.Name Work_OwnerID_Name, b.Name Work_ManagerID_Name, c.Name SubWorkTask_PerformerID_Name, case when SubWorkTask_DateDue_Max IS NOT NULL and SYSDATE > SubWorkTask_DateDue_Max then 3 else 1 end as Status, case when SubWorkTask_DateDue_Max IS NOT NULL and SYSDATE > SubWorkTask_DateDue_Max then 'Step Late' else 'OK' end as Status_String, case when MapTask_Priority IS NULL then 50 else MapTask_Priority end as Priority from TodoBase, KUAF a, KUAF b, KUAF c where Work_OwnerID=a.ID(+) and Work_ManagerID=b.ID(+) and SubWorkTask_PerformerID=c.ID(+);
--
-- TODOBASE
--
CREATE OR REPLACE VIEW "TODOBASE" 
  AS 
  select Work_WorkID, Work_OwnerID, Work_ManagerID, Work_Status, Work_OwnerPerms, SubWork_SubWorkID, SubWork_Title, SubWork_Status, SubWorkTask_TaskID, SubWorkTask_PerformerID, SubWorkTask_Title, SubWorkTask_DateMilestone, SubWorkTask_DateDue_Max, SubWorkTask_DateReady, SubWorkTask_UserData, MapTask_StartDate, MapTask_Type, MapTask_SubType, MapTask_Priority from WWork, WSubWork, WSubWorkTask, WMapTask where SubWork_WorkID=Work_WorkID and SubWorkTask_WorkID=Work_WorkID and SubWorkTask_SubWorkID=SubWork_SubWorkID and SubWorkTask_Status>1 and Work_Status=2 and SubWork_Status=1 and ( SubWorkTask_Status in (2,3,5) ) and MapTask_MapID=SubWork_MapID and MapTask_TaskID=SubWorkTask_TaskID and ( MapTask_StartDate is NULL or ( MapTask_StartDate is not NULL and sysdate >= MapTask_StartDate ) );
--
-- WAUDITTRAIL
--
CREATE OR REPLACE VIEW "WAUDITTRAIL" 
  AS 
  select a."WORKAUDIT_WORKID",a."WORKAUDIT_AUDITID",a."WORKAUDIT_SUBWORKID",a."WORKAUDIT_TASKID",a."WORKAUDIT_PERFORMERID",a."WORKAUDIT_DATE",a."WORKAUDIT_STATUS",a."WORKAUDIT_USERDATA",a."WORKAUDIT_TASKITERNUM", b.SubWorkTask_Title WorkAudit_Task_Title, c.Name WorkAudit_PerformerID_Name from WWorkAudit a, WSubWorkTask b, KUAF c where WorkAudit_WorkID=b.SubWorkTask_WorkID(+) and WorkAudit_SubWorkID=b.SubWorkTask_SubWorkID(+) and WorkAudit_TaskID=b.SubWorkTask_TaskID(+) and WorkAudit_PerformerID=c.ID(+);
--
-- WEBACTIVEWORK
--
CREATE OR REPLACE VIEW "WEBACTIVEWORK" 
  AS 
  select Work_WorkID, Work_Status, Work_OwnerID, Work_ManagerID, Work_DateDue_Max, SubWork_SubWorkID, SubWork_DateInitiated, SubWork_DateDue_Max, SubWork_Title, SubWork_Status, SubWork_ReturnSubWorkID, SubWork_UserData, Map_MapID, Map_MapObjID, MIN( SubWorkTask_DateMilestone ) SubWorkTask_DateMilestone, MIN( SubWorkTask_DateDue_Max ) SubWorkTask_DateDue_Max from WWork, WSubWork, WSubWorkTask, WMap where SubWork_WorkID=Work_WorkID and SubWork_MapID=Map_MapID and SubWorkTask_WorkID=Work_WorkID and SubWorkTask_SubWorkID=SubWork_SubWorkID and ((SubWorkTask_Status>=1 and SubWork_Status=1) or (SubWorkTask_Status<0 and SubWork_Status=-1)) and Work_Status<>-3 group by Work_WorkID, Work_Status, Work_OwnerID, Work_ManagerID, Work_DateDue_Max, SubWork_SubWorkID, SubWork_DateInitiated, SubWork_DateDue_Max, SubWork_Title, SubWork_Status, SubWork_ReturnSubWorkID, SubWork_UserData, Map_MapID, Map_MapObjID;
--
-- WEBEDITLOCKUNRESERVE
--
CREATE OR REPLACE VIEW "WEBEDITLOCKUNRESERVE" 
  AS 
  SELECT b.DataID FROM WEBEDITLock a INNER JOIN DTree b ON a.AnchorNID = b.DataID WHERE a.LinkResDate IS NOT NULL AND (b.ReservedDate != a.LinkResDate OR b.ReservedDate IS NULL);
--
-- WEBNODES
--
CREATE OR REPLACE VIEW "WEBNODES" 
  AS 
  SELECT dtc.OwnerID, dtc.DataID, dtc.ParentID, dtc.UserID, dtc.GroupID, dtc.UPermissions, dtc.GPermissions, dtc.WPermissions, dtc.SPermissions, dtc.PermID, dtc.Name, dtc.DataType, dtc.SubType, dtc.DComment, dtc.DCategory, dtc.CreateDate, dtc.ModifyDate, dtc.ExAtt1, dtc.Reserved, dtc.ReservedBy, dtc.ReservedDate, dtc.Ordering, dtc.ChildCount, dtc.VersionNum, dtc.AssignedTo, dtc.Status, dtc.Priority, dtc.GIF, dtc.Catalog, v.FileName, v.FileType, v.DataSize, v.ResSize, v.MimeType, u.Name OwnerName, dtc.OriginDataID, dtc.Major, dtc.Deleted, dtcxd.ExternalCreateDate, dtcxd.ExternalModifyDate, dtcxd.ExternalCreatorID, dtcxd.ExternalSourceID FROM DTreeCore dtc INNER JOIN KUAF u ON dtc.CreatedBy = u.ID LEFT OUTER JOIN DVersData v ON dtc.DataID = v.DocID AND NVL2( dtc.Major, dtc.Major, dtc.VersionNum ) = v.Version LEFT OUTER JOIN DTreeCoreExternalData dtcxd ON dtc.DataID = dtcxd.DataID AND dtc.VersionNum = dtcxd.VersionNum WHERE dtc.Deleted = 0 AND v.VerType IS NULL;
--
-- WEBNODES_EN_ZA
--
CREATE OR REPLACE VIEW "WEBNODES_EN_ZA" 
  AS 
  SELECT dtc.OwnerID, dtc.DataID, dtc.ParentID, dtc.UserID, dtc.GroupID, dtc.UPermissions, dtc.GPermissions, dtc.WPermissions, dtc.SPermissions, dtc.PermID, wnm.Name, dtc.DataType, dtc.SubType, dtc.DComment, dtc.DCategory, dtc.CreateDate, dtc.ModifyDate, dtc.ExAtt1, dtc.Reserved, dtc.ReservedBy, dtc.ReservedDate, dtc.Ordering, dtc.ChildCount, dtc.VersionNum, dtc.AssignedTo, dtc.Status, dtc.Priority, dtc.GIF, dtc.Catalog, v.FileName, v.FileType, v.DataSize, v.ResSize, v.MimeType, dtc.OriginDataID, dtc.Major, dso.OrderRef, dtcxd.ExternalCreateDate, dtcxd.ExternalModifyDate, dtcxd.ExternalCreatorID, dtcxd.ExternalSourceID FROM DTreeCore dtc INNER JOIN WebNodesMeta_en_ZA wnm ON dtc.DataID = wnm.DataID LEFT OUTER JOIN DVersData v ON dtc.DataID = v.DocID AND NVL2( dtc.Major, dtc.Major, dtc.VersionNum ) = v.Version LEFT OUTER JOIN DTreeSubTypeOrderRef dso ON dtc.SubType = dso.SubType LEFT OUTER JOIN DTreeCoreExternalData dtcxd ON dtc.DataID = dtcxd.DataID AND dtc.VersionNum = dtcxd.VersionNum WHERE dtc.Deleted = 0 AND v.VerType IS NULL;
--
-- WEBNODESBROWSE_EN_ZA
--
CREATE OR REPLACE VIEW "WEBNODESBROWSE_EN_ZA" 
  AS 
  SELECT dtc.OwnerID, dtc.DataID, dtc.ParentID, dtc.UserID, dtc.GroupID, dtc.UPermissions, dtc.GPermissions, dtc.WPermissions, dtc.SPermissions, dtc.PermID, wnm.Name, dtc.DataType, dtc.SubType, dtc.DComment, dtc.DCategory, dtc.CreateDate, dtc.ModifyDate, dtc.ExAtt1, dtc.Reserved, dtc.ReservedBy, dtc.ReservedDate, dtc.Ordering, dtc.ChildCount, dtc.VersionNum, dtc.AssignedTo, dtc.Status, dtc.Priority, dtc.GIF, dtc.Catalog, v.FileName, v.FileType, v.DataSize, v.ResSize, v.MimeType, dtc.OriginDataID, dtc.Major, dtcxd.ExternalCreateDate, dtcxd.ExternalModifyDate, dtcxd.ExternalCreatorID, dtcxd.ExternalSourceID , f.WND_CreatedBy, f.WND_CreateDate, f.WND_ModifiedBy, f.WND_Version, e.WNF_attr_1164938_2, e.WNF_attr_1164938_6, f.WND_Owner, f.WND_Comments, e.WNF_ReadyDate FROM DTreeCore dtc INNER JOIN WebNodesMeta_en_ZA wnm ON dtc.DataID = wnm.DataID LEFT OUTER JOIN DVersData v ON dtc.DataID = v.DocID AND NVL2( dtc.Major, dtc.Major, dtc.VersionNum ) = v.Version LEFT OUTER JOIN WebNodesFilter e ON dtc.DataID = e.DataID LEFT OUTER JOIN WebNodesDisplay f ON dtc.DataID = f.DataID LEFT OUTER JOIN DTreeCoreExternalData dtcxd ON dtc.DataID = dtcxd.DataID AND dtc.VersionNum = dtcxd.VersionNum WHERE dtc.Deleted = 0 AND v.VerType IS NULL;
--
-- WEBNODESCATALOGS
--
CREATE OR REPLACE VIEW "WEBNODESCATALOGS" 
  AS 
  SELECT /*+ USE_NL(dtc v) */ dtc.OwnerID, dtc.DataID, dtc.ParentID, dtc.UserID, dtc.GroupID, dtc.UPermissions, dtc.GPermissions, dtc.WPermissions, dtc.SPermissions, dtc.PermID, dtc.Name, dtc.DataType, dtc.SubType, dtc.DComment, dtc.DCategory, dtc.CreateDate, dtc.ModifyDate, dtc.ExAtt1, dtc.Reserved, dtc.ReservedBy, dtc.ReservedDate, dtc.Ordering, dtc.ChildCount, dtc.VersionNum, dtc.AssignedTo, dtc.Status, dtc.Priority, dtc.GIF, dtc.Catalog, v.FileName, v.FileType, v.DataSize, v.ResSize, v.MimeType, dtc.OriginDataID, dtc.Major, dtcxd.ExternalCreateDate, dtcxd.ExternalModifyDate, dtcxd.ExternalCreatorID, dtcxd.ExternalSourceID FROM DTreeCore dtc LEFT OUTER JOIN DVersData v ON dtc.DataID = v.DocID AND NVL2( dtc.Major, dtc.Major, dtc.VersionNum ) = v.Version LEFT OUTER JOIN DTreeCoreExternalData dtcxd ON dtc.DataID = dtcxd.DataID AND dtc.VersionNum = dtcxd.VersionNum WHERE dtc.Catalog = 1 AND dtc.Deleted = 0 AND v.VerType IS NULL;
--
-- WEBNODESCATALOGS_EN_ZA
--
CREATE OR REPLACE VIEW "WEBNODESCATALOGS_EN_ZA" 
  AS 
  SELECT dtc.OwnerID, dtc.DataID, dtc.ParentID, dtc.UserID, dtc.GroupID, dtc.UPermissions, dtc.GPermissions, dtc.WPermissions, dtc.SPermissions, dtc.PermID, wnm.Name, dtc.DataType, dtc.SubType, dtc.DComment, dtc.DCategory, dtc.CreateDate, dtc.ModifyDate, dtc.ExAtt1, dtc.Reserved, dtc.ReservedBy, dtc.ReservedDate, dtc.Ordering, dtc.ChildCount, dtc.VersionNum, dtc.AssignedTo, dtc.Status, dtc.Priority, dtc.GIF, dtc.Catalog, v.FileName, v.FileType, v.DataSize, v.ResSize, v.MimeType, dtc.OriginDataID, dtc.Major, dtcxd.ExternalCreateDate, dtcxd.ExternalModifyDate, dtcxd.ExternalCreatorID, dtcxd.ExternalSourceID FROM DTreeCore dtc INNER JOIN WebNodesMeta_en_ZA wnm ON dtc.DataID = wnm.DataID LEFT OUTER JOIN DVersData v ON dtc.DataID = v.DocID AND ( dtc.Major = v.Version OR ( dtc.Major IS NULL AND dtc.VersionNum = v.Version ) ) LEFT OUTER JOIN DTreeCoreExternalData dtcxd ON dtc.DataID = dtcxd.DataID AND dtc.VersionNum = dtcxd.VersionNum WHERE dtc.Catalog = 1 AND dtc.Deleted = 0 AND v.VerType IS NULL;
--
-- WEBNODESDELETED_EN_ZA
--
CREATE OR REPLACE VIEW "WEBNODESDELETED_EN_ZA" 
  AS 
  SELECT dtc.OwnerID, dtc.DataID, dtc.ParentID, dtc.UserID, dtc.GroupID, dtc.UPermissions, dtc.GPermissions, dtc.WPermissions, dtc.SPermissions, dtc.PermID, wnm.Name, dtc.DataType, dtc.SubType, dtc.DComment, dtc.DCategory, dtc.CreateDate, dtc.ModifyDate, dtc.ExAtt1, dtc.Reserved, dtc.ReservedBy, dtc.ReservedDate, dtc.Ordering, dtc.ChildCount, dtc.VersionNum, dtc.AssignedTo, dtc.Status, dtc.Priority, dtc.GIF, dtc.Catalog, v.FileName, v.FileType, v.DataSize, v.ResSize, v.MimeType, dtc.OriginDataID, dtc.Major, dso.OrderRef, dtcxd.ExternalCreateDate, dtcxd.ExternalModifyDate, dtcxd.ExternalCreatorID, dtcxd.ExternalSourceID , f.WND_CreatedBy, f.WND_CreateDate, f.WND_ModifiedBy, f.WND_Version, e.WNF_attr_1164938_2, e.WNF_attr_1164938_6, f.WND_Owner, f.WND_Comments, e.WNF_ReadyDate FROM DTreeCore dtc INNER JOIN WebNodesMeta_en_ZA wnm ON dtc.DataID = wnm.DataID LEFT OUTER JOIN DVersData v ON dtc.DataID = v.DocID AND NVL2( dtc.Major, dtc.Major, dtc.VersionNum ) = v.Version LEFT OUTER JOIN WebNodesFilter e ON dtc.DataID = e.DataID LEFT OUTER JOIN WebNodesDisplay f ON dtc.DataID = f.DataID LEFT OUTER JOIN DTreeSubTypeOrderRef dso ON dtc.SubType = dso.SubType LEFT OUTER JOIN DTreeCoreExternalData dtcxd ON dtc.DataID = dtcxd.DataID AND dtc.VersionNum = dtcxd.VersionNum WHERE dtc.Deleted = 1 AND v.VerType IS NULL;
--
-- TRG_DC_BATCH_B_I
--
  CREATE OR REPLACE TRIGGER "TRG_DC_BATCH_B_I"
  BEFORE INSERT ON "DC_BATCH"FOR EACH ROW
  BEGIN
    IF :new.BATCH_NO IS NULL OR :new.BATCH_NO = 0 THEN
         SELECT SEQ_DC_BATCH.nextval INTO :new.BATCH_NO FROM DUAL;
    END IF;
END;

/
--
-- TRG_DC_BOXPICKED_B_I
--
  CREATE OR REPLACE TRIGGER "TRG_DC_BOXPICKED_B_I"
  BEFORE INSERT ON "DC_BOXPICKED"FOR EACH ROW
  DECLARE

BEGIN
    IF :new.UNQ_NO IS NULL THEN
         SELECT SEQ_DC_BOXPICKED.nextval INTO :new.UNQ_NO FROM DUAL;
         
            IF LENGTH(:new.UNQ_NO) < 8 THEN
                :new.UNQ_NO :=  LPAD(:new.UNQ_NO, 8, '0');
            END IF;
    END IF;
END;
/
--
-- TRG_DC_FILE_B_I
--
  CREATE OR REPLACE TRIGGER "TRG_DC_FILE_B_I"
  BEFORE INSERT ON "DC_FILE"FOR EACH ROW
  DECLARE

REGIONCODE VARCHAR2(10);

BEGIN
    IF :new.UNQ_FILE_NO IS NULL THEN
         SELECT SEQ_DC_FILE.nextval INTO :new.UNQ_FILE_NO FROM DUAL;
         
            IF LENGTH(:new.UNQ_FILE_NO) < 8 THEN
                :new.UNQ_FILE_NO :=  LPAD(:new.UNQ_FILE_NO, 8, '0');
            END IF;
            
            select region_code into REGIONCODE FROM DC_REGION WHERE REGION_ID = :new.REGION_ID;
            
           :new.UNQ_FILE_NO := REGIONCODE || :new.GRANT_TYPE || :new.UNQ_FILE_NO;
           
    END IF;
END;
/
--
-- TRG_DC_FILE_REQUEST_B_I
--
  CREATE OR REPLACE TRIGGER "TRG_DC_FILE_REQUEST_B_I"
  BEFORE INSERT ON "DC_FILE_REQUEST"FOR EACH ROW
  BEGIN
    IF :new.UNQ_FILE_NO IS NULL THEN
         SELECT SEQ_DC_FILE_REQUEST.nextval INTO :new.UNQ_FILE_NO FROM DUAL;
           
    END IF;
END;

/
--
-- TRG_DC_PICKLIST_B_I
--
  CREATE OR REPLACE TRIGGER "TRG_DC_PICKLIST_B_I"
  BEFORE INSERT ON "DC_PICKLIST"FOR EACH ROW
  DECLARE

REGIONCODE VARCHAR2(10);

BEGIN
    IF :new.UNQ_PICKLIST IS NULL THEN
         SELECT SEQ_DC_PICKLIST.nextval INTO :new.UNQ_PICKLIST FROM DUAL;
         
            IF LENGTH(:new.UNQ_PICKLIST) < 8 THEN
                :new.UNQ_PICKLIST :=  LPAD(:new.UNQ_PICKLIST, 8, '0');
            END IF;
            
            select REGION_CODE into REGIONCODE FROM DC_REGION WHERE REGION_ID = :new.REGION_ID;
            
           :new.UNQ_PICKLIST := REGIONCODE || :new.REGISTRY_TYPE || :new.UNQ_PICKLIST;
           
    END IF;
END;
/
--
-- ACTIVEVIEWOVERRIDES_INDEX1
--
  CREATE INDEX "ACTIVEVIEWOVERRIDES_INDEX1" ON "ACTIVEVIEWOVERRIDES" ("NODEID");
--
-- ACTIVEVIEWOVERRIDES_INDEX2
--
  CREATE INDEX "ACTIVEVIEWOVERRIDES_INDEX2" ON "ACTIVEVIEWOVERRIDES" ("ACTIVEVIEWTYPE","PRIORITY","SEQ");
--
-- ACTIVEVIEWOVERRIDES_INDEX3
--
  CREATE INDEX "ACTIVEVIEWOVERRIDES_INDEX3" ON "ACTIVEVIEWOVERRIDES" ("ACTIVEVIEWTYPE","NODEID","PRIORITY","SEQ");
--
-- ACTIVEVIEWOVERRIDES_INDEX4
--
  CREATE INDEX "ACTIVEVIEWOVERRIDES_INDEX4" ON "ACTIVEVIEWOVERRIDES" ("ACTIVEVIEWTYPE","NODEID");
--
-- ACTIVEVIEWOVERRIDES_INDEX5
--
  CREATE INDEX "ACTIVEVIEWOVERRIDES_INDEX5" ON "ACTIVEVIEWOVERRIDES" ("PRIORITY","NODEID","SEQ");
--
-- ACTIVEVIEWOVERRIDES_PRIMARY
--
  CREATE UNIQUE INDEX "ACTIVEVIEWOVERRIDES_PRIMARY" ON "ACTIVEVIEWOVERRIDES" ("ID");
--
-- ACTIVEVIEWPRESELECT_INDEX1
--
  CREATE INDEX "ACTIVEVIEWPRESELECT_INDEX1" ON "ACTIVEVIEWPRESELECT" ("APPEARANCEID","AVSELECTOR");
--
-- ACTIVEVIEWPRESELECT_INDEX2
--
  CREATE INDEX "ACTIVEVIEWPRESELECT_INDEX2" ON "ACTIVEVIEWPRESELECT" ("SEQ");
--
-- ACTIVEVIEWSTATS_INDEX1
--
  CREATE INDEX "ACTIVEVIEWSTATS_INDEX1" ON "ACTIVEVIEWSTATS" ("DATEFIRSTACTION","USERSTATUS");
--
-- AGENTCONFIG_PRIMARY
--
  CREATE UNIQUE INDEX "AGENTCONFIG_PRIMARY" ON "AGENTCONFIG" ("CONFIGID");
--
-- AGENTSCHEDULE_INDEX1
--
  CREATE INDEX "AGENTSCHEDULE_INDEX1" ON "AGENTSCHEDULE" ("NEXTTIME","AGENTID");
--
-- AGENTSCHEDULE_INDEX2
--
  CREATE INDEX "AGENTSCHEDULE_INDEX2" ON "AGENTSCHEDULE" ("USERID","AGENTID");
--
-- AGENTSCHEDULE_PRIMARY
--
  CREATE UNIQUE INDEX "AGENTSCHEDULE_PRIMARY" ON "AGENTSCHEDULE" ("SCHEDID");
--
-- AREA_PRIMARY
--
  CREATE UNIQUE INDEX "AREA_PRIMARY" ON "AREA" ("FACILITY","AREA");
--
-- ASSIGNEES_ASSIGNEDTO
--
  CREATE INDEX "ASSIGNEES_ASSIGNEDTO" ON "ASSIGNEES" ("ASSIGNEDTO");
--
-- ASSIGNEES_DATAID
--
  CREATE INDEX "ASSIGNEES_DATAID" ON "ASSIGNEES" ("DATAID");
--
-- ASSIGNEES_PRIMARY
--
  CREATE UNIQUE INDEX "ASSIGNEES_PRIMARY" ON "ASSIGNEES" ("DATAID","ASSIGNEDTO");
--
-- AUDITCOLECTIONSITEMSFLIDINDEX
--
  CREATE INDEX "AUDITCOLECTIONSITEMSFLIDINDEX" ON "AUDITCOLLECTIONSITEMS" ("FROMLOCATIONID");
--
-- AUDITCOLECTIONSITEMSTLIDINDEX
--
  CREATE INDEX "AUDITCOLECTIONSITEMSTLIDINDEX" ON "AUDITCOLLECTIONSITEMS" ("TOLOCATIONID");
--
-- AUDITCOLLECTIONSITEMSDPINDEX
--
  CREATE INDEX "AUDITCOLLECTIONSITEMSDPINDEX" ON "AUDITCOLLECTIONSITEMS" ("DISCOVERYPERM");
--
-- AUDITCOLLECTIONSITEMSINDEX
--
  CREATE INDEX "AUDITCOLLECTIONSITEMSINDEX" ON "AUDITCOLLECTIONSITEMS" ("SEQUENCENUMBER");
--
-- AUDITCOLLECTIONSITEMSMDINDEX
--
  CREATE INDEX "AUDITCOLLECTIONSITEMSMDINDEX" ON "AUDITCOLLECTIONSITEMS" ("MODIFYDATE");
--
-- AUDITCOLLECTIONSITEMSOPINDEX
--
  CREATE INDEX "AUDITCOLLECTIONSITEMSOPINDEX" ON "AUDITCOLLECTIONSITEMS" ("OPERATION");
--
-- BESTBETS_EXPIRY
--
  CREATE INDEX "BESTBETS_EXPIRY" ON "BESTBETSDATA" ("EXPIRY");
--
-- BESTBETS_ID
--
  CREATE INDEX "BESTBETS_ID" ON "BESTBETSDATA" ("DATAID");
--
-- BESTBETS_SEARCH
--
  CREATE INDEX "BESTBETS_SEARCH" ON "BESTBETSSEARCH" ("BESTBETSEARCH","DATAID","EXPIRED");
--
-- BESTBETSDATA_DATE
--
  CREATE INDEX "BESTBETSDATA_DATE" ON "BESTBETSDATA" ("DATAID","MODIFYDATE" DESC);
--
-- BLOBDATAIDX
--
  CREATE UNIQUE INDEX "BLOBDATAIDX" ON "BLOBDATA" ("LONGID","SEGMENTID","OWNERID");
--
-- BLOBRESDATA_PRIMARY
--
  CREATE UNIQUE INDEX "BLOBRESDATA_PRIMARY" ON "BLOBRESDATA" ("LONGID","SEGMENTID","OWNERID");
--
-- CATREGIONMAP_CATID
--
  CREATE INDEX "CATREGIONMAP_CATID" ON "CATREGIONMAP" ("CATID");
--
-- CATREGIONMAP_REGIONNAME
--
  CREATE INDEX "CATREGIONMAP_REGIONNAME" ON "CATREGIONMAP" ("REGIONNAME");
--
-- COLLECTIONS1INDEX
--
  CREATE INDEX "COLLECTIONS1INDEX" ON "COLLECTIONS" ("DATAID");
--
-- COLLECTIONS2INDEX
--
  CREATE INDEX "COLLECTIONS2INDEX" ON "COLLECTIONS" ("COLLECTIONID","DATAID");
--
-- COLLECTIONS3INDEX
--
  CREATE UNIQUE INDEX "COLLECTIONS3INDEX" ON "COLLECTIONS" ("COLLECTIONID","DATAID","VERSION");
--
-- COLLECTIONSDATAINDEX
--
  CREATE INDEX "COLLECTIONSDATAINDEX" ON "COLLECTIONSDATA" ("COLLECTIONID");
--
-- COMMCALENDARIND
--
  CREATE INDEX "COMMCALENDARIND" ON "COMMCALENDAR" ("ID","COMMID","STARTDATE");
--
-- COMMINI_PRIMARY
--
  CREATE UNIQUE INDEX "COMMINI_PRIMARY" ON "COMMINI" ("INISECTION","INIKEYWORD");
--
-- COMMMEMBER_PRIMARY
--
  CREATE UNIQUE INDEX "COMMMEMBER_PRIMARY" ON "COMMMEMBER" ("DATAID","USERID");
--
-- COMMMEMBERREQIND
--
  CREATE UNIQUE INDEX "COMMMEMBERREQIND" ON "COMMMEMBERREQ" ("DATAID","USERID","ROLEID","REQTYPE");
--
-- COMMMETRICS_PRIMARY
--
  CREATE UNIQUE INDEX "COMMMETRICS_PRIMARY" ON "COMMMETRICS" ("DATAID","USERID","ACTIONDATE","ACTIONTYPE");
--
-- COMPONENTSETTINGS_PRIMARY
--
  CREATE UNIQUE INDEX "COMPONENTSETTINGS_PRIMARY" ON "COMPONENTSETTINGS" ("ID","COMPONENTNAME","SETTINGNAME");
--
-- CSAPPSSTATS_INDEX1
--
  CREATE INDEX "CSAPPSSTATS_INDEX1" ON "CSAPPSSTATS" ("USERSTATUS");
--
-- CSAPPSSTATS_INDEX2
--
  CREATE INDEX "CSAPPSSTATS_INDEX2" ON "CSAPPSSTATS" ("DATEFIRSTACTION");
--
-- CSAPPSSTATS_INDEX3
--
  CREATE INDEX "CSAPPSSTATS_INDEX3" ON "CSAPPSSTATS" ("USERID");
--
-- CUST_IRM_INDEX1
--
  CREATE INDEX "CUST_IRM_INDEX1" ON "CUST_IRM" ("VOLUMEID","DATAID","VERSIONNUM","SEQ");
--
-- CUST_IRMS_INDEX1
--
  CREATE INDEX "CUST_IRMS_INDEX1" ON "CUST_IRMS" ("VOLUMEID","DATAID","VERSIONNUM","SEQ");
--
-- CUST_IRMTABLE_INDEX1
--
  CREATE INDEX "CUST_IRMTABLE_INDEX1" ON "CUST_IRMTABLE" ("VOLUMEID","DATAID","VERSIONNUM","SEQ");
--
-- CUST_SAPOLETTERS_INDEX1
--
  CREATE INDEX "CUST_SAPOLETTERS_INDEX1" ON "CUST_SAPOLETTERS" ("ID_NO");
--
-- CUST_SAPOLETTERS_INDEX2
--
  CREATE INDEX "CUST_SAPOLETTERS_INDEX2" ON "CUST_SAPOLETTERS" ("FILE_CODE");
--
-- CUST_SAPOLETTERS_INDEX3
--
  CREATE INDEX "CUST_SAPOLETTERS_INDEX3" ON "CUST_SAPOLETTERS" ("REF_NO");
--
-- CUST_SAPOSTATUS_INDEX1
--
  CREATE INDEX "CUST_SAPOSTATUS_INDEX1" ON "CUST_SAPOSTATUS" ("REF_NO");
--
-- CUST_SAPOSTATUS_INDEX2
--
  CREATE INDEX "CUST_SAPOSTATUS_INDEX2" ON "CUST_SAPOSTATUS" ("TRACKING_NO");
--
-- CUST_SAPOSTATUS_INDEX3
--
  CREATE INDEX "CUST_SAPOSTATUS_INDEX3" ON "CUST_SAPOSTATUS" ("STATUS_CODE");
--
-- CUSTODIANSITE_PRIMARY
--
  CREATE UNIQUE INDEX "CUSTODIANSITE_PRIMARY" ON "CUSTODIANSITE" ("CUSTODIANSITE");
--
-- DATTRIBUTES_PRIMARY
--
  CREATE UNIQUE INDEX "DATTRIBUTES_PRIMARY" ON "DATTRIBUTES" ("ATTRNAME");
--
-- DAUDITMORE_PRIMARY
--
  CREATE INDEX "DAUDITMORE_PRIMARY" ON "DAUDITMORE" ("EVENTID");
--
-- DAUDITNEW_INDEXDATAID
--
  CREATE INDEX "DAUDITNEW_INDEXDATAID" ON "DAUDITNEW" ("DATAID");
--
-- DAUDITNEW_INDEXDATEEVENT
--
  CREATE INDEX "DAUDITNEW_INDEXDATEEVENT" ON "DAUDITNEW" ("AUDITDATE","AUDITSTR");
--
-- DAUDITNEW_INDEXUSER
--
  CREATE INDEX "DAUDITNEW_INDEXUSER" ON "DAUDITNEW" ("PERFORMERID");
--
-- DAUDITNEW_PRIMARY
--
  CREATE UNIQUE INDEX "DAUDITNEW_PRIMARY" ON "DAUDITNEW" ("EVENTID");
--
-- DAVBNAME_X1
--
  CREATE INDEX "DAVBNAME_X1" ON "DAVBNAME" ("DATAID","PARENTID");
--
-- DAVBNAME_X2
--
  CREATE INDEX "DAVBNAME_X2" ON "DAVBNAME" ("PARENTID","NAME");
--
-- DAVBNAME_X3
--
  CREATE INDEX "DAVBNAME_X3" ON "DAVBNAME" ("ZCREATEDATE");
--
-- DAVLOCK_GC
--
  CREATE INDEX "DAVLOCK_GC" ON "DAVLOCK" ("ANCHORNID");
--
-- DAVLOCK_X1
--
  CREATE UNIQUE INDEX "DAVLOCK_X1" ON "DAVLOCK" ("RESID","LOCKTOKEN");
--
-- DAVLOCK_XP
--
  CREATE INDEX "DAVLOCK_XP" ON "DAVLOCK" ("EXPIRYDATE");
--
-- DAVPROP_GC
--
  CREATE INDEX "DAVPROP_GC" ON "DAVPROP" ("ANCHORNID");
--
-- DAVPROP_X3
--
  CREATE INDEX "DAVPROP_X3" ON "DAVPROP" ("RESID","NAME");
--
-- DAVUSERMAP_X1
--
  CREATE UNIQUE INDEX "DAVUSERMAP_X1" ON "DAVUSERMAP" ("USERID","NAME");
--
-- DAVUSERMAP_X2
--
  CREATE UNIQUE INDEX "DAVUSERMAP_X2" ON "DAVUSERMAP" ("NAME");
--
-- DC_DESTRUCTION_LIST_INDX01
--
  CREATE INDEX "DC_DESTRUCTION_LIST_INDX01" ON "DC_DESTRUCTION_LIST" ("REGION");
--
-- DC_DESTRUCTION_LIST_INDX02
--
  CREATE INDEX "DC_DESTRUCTION_LIST_INDX02" ON "DC_DESTRUCTION_LIST" ("PENSION_NO");
--
-- DC_DESTRUCTION_LIST_INDX03
--
  CREATE INDEX "DC_DESTRUCTION_LIST_INDX03" ON "DC_DESTRUCTION_LIST" ("NAME");
--
-- DC_DESTRUCTION_LIST_INDX04
--
  CREATE INDEX "DC_DESTRUCTION_LIST_INDX04" ON "DC_DESTRUCTION_LIST" ("SURNAME");
--
-- DC_DESTRUCTION_LIST_INDX05
--
  CREATE INDEX "DC_DESTRUCTION_LIST_INDX05" ON "DC_DESTRUCTION_LIST" ("GRANT_TYPE");
--
-- DC_DESTRUCTION_LIST_INDX06
--
  CREATE INDEX "DC_DESTRUCTION_LIST_INDX06" ON "DC_DESTRUCTION_LIST" ("STATUS_DATE");
--
-- DC_EXCLUSIONS_ID_NO_INDEX
--
  CREATE INDEX "DC_EXCLUSIONS_ID_NO_INDEX" ON "DC_EXCLUSIONS" ("ID_NO");
--
-- DCATATTRS_PRIMARY
--
  CREATE UNIQUE INDEX "DCATATTRS_PRIMARY" ON "DCATATTRS" ("CATNAME","ATTRNAME");
--
-- DCATEGORIES_PRIMARY
--
  CREATE UNIQUE INDEX "DCATEGORIES_PRIMARY" ON "DCATEGORIES" ("CATNAME");
--
-- DDELETEDITEMSNAMESIDX_EN_ZA
--
  CREATE INDEX "DDELETEDITEMSNAMESIDX_EN_ZA" ON "DDELETEDITEMSNAMES_EN_ZA" ("DATAID");
--
-- DDELETEDITEMSNODESPURGEIDX
--
  CREATE INDEX "DDELETEDITEMSNODESPURGEIDX" ON "DDELETEDITEMSNODES" ("PURGEDATE","DATAID");
--
-- DDELLIST_PRIMARY
--
  CREATE UNIQUE INDEX "DDELLIST_PRIMARY" ON "DDELLIST" ("OWNERID");
--
-- DDOCUMENTCLASS_NAMETYPE
--
  CREATE INDEX "DDOCUMENTCLASS_NAMETYPE" ON "DDOCUMENTCLASS" ("NAME","TYPE");
--
-- DDOCUMENTCLASS_PRIMARY
--
  CREATE UNIQUE INDEX "DDOCUMENTCLASS_PRIMARY" ON "DDOCUMENTCLASS" ("NID");
--
-- DDOCUMENTCLASSCHILDREN_INDEX2
--
  CREATE INDEX "DDOCUMENTCLASSCHILDREN_INDEX2" ON "DDOCUMENTCLASSCHILDREN" ("CHILDID","ID");
--
-- DELETEDDOCS_PRIMARY
--
  CREATE UNIQUE INDEX "DELETEDDOCS_PRIMARY" ON "DEPRECATED_DELETEDDOCS" ("NODEID");
--
-- DFACETCACHE_DATEADDED
--
  CREATE INDEX "DFACETCACHE_DATEADDED" ON "DFACETCACHE" ("DATEADDED");
--
-- DFACETCACHE_PRIMARY
--
  CREATE UNIQUE INDEX "DFACETCACHE_PRIMARY" ON "DFACETCACHE" ("K1","K2","K3","K4","K5","K6","K7","K8","K9","K10","K11");
--
-- DFACETKEYS_KEYSTR
--
  CREATE UNIQUE INDEX "DFACETKEYS_KEYSTR" ON "DFACETKEYS" ("KEYSTR","HASHSTR");
--
-- DFACETKEYS_PRIMARY
--
  CREATE INDEX "DFACETKEYS_PRIMARY" ON "DFACETKEYS" ("ID","HASHSTR");
--
-- DFACETKEYS_SECONDARY
--
  CREATE INDEX "DFACETKEYS_SECONDARY" ON "DFACETKEYS" ("HASHSTR","ID");
--
-- DFACETTRACKING_TASKID
--
  CREATE INDEX "DFACETTRACKING_TASKID" ON "DFACETTRACKING" ("TASKID");
--
-- DFACETTRACKING_TASKTIME
--
  CREATE INDEX "DFACETTRACKING_TASKTIME" ON "DFACETTRACKING" ("TASKTIME");
--
-- DFACETTRACKING_TIMEINMS
--
  CREATE INDEX "DFACETTRACKING_TIMEINMS" ON "DFACETTRACKING" ("TIMEINMS");
--
-- DFAVORITES_PRIMARY
--
  CREATE UNIQUE INDEX "DFAVORITES_PRIMARY" ON "DFAVORITES" ("USERID","DATAID");
--
-- DFAVORITESTABS_PRIMARY
--
  CREATE UNIQUE INDEX "DFAVORITESTABS_PRIMARY" ON "DFAVORITESTABS" ("USERID","TABID");
--
-- DISCUSSIONID_PRIMARY
--
  CREATE UNIQUE INDEX "DISCUSSIONID_PRIMARY" ON "DISCUSSIONID" ("OWNERID");
--
-- DOBJECTRANKDATAID
--
  CREATE UNIQUE INDEX "DOBJECTRANKDATAID" ON "DOBJECTRANK" ("DATAID");
--
-- DPSINSRTPROPS_PRIMARY
--
  CREATE UNIQUE INDEX "DPSINSRTPROPS_PRIMARY" ON "DPSINSERTABLEPROPERTIES" ("INSERTPROPID");
--
-- DPSTASKS_INDEX1
--
  CREATE INDEX "DPSTASKS_INDEX1" ON "DPSTASKS" ("DATAID","USERID","DPSTASKID");
--
-- DPSTASKS_PRIMARY
--
  CREATE UNIQUE INDEX "DPSTASKS_PRIMARY" ON "DPSTASKS" ("DPSTASKID");
--
-- DREADLIST_PRIMARY
--
  CREATE UNIQUE INDEX "DREADLIST_PRIMARY" ON "DREADLIST" ("USERID","OWNERID");
--
-- DSTAGINGIMPORT_INDEX1
--
  CREATE INDEX "DSTAGINGIMPORT_INDEX1" ON "DSTAGINGIMPORT" ("TAGNAME","NID");
--
-- DSTAGINGIMPORT_NID
--
  CREATE INDEX "DSTAGINGIMPORT_NID" ON "DSTAGINGIMPORT" ("NID");
--
-- DTOPICITEMS_PRIMARY
--
  CREATE UNIQUE INDEX "DTOPICITEMS_PRIMARY" ON "DTOPICITEMS" ("ITEMID");
--
-- DTOPICITEMS_TOPIC
--
  CREATE INDEX "DTOPICITEMS_TOPIC" ON "DTOPICITEMS" ("DISCUSSIONID","TOPICID");
--
-- DTREE_ASSIGNEDTO
--
  CREATE INDEX "DTREE_ASSIGNEDTO" ON "DTREECORE" ("ASSIGNEDTO","STATUS","DELETED");
--
-- DTREE_DATAID
--
  CREATE INDEX "DTREE_DATAID" ON "DTREECORE" ("DATAID","DELETED");
--
-- DTREE_DELETED
--
  CREATE INDEX "DTREE_DELETED" ON "DTREECORE" ("DELETED","DATAID");
--
-- DTREE_GUID
--
  CREATE UNIQUE INDEX "DTREE_GUID" ON "DTREECORE" ("GUID");
--
-- DTREE_INDEX1
--
  CREATE UNIQUE INDEX "DTREE_INDEX1" ON "DTREECORE" ("OWNERID","DATAID","DELETED");
--
-- DTREE_INDEX2
--
  CREATE INDEX "DTREE_INDEX2" ON "DTREECORE" ("ORIGINDATAID","DELETED");
--
-- DTREE_INDEX3
--
  CREATE INDEX "DTREE_INDEX3" ON "DTREECORE" ("SUBTYPE","USERID","DELETED");
--
-- DTREE_MODIFIEDBY
--
  CREATE INDEX "DTREE_MODIFIEDBY" ON "DTREECORE" ("MODIFIEDBY","DELETED");
--
-- DTREE_MODIFYDATE
--
  CREATE INDEX "DTREE_MODIFYDATE" ON "DTREECORE" ("MODIFYDATE","DELETED");
--
-- DTREE_PARENTID
--
  CREATE INDEX "DTREE_PARENTID" ON "DTREECORE" ("PARENTID","DATAID","DELETED");
--
-- DTREE_PRIMARY
--
  CREATE UNIQUE INDEX "DTREE_PRIMARY" ON "DTREECORE" ("PARENTID","OWNERID","NAME","DELETED");
--
-- DTREE_PRIMARY2
--
  CREATE INDEX "DTREE_PRIMARY2" ON "DTREECORE" ("PARENTID","OWNERID","DATAID","GROUPID","PERMID","CREATEDBY","VERSIONNUM","MAJOR","CATALOG","DELETED");
--
-- DTREE_RECD_OPINIONSUMMARY
--
  CREATE INDEX "DTREE_RECD_OPINIONSUMMARY" ON "DTREECORE" ("DATAID","OWNERID","PARENTID","MODIFYDATE","SUBTYPE","DELETED");
--
-- DTREE_RESERVED
--
  CREATE INDEX "DTREE_RESERVED" ON "DTREECORE" ("RESERVED","RESERVEDBY","DELETED");
--
-- DTREE_SUBTYPE
--
  CREATE INDEX "DTREE_SUBTYPE" ON "DTREECORE" ("SUBTYPE","DELETED");
--
-- DTREE_TYPES
--
  CREATE INDEX "DTREE_TYPES" ON "DTREECORE" ("PARENTID","DELETED","CATALOG","SUBTYPE");
--
-- DTREE_VERSIONNUM
--
  CREATE INDEX "DTREE_VERSIONNUM" ON "DTREECORE" ("DATAID","VERSIONNUM","DELETED");
--
-- DTREEACL_INDEX1
--
  CREATE INDEX "DTREEACL_INDEX1" ON "DTREEACL" ("DATAID");
--
-- DTREEACL_INDEX2
--
  CREATE INDEX "DTREEACL_INDEX2" ON "DTREEACL" ("PARENTID");
--
-- DTREEASPECTSNOTIFY_ATYPE
--
  CREATE INDEX "DTREEASPECTSNOTIFY_ATYPE" ON "DTREEASPECTSNOTIFY" ("ATYPE");
--
-- DTREEASPECTSNOTIFY_DATAIDVERS
--
  CREATE INDEX "DTREEASPECTSNOTIFY_DATAIDVERS" ON "DTREEASPECTSNOTIFY" ("DATAID","VERSIONNUM");
--
-- DTREEASPECTSNOTIFY_EXTSELECT
--
  CREATE INDEX "DTREEASPECTSNOTIFY_EXTSELECT" ON "DTREEASPECTSNOTIFY" ("DATAID","NID");
--
-- DTREEASPECTSNOTIFY_PRIMARY
--
  CREATE UNIQUE INDEX "DTREEASPECTSNOTIFY_PRIMARY" ON "DTREEASPECTSNOTIFY" ("NID");
--
-- DTREECOREEXTERNALDATA_IDX1
--
  CREATE UNIQUE INDEX "DTREECOREEXTERNALDATA_IDX1" ON "DTREECOREEXTERNALDATA" ("DATAID","VERSIONNUM");
--
-- DTREECOREEXTERNALSOURCE_ID
--
  CREATE UNIQUE INDEX "DTREECOREEXTERNALSOURCE_ID" ON "DTREECOREEXTERNALSOURCE" ("ID");
--
-- DTREECOREEXTERNALSOURCE_VALUE
--
  CREATE UNIQUE INDEX "DTREECOREEXTERNALSOURCE_VALUE" ON "DTREECOREEXTERNALSOURCE" ("VALUE");
--
-- DTREEEXTRACTORVERIFY_1
--
  CREATE UNIQUE INDEX "DTREEEXTRACTORVERIFY_1" ON "DTREEEXTRACTORVERIFY" ("DATAID","VERSIONNUM");
--
-- DTREEEXTRACTORVERIFY_2
--
  CREATE INDEX "DTREEEXTRACTORVERIFY_2" ON "DTREEEXTRACTORVERIFY" ("STATUS","NEW");
--
-- DTREEEXTRACTORVERIFY_3
--
  CREATE INDEX "DTREEEXTRACTORVERIFY_3" ON "DTREEEXTRACTORVERIFY" ("STATUS","CORRECTIONATTEMPTED");
--
-- DTREEEXTRACTORVERIFY_4
--
  CREATE INDEX "DTREEEXTRACTORVERIFY_4" ON "DTREEEXTRACTORVERIFY" ("STATUS","RETRIES");
--
-- DTREEEXTRACTORVERIFY_5
--
  CREATE INDEX "DTREEEXTRACTORVERIFY_5" ON "DTREEEXTRACTORVERIFY" ("RETRIES");
--
-- DTREEEXTRACTORVERIFY_6
--
  CREATE INDEX "DTREEEXTRACTORVERIFY_6" ON "DTREEEXTRACTORVERIFY" ("CONTENTSTATUS");
--
-- DTREEEXTRACTORVERIFY_7
--
  CREATE INDEX "DTREEEXTRACTORVERIFY_7" ON "DTREEEXTRACTORVERIFY" ("METADATAERRORS");
--
-- DTREEMULTILINGUAL_PRIMARY
--
  CREATE UNIQUE INDEX "DTREEMULTILINGUAL_PRIMARY" ON "DTREEMULTILINGUAL" ("DATAID","LANGUAGECODE");
--
-- DTREENOTIFY_DATAIDNID
--
  CREATE INDEX "DTREENOTIFY_DATAIDNID" ON "DTREENOTIFY" ("DATAID","NID");
--
-- DTREENOTIFY_DATAIDVERSIONNUM
--
  CREATE INDEX "DTREENOTIFY_DATAIDVERSIONNUM" ON "DTREENOTIFY" ("DATAID","VERSIONNUM");
--
-- DTREENOTIFY_EXTRACTORSELECT
--
  CREATE INDEX "DTREENOTIFY_EXTRACTORSELECT" ON "DTREENOTIFY" ("DATAID","NTYPE" DESC,"NID");
--
-- DTREENOTIFY_NTYPE
--
  CREATE INDEX "DTREENOTIFY_NTYPE" ON "DTREENOTIFY" ("NTYPE");
--
-- DTREENOTIFY_PRIMARY
--
  CREATE UNIQUE INDEX "DTREENOTIFY_PRIMARY" ON "DTREENOTIFY" ("NID");
--
-- DTREENOTREC_DATAIDLASTRET
--
  CREATE INDEX "DTREENOTREC_DATAIDLASTRET" ON "DTREENOTIFYRECOVER" ("DATAID","LASTRETRY");
--
-- DTREENOTREC_DATAIDVERSNUM
--
  CREATE INDEX "DTREENOTREC_DATAIDVERSNUM" ON "DTREENOTIFYRECOVER" ("DATAID","VERSIONNUM");
--
-- DTREENOTREC_RETRIESLASTRETRY
--
  CREATE INDEX "DTREENOTREC_RETRIESLASTRETRY" ON "DTREENOTIFYRECOVER" ("RETRIES","LASTRETRY");
--
-- DTREESUBTYPEORDERREF_INDEX1
--
  CREATE INDEX "DTREESUBTYPEORDERREF_INDEX1" ON "DTREESUBTYPEORDERREF" ("SUBTYPE","ORDERREF");
--
-- DVERSDATA_GUID
--
  CREATE UNIQUE INDEX "DVERSDATA_GUID" ON "DVERSDATA" ("GUID");
--
-- DVERSDATA_IDX1
--
  CREATE INDEX "DVERSDATA_IDX1" ON "DVERSDATA" ("PROVIDERID","DATASIZE");
--
-- DVERSDATA_INDEX2
--
  CREATE UNIQUE INDEX "DVERSDATA_INDEX2" ON "DVERSDATA" ("DOCID","VERSIONNAME","VERTYPE","PAGENUM");
--
-- DVERSDATA_INDEX3
--
  CREATE UNIQUE INDEX "DVERSDATA_INDEX3" ON "DVERSDATA" ("VERSIONID");
--
-- DVERSDATA_INDEX4
--
  CREATE UNIQUE INDEX "DVERSDATA_INDEX4" ON "DVERSDATA" ("DOCID","VERMAJOR","VERMINOR","VERTYPE","PAGENUM");
--
-- DVERSDATA_PRIMARY
--
  CREATE UNIQUE INDEX "DVERSDATA_PRIMARY" ON "DVERSDATA" ("DOCID","VERSION","VERTYPE","PAGENUM");
--
-- DVERSDATA_TRANSIENT
--
  CREATE INDEX "DVERSDATA_TRANSIENT" ON "DVERSDATA" ("TRANSIENT","VERCDATE");
--
-- DVERSEXTRADATA_INDEX1
--
  CREATE INDEX "DVERSEXTRADATA_INDEX1" ON "DVERSEXTRADATA" ("VERSIONID");
--
-- DWORKBENCH_PRIMARY
--
  CREATE UNIQUE INDEX "DWORKBENCH_PRIMARY" ON "DWORKBENCH" ("DATAID");
--
-- ELINKALIAS_EMAILALIASINDEX
--
  CREATE UNIQUE INDEX "ELINKALIAS_EMAILALIASINDEX" ON "ELINKALIAS" ("EMAILALIAS");
--
-- ELINKALIAS_OBJECTIDINDEX
--
  CREATE UNIQUE INDEX "ELINKALIAS_OBJECTIDINDEX" ON "ELINKALIAS" ("OBJECTID");
--
-- ELINKSUBSCRIPTION_INDEX1
--
  CREATE INDEX "ELINKSUBSCRIPTION_INDEX1" ON "ELINKSUBSCRIPTION" ("KUAF_ID","OBJECTID");
--
-- ELINKSUBSCRIPTION_INDEX2
--
  CREATE INDEX "ELINKSUBSCRIPTION_INDEX2" ON "ELINKSUBSCRIPTION" ("NOTIFYEVENTS_EVENTID","NOTIFYEVENTS_EVENTACTION","OBJECTID");
--
-- ELINKSUBSCRIPTION_UNIQUE
--
  CREATE UNIQUE INDEX "ELINKSUBSCRIPTION_UNIQUE" ON "ELINKSUBSCRIPTION" ("KUAF_ID","NOTIFYEVENTS_EVENTID","NOTIFYEVENTS_EVENTACTION","OBJECTID");
--
-- FACILITY_PRIMARY
--
  CREATE UNIQUE INDEX "FACILITY_PRIMARY" ON "FACILITY" ("FACILITY");
--
-- FILECACHE_INDEX1
--
  CREATE INDEX "FILECACHE_INDEX1" ON "FILECACHE" ("SEQNUM","UNIQUEID");
--
-- FORMSSEQUENCE_INDEX1
--
  CREATE UNIQUE INDEX "FORMSSEQUENCE_INDEX1" ON "FORMSSEQUENCE" ("VOLUMEID","DATAID","VERSIONNUM");
--
-- GIDATAIDINDEX
--
  CREATE INDEX "GIDATAIDINDEX" ON "RECD_OPERATIONSUMMARY" ("DATAID","USERID","OBJTYPE","ACTION","REFCOUNT","SUBTYPE");
--
-- GIRECENTACCESSDATAID
--
  CREATE INDEX "GIRECENTACCESSDATAID" ON "RECD_OPERATIONSUMMARY" ("RECENTACCESS","DATAID");
--
-- GIRECENTACCESSINDEX
--
  CREATE INDEX "GIRECENTACCESSINDEX" ON "RECD_OPERATIONSUMMARY" ("USERID","SUBTYPE","DATAID","ACTION","RECENTACCESS");
--
-- GITYPEACTUSERDATAREFCNT
--
  CREATE INDEX "GITYPEACTUSERDATAREFCNT" ON "RECD_OPERATIONSUMMARY" ("SUBTYPE","ACTION","USERID","DATAID","REFCOUNT");
--
-- GIUREFCOUNTINDEX
--
  CREATE INDEX "GIUREFCOUNTINDEX" ON "RECD_OPERATIONSUMMARY" ("REFCOUNT");
--
-- GIUSERIDINDEX
--
  CREATE INDEX "GIUSERIDINDEX" ON "RECD_OPERATIONSUMMARY" ("USERID","DATAID","OBJTYPE","ACTION","REFCOUNT");
--
-- ICONBARDISPLAY_PRIMARY
--
  CREATE UNIQUE INDEX "ICONBARDISPLAY_PRIMARY" ON "ICONBARDISPLAY" ("DATAID");
--
-- IDX_DBROWSEANCESTORS_DID_AID
--
  CREATE INDEX "IDX_DBROWSEANCESTORS_DID_AID" ON "DBROWSEANCESTORSCORE" ("DATAID","DELETED","ANCESTORID");
--
-- IDX_DTREEANCESTORS_DID_AID
--
  CREATE INDEX "IDX_DTREEANCESTORS_DID_AID" ON "DTREEANCESTORS" ("DATAID","ANCESTORID");
--
-- IDX_DVERSDATA_PROVIDERID
--
  CREATE INDEX "IDX_DVERSDATA_PROVIDERID" ON "DVERSDATA" ("PROVIDERID");
--
-- IDX_WIKILINKS_CONTAINERID
--
  CREATE INDEX "IDX_WIKILINKS_CONTAINERID" ON "WIKILINKS" ("CONTAINERID");
--
-- IDX_WIKILINKS_SOURCEID
--
  CREATE INDEX "IDX_WIKILINKS_SOURCEID" ON "WIKILINKS" ("SOURCEID");
--
-- IDX_WIKILINKS_TARGETID
--
  CREATE INDEX "IDX_WIKILINKS_TARGETID" ON "WIKILINKS" ("TARGETID");
--
-- IDX_WIKIREDIRECTS_CONTAINERID
--
  CREATE INDEX "IDX_WIKIREDIRECTS_CONTAINERID" ON "WIKIREDIRECTS" ("CONTAINERID");
--
-- IDX_WIKIREDIRECTS_ID
--
  CREATE INDEX "IDX_WIKIREDIRECTS_ID" ON "WIKIREDIRECTS" ("ID");
--
-- IDX_WIKIREDIRECTS_PREVIOUSNAME
--
  CREATE INDEX "IDX_WIKIREDIRECTS_PREVIOUSNAME" ON "WIKIREDIRECTS" ("PREVIOUSNAME");
--
-- INDEX03
--
  CREATE INDEX "INDEX03" ON "SS_APPLICATION" ("APP_ID");
--
-- INDEX1
--
  CREATE INDEX "INDEX1" ON "DC_FILE" ("UNQ_FILE_NO","REGION_ID");
--
-- INDEX10
--
  CREATE INDEX "INDEX10" ON "DC_BOXPICKED" ("BOX_NUMBER");
--
-- INDEX11
--
  CREATE INDEX "INDEX11" ON "SS_APPLICATION" ("GRANT_TYPE");
--
-- INDEX12
--
  CREATE INDEX "INDEX12" ON "SS_APPLICATION" ("FORM_TYPE");
--
-- INDEX13
--
  CREATE INDEX "INDEX13" ON "SS_APPLICATION" ("DISABILITY_TYPE");
--
-- INDEX14
--
  CREATE INDEX "INDEX14" ON "SS_APPLICATION" ("REGION_CODE");
--
-- INDEX15
--
  CREATE INDEX "INDEX15" ON "SS_APPLICATION" ("POSITN");
--
-- INDEX16
--
  CREATE INDEX "INDEX16" ON "SS_APPLICATION" ("TOWN");
--
-- INDEX17
--
  CREATE INDEX "INDEX17" ON "DC_BATCH" ("UPDATED_BY");
--
-- INDEX18
--
  CREATE INDEX "INDEX18" ON "DC_BATCH" ("OFFICE_ID");
--
-- INDEX19
--
  CREATE INDEX "INDEX19" ON "DC_BATCH" ("BATCH_STATUS");
--
-- INDEX2
--
  CREATE INDEX "INDEX2" ON "SOCPENBRM" ("PENSION_NO");
--
-- INDEX20
--
  CREATE INDEX "INDEX20" ON "DC_BATCH" ("REG_TYPE");
--
-- INDEX21
--
  CREATE INDEX "INDEX21" ON "MIS_LIVELINK_TBL" ("MINI_BOX_NUMBER");
--
-- INDEX22
--
  CREATE INDEX "INDEX22" ON "MIS_LIVELINK_TBL" ("GRANT_TYPE");
--
-- INDEX23
--
  CREATE INDEX "INDEX23" ON "DC_FILE" ("MIS_BOXNO");
--
-- INDEX24
--
  CREATE INDEX "INDEX24" ON "DC_FILE" ("BRM_BARCODE");
--
-- INDEX25
--
  CREATE INDEX "INDEX25" ON "DC_FILE" ("MIS_BOX_DATE");
--
-- INDEX26
--
  CREATE INDEX "INDEX26" ON "DC_FILE" ("APPLICATION_STATUS");
--
-- INDEX27
--
  CREATE INDEX "INDEX27" ON "DC_FILE" ("FILE_STATUS");
--
-- INDEX28
--
  CREATE INDEX "INDEX28" ON "DC_FILE" ("MIS_BOX_STATUS");
--
-- INDEX29
--
  CREATE INDEX "INDEX29" ON "DC_FILE" ("TDW_BOXNO");
--
-- INDEX3
--
  CREATE INDEX "INDEX3" ON "MIS_LIVELINK_FILE" ("ID_NUMBER");
--
-- INDEX30
--
  CREATE INDEX "INDEX30" ON "DC_FILE" ("MISSING");
--
-- INDEX31
--
  CREATE INDEX "INDEX31" ON "DC_FILE" ("NON_COMPLIANT");
--
-- INDEX32
--
  CREATE INDEX "INDEX32" ON "SOCPENBRM" ("GRANT_TYPE1");
--
-- INDEX33
--
  CREATE INDEX "INDEX33" ON "SOCPENBRM" ("GRANT_TYPE2");
--
-- INDEX34
--
  CREATE INDEX "INDEX34" ON "SOCPENBRM" ("GRANT_TYPE3");
--
-- INDEX35
--
  CREATE INDEX "INDEX35" ON "SOCPENBRM" ("GRANT_TYPE4");
--
-- INDEX36
--
  CREATE INDEX "INDEX36" ON "SOCPENBRM" ("APP_DATE1","APP_DATE2","APP_DATE3","APP_DATE4");
--
-- INDEX37
--
  CREATE INDEX "INDEX37" ON "SOCPENBRM" ("SEC_STATUS1","SEC_STATUS2","SEC_STATUS3","SEC_STATUS4");
--
-- INDEX38
--
  CREATE INDEX "INDEX38" ON "SOCPENBRM" ("STATUS_DATE1","STATUS_DATE2","STATUS_DATE3","STATUS_DATE4");
--
-- INDEX39
--
  CREATE INDEX "INDEX39" ON "SOCPENBRM" ("NAME","SURNAME");
--
-- INDEX4
--
  CREATE INDEX "INDEX4" ON "MIS_LIVELINK_LOAD_LC" ("ID_NUMBER");
--
-- INDEX40
--
  CREATE INDEX "INDEX40" ON "DC_REGION" ("REGION_NAME","REGION_CODE","REGION_ID");
--
-- INDEX41
--
  CREATE INDEX "INDEX41" ON "DC_FILE" ("CHILD_ID_NO");
--
-- INDEX42
--
  CREATE INDEX "INDEX42" ON "DC_FILE" ("PRINT_ORDER");
--
-- INDEX43
--
  CREATE INDEX "INDEX43" ON "DC_FILE" ("REGION_ID");
--
-- INDEX44
--
  CREATE INDEX "INDEX44" ON "DC_FILE" ("FILE_NUMBER");
--
-- INDEX45
--
  CREATE INDEX "INDEX45" ON "DC_LOCAL_OFFICE" ("OFFICE_NAME");
--
-- INDEX46
--
  CREATE INDEX "INDEX46" ON "DC_LOCAL_OFFICE" ("REGION_ID");
--
-- INDEX47
--
  CREATE INDEX "INDEX47" ON "DC_LOCAL_OFFICE" ("OFFICE_TYPE");
--
-- INDEX48
--
  CREATE INDEX "INDEX48" ON "DC_LOCAL_OFFICE" ("DISTRICT");
--
-- INDEX49
--
  CREATE INDEX "INDEX49" ON "MIS_LIVELINK_TBL" ("FILE_NUMBER","ID_NUMBER","GRANT_TYPE");
--
-- INDEX5
--
  CREATE INDEX "INDEX5" ON "SS_APPLICATION" ("ID_NUMBER");
--
-- INDEX50
--
  CREATE INDEX "INDEX50" ON "DC_FILE_REC" ("APPLICANT_NO");
--
-- INDEX51
--
  CREATE INDEX "INDEX51" ON "DC_FILE_REC" ("REGION_ID");
--
-- INDEX52
--
  CREATE UNIQUE INDEX "INDEX52" ON "DC_FILE_REC" ("UNQ_FILE_NO");
--
-- INDEX53
--
  CREATE INDEX "INDEX53" ON "DC_FILE_REC" ("MIS_BOXNO");
--
-- INDEX54
--
  CREATE INDEX "INDEX54" ON "DC_FILE_REC" ("BRM_BARCODE");
--
-- INDEX55
--
  CREATE INDEX "INDEX55" ON "DC_FILE_REC" ("MIS_BOX_DATE");
--
-- INDEX56
--
  CREATE INDEX "INDEX56" ON "DC_FILE_REC" ("APPLICATION_STATUS");
--
-- INDEX57
--
  CREATE INDEX "INDEX57" ON "DC_FILE_REC" ("FILE_STATUS");
--
-- INDEX58
--
  CREATE INDEX "INDEX58" ON "DC_FILE_REC" ("MIS_BOX_STATUS");
--
-- INDEX59
--
  CREATE INDEX "INDEX59" ON "DC_FILE_REC" ("TDW_BOXNO");
--
-- INDEX6
--
  CREATE INDEX "INDEX6" ON "SS_APPLICATION" ("FORM_NUMBER");
--
-- INDEX60
--
  CREATE INDEX "INDEX60" ON "SOCPENBRM" ("DOCS_PRESENT");
--
-- INDEX61
--
  CREATE INDEX "INDEX61" ON "SOCPENBRM" ("PROVINCE");
--
-- INDEX62
--
  CREATE INDEX "INDEX62" ON "SOCPENBRM" ("NO_KIDS_OTHER");
--
-- INDEX63
--
  CREATE INDEX "INDEX63" ON "SOCPENBRM" ("PAYMENT_MODE");
--
-- INDEX64
--
  CREATE INDEX "INDEX64" ON "SOCPENBRM" ("MARITAL_STATUS");
--
-- INDEX65
--
  CREATE INDEX "INDEX65" ON "SS_APPLICATION" ("BOX");
--
-- INDEX7
--
  CREATE INDEX "INDEX7" ON "DC_FILE" ("APPLICANT_NO");
--
-- INDEX8
--
  CREATE INDEX "INDEX8" ON "DC_BOXPICKED" ("UNQ_PICKLIST");
--
-- INDEX9
--
  CREATE INDEX "INDEX9" ON "DC_BOXPICKED" ("BIN_NUMBER");
--
-- INDEXTRACERDATACREATETIME
--
  CREATE INDEX "INDEXTRACERDATACREATETIME" ON "INDEXTRACERDATA" ("CREATETIME");
--
-- INDX_BIN_ID
--
  CREATE INDEX "INDX_BIN_ID" ON "MIS_LIVELINK_TBL" ("BIN_ID");
--
-- INDX_BOX_NUMBER
--
  CREATE INDEX "INDX_BOX_NUMBER" ON "MIS_LIVELINK_TBL" ("BOX_NUMBER");
--
-- INDX_FILE_NUMBER
--
  CREATE INDEX "INDX_FILE_NUMBER" ON "MIS_LIVELINK_TBL" ("FILE_NUMBER");
--
-- INDX_IDNUMBER
--
  CREATE INDEX "INDX_IDNUMBER" ON "MIS_LIVELINK_TBL" ("ID_NUMBER");
--
-- INDX_POSITION
--
  CREATE INDEX "INDX_POSITION" ON "MIS_LIVELINK_TBL" ("POSITION");
--
-- INDX_REGION_ID
--
  CREATE INDEX "INDX_REGION_ID" ON "MIS_LIVELINK_TBL" ("REGION_ID");
--
-- INDX_REGISTRY_TYPE
--
  CREATE INDEX "INDX_REGISTRY_TYPE" ON "MIS_LIVELINK_TBL" ("REGISTRY_TYPE");
--
-- INDX_SUB_REGISTRY_TYPE
--
  CREATE INDEX "INDX_SUB_REGISTRY_TYPE" ON "MIS_LIVELINK_TBL" ("SUB_REGISTRY_TYPE");
--
-- IX_DEXTENDEDPROFILEINFO_2
--
  CREATE INDEX "IX_DEXTENDEDPROFILEINFO_2" ON "DEXTENDEDPROFILEINFO" ("REPORTTOID");
--
-- IX_DSOCIALFEEDEVENTS_2
--
  CREATE INDEX "IX_DSOCIALFEEDEVENTS_2" ON "DSOCIALFEEDEVENTS" ("SGMDATAID","EVENTTYPE");
--
-- IX_DSOCIALFEEDEVENTS_3
--
  CREATE INDEX "IX_DSOCIALFEEDEVENTS_3" ON "DSOCIALFEEDEVENTS" ("NID");
--
-- IX_DSOCIALFEEDEVENTS_4
--
  CREATE INDEX "IX_DSOCIALFEEDEVENTS_4" ON "DSOCIALFEEDEVENTS" ("EVENTTYPE","VISIBLE","VISIBLETOFOLLOWERS");
--
-- IX_DSOCIALFEEDEVENTS_5
--
  CREATE INDEX "IX_DSOCIALFEEDEVENTS_5" ON "DSOCIALFEEDEVENTS" ("USERID","EVENTTYPE");
--
-- IX_DSOCIALFEEDEVENTS_6
--
  CREATE INDEX "IX_DSOCIALFEEDEVENTS_6" ON "DSOCIALFEEDEVENTS" ("CONVERSATIONID");
--
-- IX_DSOCIALFEEDEVENTS_7
--
  CREATE INDEX "IX_DSOCIALFEEDEVENTS_7" ON "DSOCIALFEEDEVENTS" ("DATAID");
--
-- IX_DSOCIALFOLLOWERS_2
--
  CREATE UNIQUE INDEX "IX_DSOCIALFOLLOWERS_2" ON "DSOCIALFOLLOWERS" ("FOLLOWID","USERID");
--
-- IX_DSOCIALFOLLOWERS_3
--
  CREATE UNIQUE INDEX "IX_DSOCIALFOLLOWERS_3" ON "DSOCIALFOLLOWERS" ("FOLLOWID","USERID","FOLLOWDATE");
--
-- IX_F1_2
--
  CREATE UNIQUE INDEX "IX_F1_2" ON "DFACET_OWNER" ("FACET","DATAID");
--
-- IX_F10_2
--
  CREATE UNIQUE INDEX "IX_F10_2" ON "DFACET_ATTR_1164938_6" ("FACET","DATAID");
--
-- IX_F3_2
--
  CREATE UNIQUE INDEX "IX_F3_2" ON "DFACET_MODIFYDATE" ("DATAID","FACET");
--
-- IX_F4_2
--
  CREATE UNIQUE INDEX "IX_F4_2" ON "DFACET_DC_1" ("DATAID","FACET");
--
-- IX_F5_2
--
  CREATE UNIQUE INDEX "IX_F5_2" ON "DFACET_DC_336" ("DATAID","FACET");
--
-- IX_F6_2
--
  CREATE UNIQUE INDEX "IX_F6_2" ON "DFACET_DC_2" ("DATAID","FACET");
--
-- IX_F7_2
--
  CREATE UNIQUE INDEX "IX_F7_2" ON "DFACET_DC_3" ("DATAID","FACET");
--
-- IX_F8_2
--
  CREATE UNIQUE INDEX "IX_F8_2" ON "DFACET_DC_4" ("DATAID","FACET");
--
-- IX_F9_2
--
  CREATE UNIQUE INDEX "IX_F9_2" ON "DFACET_DC_5" ("DATAID","FACET");
--
-- IXC_READYDATE
--
  CREATE INDEX "IXC_READYDATE" ON "WEBNODESFILTER" ("DATAID","WNF_READYDATE");
--
-- KID_PRIMARY
--
  CREATE UNIQUE INDEX "KID_PRIMARY" ON "KID" ("IDTYPE");
--
-- KINI_PRIMARY
--
  CREATE UNIQUE INDEX "KINI_PRIMARY" ON "KINI" ("INISECTION","INIKEYWORD");
--
-- KLONG_INDEX1
--
  CREATE INDEX "KLONG_INDEX1" ON "KLONG" ("OWNERID");
--
-- KLONG_PRIMARY
--
  CREATE UNIQUE INDEX "KLONG_PRIMARY" ON "KLONG" ("LONGID","SEGMENTID");
--
-- KSTATE_PRIMARY
--
  CREATE UNIQUE INDEX "KSTATE_PRIMARY" ON "KSTATE" ("STATEID");
--
-- KUAF_GROUPID
--
  CREATE INDEX "KUAF_GROUPID" ON "KUAF" ("GROUPID");
--
-- KUAF_LEADERID
--
  CREATE INDEX "KUAF_LEADERID" ON "KUAF" ("LEADERID");
--
-- KUAF_OWNERID
--
  CREATE INDEX "KUAF_OWNERID" ON "KUAF" ("OWNERID");
--
-- KUAF_PRIMARY
--
  CREATE UNIQUE INDEX "KUAF_PRIMARY" ON "KUAF" ("ID");
--
-- KUAF_TYPEDELETED
--
  CREATE INDEX "KUAF_TYPEDELETED" ON "KUAF" ("TYPE","SPACEID","DELETED");
--
-- KUAF_TYPENAME
--
  CREATE UNIQUE INDEX "KUAF_TYPENAME" ON "KUAF" ("TYPE","SPACEID","NAME","DELETED");
--
-- KUAFCHILDREN_INDEX1
--
  CREATE INDEX "KUAFCHILDREN_INDEX1" ON "KUAFCHILDREN" ("CHILDID");
--
-- KUAFCHILDREN_PRIMARY
--
  CREATE UNIQUE INDEX "KUAFCHILDREN_PRIMARY" ON "KUAFCHILDREN" ("ID","CHILDID");
--
-- KUAFIDENTITY_ID
--
  CREATE UNIQUE INDEX "KUAFIDENTITY_ID" ON "KUAFIDENTITY" ("ID");
--
-- KUAFIDENTITY_VALUE
--
  CREATE UNIQUE INDEX "KUAFIDENTITY_VALUE" ON "KUAFIDENTITY" ("VALUE");
--
-- KUAFIDENTITYTYPE_ID
--
  CREATE UNIQUE INDEX "KUAFIDENTITYTYPE_ID" ON "KUAFIDENTITYTYPE" ("ID");
--
-- KUAFIDENTITYTYPE_VALUE
--
  CREATE UNIQUE INDEX "KUAFIDENTITYTYPE_VALUE" ON "KUAFIDENTITYTYPE" ("VALUE");
--
-- KUAFPREFS_PRIMARY
--
  CREATE UNIQUE INDEX "KUAFPREFS_PRIMARY" ON "KUAFPREFS" ("PREFSID","PREFSKEYWORD");
--
-- KUAFPROXY_PROXYID
--
  CREATE INDEX "KUAFPROXY_PROXYID" ON "KUAFPROXY" ("PROXYID");
--
-- KUAFPROXYPRIMARY
--
  CREATE UNIQUE INDEX "KUAFPROXYPRIMARY" ON "KUAFPROXY" ("ID","PROXYTYPE");
--
-- KUAFRIGHTSLIST_RLID
--
  CREATE INDEX "KUAFRIGHTSLIST_RLID" ON "KUAFRIGHTSLIST" ("RLID");
--
-- KUAFRIGHTSLIST_RLPROXYTYPE
--
  CREATE INDEX "KUAFRIGHTSLIST_RLPROXYTYPE" ON "KUAFRIGHTSLIST" ("RLPROXYTYPE");
--
-- KUAFRIGHTSLIST_RLRIGHTID
--
  CREATE INDEX "KUAFRIGHTSLIST_RLRIGHTID" ON "KUAFRIGHTSLIST" ("RLRIGHTID");
--
-- KUAFRIGHTSLISTNEW_RLID
--
  CREATE INDEX "KUAFRIGHTSLISTNEW_RLID" ON "KUAFRIGHTSLISTNEW" ("RLID");
--
-- KUAFRIGHTSLISTNEW_RLPROXYTYPE
--
  CREATE INDEX "KUAFRIGHTSLISTNEW_RLPROXYTYPE" ON "KUAFRIGHTSLISTNEW" ("RLPROXYTYPE");
--
-- KUAFRIGHTSLISTNEW_RLRIGHTID
--
  CREATE INDEX "KUAFRIGHTSLISTNEW_RLRIGHTID" ON "KUAFRIGHTSLISTNEW" ("RLRIGHTID");
--
-- LLATTRBLOBDATA_PRIMARY
--
  CREATE INDEX "LLATTRBLOBDATA_PRIMARY" ON "LLATTRBLOBDATA" ("ID","VERNUM","SEGMENTID");
--
-- LLATTRDATA_DEFID
--
  CREATE INDEX "LLATTRDATA_DEFID" ON "LLATTRDATA" ("DEFID","DEFVERN");
--
-- LLATTRDATA_ID
--
  CREATE INDEX "LLATTRDATA_ID" ON "LLATTRDATA" ("ID","VERNUM","ATTRID");
--
-- LLCACHE_INDEX1
--
  CREATE INDEX "LLCACHE_INDEX1" ON "LLCACHE" ("OBJECTDATE");
--
-- LLCACHE_INDEX2
--
  CREATE UNIQUE INDEX "LLCACHE_INDEX2" ON "LLCACHE" ("OBJECTID");
--
-- LLCACHE_PRIMARY
--
  CREATE UNIQUE INDEX "LLCACHE_PRIMARY" ON "LLCACHE" ("OBJECTID","SEGMENTID");
--
-- LLCLASSIFY_CIDSTATUSID
--
  CREATE INDEX "LLCLASSIFY_CIDSTATUSID" ON "LLCLASSIFY" ("CID","STATUS","ID");
--
-- LLCLASSIFY_INDEX1
--
  CREATE INDEX "LLCLASSIFY_INDEX1" ON "LLCLASSIFY" ("ID");
--
-- LLCLASSIFY_PRIMARY
--
  CREATE UNIQUE INDEX "LLCLASSIFY_PRIMARY" ON "LLCLASSIFY" ("CID","ID");
--
-- LLCOMMENTS_PRIMARY
--
  CREATE INDEX "LLCOMMENTS_PRIMARY" ON "LLCOMMENTS" ("ORDERSTRING");
--
-- LLCOMMNOTIFICATION_PRIMARY
--
  CREATE INDEX "LLCOMMNOTIFICATION_PRIMARY" ON "LLCOMMNOTIFICATION" ("USERID","CID");
--
-- LLCOMMREGISTRY_PRIMARY
--
  CREATE INDEX "LLCOMMREGISTRY_PRIMARY" ON "LLCOMMREGISTRY" ("USERID","DATAID");
--
-- LLDIRECTORY_INDEX1
--
  CREATE INDEX "LLDIRECTORY_INDEX1" ON "LLDIRECTORY" ("ID");
--
-- LLDIRECTORY_PRIMARY
--
  CREATE UNIQUE INDEX "LLDIRECTORY_PRIMARY" ON "LLDIRECTORY" ("CID","ID");
--
-- LLEVENTQUEUE_IDENTIFICATION
--
  CREATE INDEX "LLEVENTQUEUE_IDENTIFICATION" ON "LLEVENTQUEUE" ("EVENTID","EVENTINT1","EVENTINT2","EVENTINT3","EVENTINT4");
--
-- LLEVENTQUEUE_PRIMARY
--
  CREATE UNIQUE INDEX "LLEVENTQUEUE_PRIMARY" ON "LLEVENTQUEUE" ("EVENTSEQNO");
--
-- LLFORUMS_PRIMARY
--
  CREATE UNIQUE INDEX "LLFORUMS_PRIMARY" ON "LLFORUMS" ("PARENTID","VOLUMEID");
--
-- LLFORUMSDIRECTORY_PRIMARY
--
  CREATE UNIQUE INDEX "LLFORUMSDIRECTORY_PRIMARY" ON "LLFORUMSDIRECTORY" ("DIRECTORYID","FORUMID");
--
-- LLFORUMSORDER_FORUMID
--
  CREATE INDEX "LLFORUMSORDER_FORUMID" ON "LLFORUMSORDER" ("FORUMID");
--
-- LLFORUMSORDER_FORUMID_LEVEL
--
  CREATE INDEX "LLFORUMSORDER_FORUMID_LEVEL" ON "LLFORUMSORDER" ("FORUMID","TOPICLEVEL");
--
-- LLFORUMSORDER_FORUMID_TOPICID
--
  CREATE UNIQUE INDEX "LLFORUMSORDER_FORUMID_TOPICID" ON "LLFORUMSORDER" ("FORUMID","TOPICID");
--
-- LLMULTIVOLUMEREGISTRY_PRIMARY
--
  CREATE UNIQUE INDEX "LLMULTIVOLUMEREGISTRY_PRIMARY" ON "LLMULTIVOLUMEREGISTRY" ("DATAID","VOLUMEID");
--
-- LLPOLLING_COMMENTNUM
--
  CREATE INDEX "LLPOLLING_COMMENTNUM" ON "LLPOLLING" ("COMMENTNUM");
--
-- LLPOLLING_PRIMARY
--
  CREATE INDEX "LLPOLLING_PRIMARY" ON "LLPOLLING" ("ID","USERID");
--
-- LLPROSPECTOR_INDEX1
--
  CREATE INDEX "LLPROSPECTOR_INDEX1" ON "LLPROSPECTOR" ("PROSPECTORID");
--
-- LLPROSPECTOR_PRIMARY
--
  CREATE UNIQUE INDEX "LLPROSPECTOR_PRIMARY" ON "LLPROSPECTOR" ("PROSPECTORID","RESULTID");
--
-- LLPROSPECTORDATA_PRIMARY
--
  CREATE UNIQUE INDEX "LLPROSPECTORDATA_PRIMARY" ON "LLPROSPECTORDATA" ("PROSPECTORID");
--
-- LLPROSPECTORREGISTRY_PRIMARY
--
  CREATE UNIQUE INDEX "LLPROSPECTORREGISTRY_PRIMARY" ON "LLPROSPECTORREGISTRY" ("DATAID","USERID");
--
-- LLQUESTIONS_EXPIRATIONDATE
--
  CREATE INDEX "LLQUESTIONS_EXPIRATIONDATE" ON "LLQUESTIONS" ("EXPIRATIONDATE");
--
-- LLQUESTIONS_PRIMARY
--
  CREATE UNIQUE INDEX "LLQUESTIONS_PRIMARY" ON "LLQUESTIONS" ("QUESTIONID");
--
-- LLSYSTEMDATA_PRIMARY
--
  CREATE UNIQUE INDEX "LLSYSTEMDATA_PRIMARY" ON "LLSYSTEMDATA" ("SECTION","KEYWORD");
--
-- LOAD_IDX01
--
  CREATE INDEX "LOAD_IDX01" ON "LOAD" ("ID_NUMBER");
--
-- LOCATORTYPE_PRIMARY
--
  CREATE UNIQUE INDEX "LOCATORTYPE_PRIMARY" ON "LOCATORTYPE" ("LOCATORTYPE");
--
-- LOCLOCATORTYPE_PRIMARY
--
  CREATE UNIQUE INDEX "LOCLOCATORTYPE_PRIMARY" ON "LOCLOCATORTYPE" ("FACILITY","AREA","BOXLOCATOR","LOCATORTYPE");
--
-- MEDIATYPES_PRIMARY
--
  CREATE UNIQUE INDEX "MEDIATYPES_PRIMARY" ON "MEDIATYPES" ("MEDIATYPEID","FIELDNUMBER","FIELDNAME");
--
-- METADATALANGUAGES_PRIMARY
--
  CREATE UNIQUE INDEX "METADATALANGUAGES_PRIMARY" ON "METADATALANGUAGES" ("LANGUAGECODE");
--
-- MIS_LIVELINK_LOAD_LC_INDEX1
--
  CREATE INDEX "MIS_LIVELINK_LOAD_LC_INDEX1" ON "MIS_LIVELINK_LOAD_LC" ("FILE_NUMBER","REGION_ID");
--
-- MIS_LIVELINK_PO_IDX01
--
  CREATE INDEX "MIS_LIVELINK_PO_IDX01" ON "MIS_LIVELINK_PO" ("ID_NUMBER");
--
-- MIS_LIVELINK_PO_IDX02
--
  CREATE INDEX "MIS_LIVELINK_PO_IDX02" ON "MIS_LIVELINK_PO" ("FILE_NUMBER");
--
-- NGD_NEWITEMHIST_INDEX1
--
  CREATE INDEX "NGD_NEWITEMHIST_INDEX1" ON "NGD_NEWITEMHIST" ("DATAID","USERID");
--
-- NGDKINI_PRIMARY
--
  CREATE UNIQUE INDEX "NGDKINI_PRIMARY" ON "NGD_KINI" ("INISECTION","INIKEYWORD");
--
-- NICKNAME_LOWERCASENAME
--
  CREATE INDEX "NICKNAME_LOWERCASENAME" ON "NICKNAME" ("LOWERCASENICKNAME","DOMAIN");
--
-- NICKNAME_NAME
--
  CREATE INDEX "NICKNAME_NAME" ON "NICKNAME" ("NICKNAME","DOMAIN");
--
-- NICKNAME_PRIMARY
--
  CREATE UNIQUE INDEX "NICKNAME_PRIMARY" ON "NICKNAME" ("ID");
--
-- NODEDATES
--
  CREATE INDEX "NODEDATES" ON "PHYSITEMDATA" ("NODEID","FROMDATE","TODATE");
--
-- NOTIFYEVENTS_IDENTIFICATION
--
  CREATE INDEX "NOTIFYEVENTS_IDENTIFICATION" ON "NOTIFYEVENTS" ("EVENTID","EVENTINT1","EVENTINT2","EVENTINT3","EVENTINT4");
--
-- NOTIFYEVENTS_PRIMARY
--
  CREATE UNIQUE INDEX "NOTIFYEVENTS_PRIMARY" ON "NOTIFYEVENTS" ("EVENTSEQNO");
--
-- NOTIFYINTERESTS2_INDEX1
--
  CREATE INDEX "NOTIFYINTERESTS2_INDEX1" ON "NOTIFYINTERESTS2" ("NODEID");
--
-- NOTIFYINTERESTS2_PRIMARY
--
  CREATE UNIQUE INDEX "NOTIFYINTERESTS2_PRIMARY" ON "NOTIFYINTERESTS2" ("USERID","NODEID","INTERESTLEVEL");
--
-- NOTIFYMESSAGES_INDEX1
--
  CREATE INDEX "NOTIFYMESSAGES_INDEX1" ON "NOTIFYMESSAGES" ("EVENTDATE");
--
-- NOTIFYMESSAGES_INDEX2
--
  CREATE UNIQUE INDEX "NOTIFYMESSAGES_INDEX2" ON "NOTIFYMESSAGES" ("MESSAGESEQNO");
--
-- NOTIFYMESSAGES_PRIMARY
--
  CREATE INDEX "NOTIFYMESSAGES_PRIMARY" ON "NOTIFYMESSAGES" ("USERID","INTERESTLEVEL","MESSAGESEQNO");
--
-- OI_STATUS_PRIMARY
--
  CREATE UNIQUE INDEX "OI_STATUS_PRIMARY" ON "OI_STATUS" ("ID");
--
-- OLDPASSWORDS_USERID
--
  CREATE INDEX "OLDPASSWORDS_USERID" ON "OLDPASSWORDS" ("USERID");
--
-- OTCUSTOMPROPERTIES_PRIMARY
--
  CREATE UNIQUE INDEX "OTCUSTOMPROPERTIES_PRIMARY" ON "OTEMAILCUSTOMPROPERTIES" ("NODEID","PROPERTYNAME");
--
-- OTEMAILBODIES_INDEX1
--
  CREATE INDEX "OTEMAILBODIES_INDEX1" ON "OTEMAILBODIES" ("NODEID");
--
-- OTEMAILCONVERSATIONIDS_CONVID
--
  CREATE INDEX "OTEMAILCONVERSATIONIDS_CONVID" ON "OTEMAILCONVERSATIONIDS" ("CONVERSATIONID");
--
-- OTEMAILCONVERSATIONIDS_NODEID
--
  CREATE UNIQUE INDEX "OTEMAILCONVERSATIONIDS_NODEID" ON "OTEMAILCONVERSATIONIDS" ("NODEID");
--
-- OTEMAILLOCMSGIDS_PRIMARY
--
  CREATE UNIQUE INDEX "OTEMAILLOCMSGIDS_PRIMARY" ON "OTEMAILLOCATIONMESSAGEIDS" ("NODEID");
--
-- OTEMAILLOCMSGIDS_UNIPERFOLDER
--
  CREATE UNIQUE INDEX "OTEMAILLOCMSGIDS_UNIPERFOLDER" ON "OTEMAILLOCATIONMESSAGEIDS" ("LOCATIONNODEID","MESSAGEID");
--
-- OTEMAILMESSAGEIDS_NODEID
--
  CREATE INDEX "OTEMAILMESSAGEIDS_NODEID" ON "OTEMAILMESSAGEIDS" ("NODEID");
--
-- OTEMAILMESSAGEIDS_UNIQUE
--
  CREATE UNIQUE INDEX "OTEMAILMESSAGEIDS_UNIQUE" ON "OTEMAILMESSAGEIDS" ("MESSAGEID");
--
-- OTEMAILPARTICIPANTS_INDEX1
--
  CREATE INDEX "OTEMAILPARTICIPANTS_INDEX1" ON "OTEMAILPARTICIPANTS" ("NODEID");
--
-- OTPROPERTIES_PRIMARY
--
  CREATE UNIQUE INDEX "OTPROPERTIES_PRIMARY" ON "OTEMAILPROPERTIES" ("NODEID");
--
-- PHYSITEMCO_BOXIDNODEID
--
  CREATE INDEX "PHYSITEMCO_BOXIDNODEID" ON "PHYSITEMCO" ("BOXID","NODEID");
--
-- PHYSITEMCO_INDEX1
--
  CREATE INDEX "PHYSITEMCO_INDEX1" ON "PHYSITEMCO" ("UNIQUEID");
--
-- PHYSITEMCO_INDEX2
--
  CREATE INDEX "PHYSITEMCO_INDEX2" ON "PHYSITEMCO" ("CPARENTID");
--
-- PHYSITEMCO_PRIMARY
--
  CREATE UNIQUE INDEX "PHYSITEMCO_PRIMARY" ON "PHYSITEMCO" ("NODEID","COPYNUMBER");
--
-- PHYSITEMDATA_INDEX2
--
  CREATE INDEX "PHYSITEMDATA_INDEX2" ON "PHYSITEMDATA" ("FACILITY","AREA","BOXLOCATOR");
--
-- PHYSITEMDATA_INDEX3
--
  CREATE INDEX "PHYSITEMDATA_INDEX3" ON "PHYSITEMDATA" ("TRANSFERID");
--
-- PHYSITEMEXT_PRIMARY
--
  CREATE UNIQUE INDEX "PHYSITEMEXT_PRIMARY" ON "PHYSITEMEXT" ("NODEID","FIELDNAME");
--
-- PHYSITEMHISTORY_PRIMARY
--
  CREATE UNIQUE INDEX "PHYSITEMHISTORY_PRIMARY" ON "PHYSITEMHISTORY" ("HID","NODEID");
--
-- PHYSITEMMICRO_PRIMARY
--
  CREATE UNIQUE INDEX "PHYSITEMMICRO_PRIMARY" ON "PHYSITEMMICRO" ("NODEID");
--
-- PHYSITEMREQUEST_PRIMARY
--
  CREATE UNIQUE INDEX "PHYSITEMREQUEST_PRIMARY" ON "PHYSITEMREQUEST" ("REQUESTID");
--
-- PHYSOBJCLIENT_PRIMARY
--
  CREATE UNIQUE INDEX "PHYSOBJCLIENT_PRIMARY" ON "PHYSOBJCLIENT" ("PHYSOBJCLIENT");
--
-- PHYSOBJLOCATION_PRIMARY
--
  CREATE UNIQUE INDEX "PHYSOBJLOCATION_PRIMARY" ON "PHYSOBJLOCATION" ("PHYSOBJLOCATION");
--
-- PK_KMUTEX
--
  CREATE UNIQUE INDEX "PK_KMUTEX" ON "KMUTEX" ("SECTION");
--
-- PK_WIKILINKS
--
  CREATE UNIQUE INDEX "PK_WIKILINKS" ON "WIKILINKS" ("CONTAINERID","SOURCEID","TARGETID");
--
-- PK_WIKIREDIRECTS
--
  CREATE UNIQUE INDEX "PK_WIKIREDIRECTS" ON "WIKIREDIRECTS" ("CONTAINERID","ID","PREVIOUSNAME");
--
-- POKINI_PRIMARY
--
  CREATE UNIQUE INDEX "POKINI_PRIMARY" ON "PHYSOBJKINI" ("INISECTION","INIKEYWORD");
--
-- PROCESSSTATSENDDATE
--
  CREATE INDEX "PROCESSSTATSENDDATE" ON "PROCESSSTATS" ("ENDDATE");
--
-- PROJECTOVERVIEWSETTINGS_ID
--
  CREATE UNIQUE INDEX "PROJECTOVERVIEWSETTINGS_ID" ON "PROJECTOVERVIEWSETTINGS" ("ID");
--
-- PROVENANCETYPE_PRIMARY
--
  CREATE UNIQUE INDEX "PROVENANCETYPE_PRIMARY" ON "PROVENANCETYPE" ("PROVENANCETYPE");
--
-- PROVIDERCONFIRMMOVE_2
--
  CREATE INDEX "PROVIDERCONFIRMMOVE_2" ON "PROVIDERCONFIRMMOVE" ("ENTRYTYPE","NODEID","VERSIONID","VERSIONTYPE","NEWPROVIDERID");
--
-- PROVIDERCONFIRMMOVE_PRIMARY
--
  CREATE INDEX "PROVIDERCONFIRMMOVE_PRIMARY" ON "PROVIDERCONFIRMMOVE" ("RETRYID");
--
-- PROVIDERDATA_IDX1
--
  CREATE INDEX "PROVIDERDATA_IDX1" ON "PROVIDERDATA" ("PROVIDERTYPE","PROVIDERID");
--
-- PROVIDERDATA_PRIMARY
--
  CREATE UNIQUE INDEX "PROVIDERDATA_PRIMARY" ON "PROVIDERDATA" ("PROVIDERID");
--
-- PROVIDERDATA_PROVIDERTYPE
--
  CREATE INDEX "PROVIDERDATA_PROVIDERTYPE" ON "PROVIDERDATA" ("PROVIDERTYPE");
--
-- PROVIDERRETRY_PRIMARY
--
  CREATE INDEX "PROVIDERRETRY_PRIMARY" ON "PROVIDERRETRY" ("RETRYID");
--
-- PROVIDERRETRY_SECONDARY
--
  CREATE INDEX "PROVIDERRETRY_SECONDARY" ON "PROVIDERRETRY" ("HASHSTR","ENTRYTYPE");
--
-- RECD_DTREE_INDEX1
--
  CREATE INDEX "RECD_DTREE_INDEX1" ON "DTREECORE" ("CREATEDATE","DATAID");
--
-- RECD_HOTINDEX
--
  CREATE INDEX "RECD_HOTINDEX" ON "RECD_HOT" ("ORDERIDEN","SECTIONID","SUBTYPE","DATAID");
--
-- RECD_OPERATIONTRACKING_DATAID
--
  CREATE INDEX "RECD_OPERATIONTRACKING_DATAID" ON "RECD_OPERATIONTRACKING" ("DATAID");
--
-- RECD_OPERATIONTRACKING_DATE
--
  CREATE INDEX "RECD_OPERATIONTRACKING_DATE" ON "RECD_OPERATIONTRACKING" ("OPERATIONDATE");
--
-- RECD_OPERATIONTRACKINGINDEX
--
  CREATE INDEX "RECD_OPERATIONTRACKINGINDEX" ON "RECD_OPERATIONTRACKING" ("OPERATIONIDEN");
--
-- RECD_OPINIONSUMMARYPRIMARY
--
  CREATE UNIQUE INDEX "RECD_OPINIONSUMMARYPRIMARY" ON "RECD_OPINIONSUMMARY" ("DATAID");
--
-- RECD_OPINIONSUMMARYSECONDARY
--
  CREATE INDEX "RECD_OPINIONSUMMARYSECONDARY" ON "RECD_OPINIONSUMMARY" ("RATINGAVG","DATAID","RATINGNUM");
--
-- RECD_OPINIONTRACKINGDATE
--
  CREATE INDEX "RECD_OPINIONTRACKINGDATE" ON "RECD_OPINIONTRACKING" ("OPINIONDATE" DESC);
--
-- RECD_OPINIONTRACKINGINDEX
--
  CREATE INDEX "RECD_OPINIONTRACKINGINDEX" ON "RECD_OPINIONTRACKING" ("DATAID");
--
-- RECURRENCE_PRIMARY
--
  CREATE UNIQUE INDEX "RECURRENCE_PRIMARY" ON "RECURRENCE" ("RECURRENCE");
--
-- REFRATE_PRIMARY
--
  CREATE UNIQUE INDEX "REFRATE_PRIMARY" ON "REFRATE" ("REFRATE");
--
-- REGIONMAP_DISPLAYABLE
--
  CREATE INDEX "REGIONMAP_DISPLAYABLE" ON "REGIONMAP" ("DISPLAYABLE");
--
-- REGIONMAP_FACET
--
  CREATE INDEX "REGIONMAP_FACET" ON "REGIONMAP" ("FACET");
--
-- REGIONMAP_QUERYABLE
--
  CREATE INDEX "REGIONMAP_QUERYABLE" ON "REGIONMAP" ("QUERYABLE");
--
-- REGIONMAP_SEARCHBYDEFAULT
--
  CREATE INDEX "REGIONMAP_SEARCHBYDEFAULT" ON "REGIONMAP" ("SEARCHBYDEFAULT");
--
-- REGIONMAP_SORTABLE
--
  CREATE INDEX "REGIONMAP_SORTABLE" ON "REGIONMAP" ("SORTABLE");
--
-- RENDITIONFOLDERS_PRIMARY
--
  CREATE UNIQUE INDEX "RENDITIONFOLDERS_PRIMARY" ON "RENDITIONFOLDERS" ("FOLDERID");
--
-- RENDITIONMIMETYPERULES_PRIMARY
--
  CREATE UNIQUE INDEX "RENDITIONMIMETYPERULES_PRIMARY" ON "RENDITIONMIMETYPERULES" ("MIMETYPERULEID");
--
-- RENDITIONNODEMIMETYPERULES_1
--
  CREATE UNIQUE INDEX "RENDITIONNODEMIMETYPERULES_1" ON "RENDITIONNODEMIMETYPERULES" ("NODERULEID","MIMETYPERULEID");
--
-- RENDITIONNODEMIMETYPERULES_2
--
  CREATE INDEX "RENDITIONNODEMIMETYPERULES_2" ON "RENDITIONNODEMIMETYPERULES" ("MIMETYPERULEID");
--
-- RENDITIONNODERULES_DATAID
--
  CREATE INDEX "RENDITIONNODERULES_DATAID" ON "RENDITIONNODERULES" ("DATAID");
--
-- RENDITIONNODERULES_PRIMARY
--
  CREATE UNIQUE INDEX "RENDITIONNODERULES_PRIMARY" ON "RENDITIONNODERULES" ("NODERULEID");
--
-- RENDITIONQUEUE_2
--
  CREATE INDEX "RENDITIONQUEUE_2" ON "RENDITIONQUEUE" ("DATAID","VERSIONNUM","ATTEMPT");
--
-- RENDITIONQUEUE_3
--
  CREATE INDEX "RENDITIONQUEUE_3" ON "RENDITIONQUEUE" ("NODERULEID");
--
-- RENDITIONQUEUE_PRIMARY
--
  CREATE UNIQUE INDEX "RENDITIONQUEUE_PRIMARY" ON "RENDITIONQUEUE" ("VERSIONSEQNO");
--
-- REQUESTTYPE_PRIMARY
--
  CREATE UNIQUE INDEX "REQUESTTYPE_PRIMARY" ON "REQUESTTYPE" ("REQUESTTYPE");
--
-- RETENTIONUPDATELOG_IERRID
--
  CREATE INDEX "RETENTIONUPDATELOG_IERRID" ON "RETENTIONUPDATELOG" ("ERRORID");
--
-- RETENTIONUPDATELOG_INODEID
--
  CREATE INDEX "RETENTIONUPDATELOG_INODEID" ON "RETENTIONUPDATELOG" ("NODEID");
--
-- RETENTIONUPDATELOG_ITIME
--
  CREATE INDEX "RETENTIONUPDATELOG_ITIME" ON "RETENTIONUPDATELOG" ("EXECTIME");
--
-- RETENTIONUPDATERETRY_INODEID
--
  CREATE INDEX "RETENTIONUPDATERETRY_INODEID" ON "RETENTIONUPDATERETRY" ("NODEID");
--
-- RIMSNODECLASSIFICATION_INDEX1
--
  CREATE INDEX "RIMSNODECLASSIFICATION_INDEX1" ON "RIMSNODECLASSIFICATION" ("CLASSID");
--
-- RIMSNODECLASSIFICATION_INDEX2
--
  CREATE INDEX "RIMSNODECLASSIFICATION_INDEX2" ON "RIMSNODECLASSIFICATION" ("RIMSRSI");
--
-- RIMSNODECLASSIFICATION_INDEX3
--
  CREATE INDEX "RIMSNODECLASSIFICATION_INDEX3" ON "RIMSNODECLASSIFICATION" ("RIMSACCESSION");
--
-- RIMSNODECLASSIFICATION_PRIMARY
--
  CREATE UNIQUE INDEX "RIMSNODECLASSIFICATION_PRIMARY" ON "RIMSNODECLASSIFICATION" ("NODEID");
--
-- RM_CLASSIFICATION_PRIMARY
--
  CREATE UNIQUE INDEX "RM_CLASSIFICATION_PRIMARY" ON "RM_CLASSIFICATION" ("NODEID");
--
-- RM_DELETEAUDIT_DATAID
--
  CREATE INDEX "RM_DELETEAUDIT_DATAID" ON "RM_DELETEAUDIT" ("DATAID");
--
-- RM_DELETEAUDIT_DISP
--
  CREATE INDEX "RM_DELETEAUDIT_DISP" ON "RM_DELETEAUDIT" ("DISPNODEID","QDATE");
--
-- RM_DELETEAUDIT_PRIMARY
--
  CREATE UNIQUE INDEX "RM_DELETEAUDIT_PRIMARY" ON "RM_DELETEAUDIT" ("DATAID","VERSIONNUM");
--
-- RM_DELETEAUDITMETADATA_PRIMARY
--
  CREATE INDEX "RM_DELETEAUDITMETADATA_PRIMARY" ON "RM_DELETEAUDITMETADATA" ("DATAID","VERSIONNUM");
--
-- RM_DISPACTIONERRORS_PRIMARY
--
  CREATE INDEX "RM_DISPACTIONERRORS_PRIMARY" ON "RM_DISPOSITIONACTIONERRORS" ("DISPNODEID","QDATE");
--
-- RM_DISPOSITIONS_INDEX1
--
  CREATE INDEX "RM_DISPOSITIONS_INDEX1" ON "RM_DISPOSITIONS" ("RSI");
--
-- RM_DISPOSITIONS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_DISPOSITIONS_PRIMARY" ON "RM_DISPOSITIONS" ("DISPNODEID");
--
-- RM_DISPREJECTS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_DISPREJECTS_PRIMARY" ON "RM_DISPREJECTS" ("DISPNODEID","NODEID","QDATE");
--
-- RM_DISPRESULTS_DISPNODEID
--
  CREATE INDEX "RM_DISPRESULTS_DISPNODEID" ON "RM_DISPRESULTS" ("DISPNODEID");
--
-- RM_DISPRESULTS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_DISPRESULTS_PRIMARY" ON "RM_DISPRESULTS" ("NODEID","DISPNODEID","CLASSID","QDATE","STAGECOUNT");
--
-- RM_DISPRESULTS_QDATE
--
  CREATE INDEX "RM_DISPRESULTS_QDATE" ON "RM_DISPRESULTS" ("QDATE");
--
-- RM_DISPREVIEWCOMMENTS_PRIMARY
--
  CREATE INDEX "RM_DISPREVIEWCOMMENTS_PRIMARY" ON "RM_DISPREVIEWCOMMENTS" ("DISPNODEID","QDATE");
--
-- RM_DISPREVIEWERS_STATS
--
  CREATE INDEX "RM_DISPREVIEWERS_STATS" ON "RM_DISPREVIEWERS" ("DISPNODEID","QDATE");
--
-- RM_DISPSETTINGS_PRIMARY
--
  CREATE INDEX "RM_DISPSETTINGS_PRIMARY" ON "RM_DISPSETTINGS" ("DISPNODEID","SETTINGKEY");
--
-- RM_DISPSNAPSHOTS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_DISPSNAPSHOTS_PRIMARY" ON "RM_DISPSNAPSHOTS" ("DISPNODEID","QDATE");
--
-- RM_DOCRECTYPE_PRIMARY
--
  CREATE UNIQUE INDEX "RM_DOCRECTYPE_PRIMARY" ON "RM_DOCRECTYPE" ("RECORDTYPEID","DATAID");
--
-- RM_DOCXREF_PRIMARY
--
  CREATE UNIQUE INDEX "RM_DOCXREF_PRIMARY" ON "RM_DOCXREF" ("DATAID","DOCXREFTYP","XDATAID");
--
-- RM_DOCXREF_XDATAID
--
  CREATE INDEX "RM_DOCXREF_XDATAID" ON "RM_DOCXREF" ("XDATAID","DOCXREFTYP","DATAID");
--
-- RM_FIXEDRET_PRIMARY
--
  CREATE UNIQUE INDEX "RM_FIXEDRET_PRIMARY" ON "RM_FIXEDRET" ("NODEID");
--
-- RM_FUNCTIONS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_FUNCTIONS_PRIMARY" ON "RM_FUNCTIONS" ("FUNCID");
--
-- RM_HOLDQUERY_PRIMARY
--
  CREATE UNIQUE INDEX "RM_HOLDQUERY_PRIMARY" ON "RM_HOLDQUERY" ("HOLDID","QUERYID");
--
-- RM_HOLDQUERYHISTORY_PRIMARY
--
  CREATE UNIQUE INDEX "RM_HOLDQUERYHISTORY_PRIMARY" ON "RM_HOLDQUERYHISTORY" ("EVENTID");
--
-- RM_LINKRR_PRIMARY
--
  CREATE UNIQUE INDEX "RM_LINKRR_PRIMARY" ON "RM_LINKRR" ("RRCODE");
--
-- RM_LINKRS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_LINKRS_PRIMARY" ON "RM_LINKRS" ("RSCODE");
--
-- RM_MULTICLASS_NODEID
--
  CREATE INDEX "RM_MULTICLASS_NODEID" ON "RM_MULTICLASS" ("NODEID");
--
-- RM_MULTICLASS_PERF
--
  CREATE INDEX "RM_MULTICLASS_PERF" ON "RM_MULTICLASS" ("RSI","NODEID","CLASSID");
--
-- RM_MULTICLASS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_MULTICLASS_PRIMARY" ON "RM_MULTICLASS" ("NODEID","CLASSID");
--
-- RM_OBJECTHOLD_ACTIVE
--
  CREATE INDEX "RM_OBJECTHOLD_ACTIVE" ON "RM_OBJECTHOLD" ("ACTIVEHOLD");
--
-- RM_OBJECTHOLD_HOLD
--
  CREATE INDEX "RM_OBJECTHOLD_HOLD" ON "RM_OBJECTHOLD" ("HOLDID");
--
-- RM_OBJECTHOLD_HOLDUSER
--
  CREATE INDEX "RM_OBJECTHOLD_HOLDUSER" ON "RM_OBJECTHOLD" ("HOLDID","USERID");
--
-- RM_OBJECTHOLD_NODE
--
  CREATE INDEX "RM_OBJECTHOLD_NODE" ON "RM_OBJECTHOLD" ("NODEID","ACTIVEHOLD");
--
-- RM_OBJECTHOLD_PRIMARY
--
  CREATE UNIQUE INDEX "RM_OBJECTHOLD_PRIMARY" ON "RM_OBJECTHOLD" ("HOLDID","NODEID","USERID","DOCXREFTYP","QUERYID");
--
-- RM_PARTRECORDS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_PARTRECORDS_PRIMARY" ON "RM_PARTRECORDS" ("DATAID","PARTID");
--
-- RM_PICKLIST_PRIMARY
--
  CREATE UNIQUE INDEX "RM_PICKLIST_PRIMARY" ON "RM_PICKLIST" ("USERID","CLASSID","CREATEDATE");
--
-- RM_PROVENANCE_PRIMARY
--
  CREATE UNIQUE INDEX "RM_PROVENANCE_PRIMARY" ON "RM_PROVENANCE" ("NODEID");
--
-- RM_PROVENANCEHISTORY_PRIMARY
--
  CREATE UNIQUE INDEX "RM_PROVENANCEHISTORY_PRIMARY" ON "RM_PROVENANCEHISTORY" ("NODEID","EDITDATE","EDITPATRON");
--
-- RM_QUEUE_PRIMARY
--
  CREATE UNIQUE INDEX "RM_QUEUE_PRIMARY" ON "RM_QUEUE" ("QKEY","QNODEID","QDATE");
--
-- RM_RECORDSMANAGERS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_RECORDSMANAGERS_PRIMARY" ON "RM_RECORDSMANAGERS" ("GROUPID","RECMANGRID");
--
-- RM_RECORDSOFFICERS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_RECORDSOFFICERS_PRIMARY" ON "RM_RECORDSOFFICERS" ("GROUPID","RECOFFID");
--
-- RM_RECORDTYPEDATA_PRIMARY
--
  CREATE UNIQUE INDEX "RM_RECORDTYPEDATA_PRIMARY" ON "RM_RECORDTYPEDATA" ("RECORDTYPEID");
--
-- RM_RMDISPRESULTSVERS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_RMDISPRESULTSVERS_PRIMARY" ON "RM_DISPRESULTSVERS" ("DISPNODEID","NODEID","QDATE","VERSIONID");
--
-- RM_STATS_PRIMARY
--
  CREATE UNIQUE INDEX "RM_STATS_PRIMARY" ON "RM_STATS" ("TYPE","DATAID","USERGROUPID","SERVERTHREAD","VALUEKEY","VALUEKEY1");
--
-- RM_STATUSACL_PRIMARY
--
  CREATE UNIQUE INDEX "RM_STATUSACL_PRIMARY" ON "RM_STATUSACL" ("STATUS","RIGHTID");
--
-- RM_TEMPDATA_DISP
--
  CREATE INDEX "RM_TEMPDATA_DISP" ON "RM_TEMPDATA" ("TEMPKEY","USERID","TDATE","NODEID");
--
-- RM_TEMPDATA_INDEX1
--
  CREATE INDEX "RM_TEMPDATA_INDEX1" ON "RM_TEMPDATA" ("TEMPKEY","NODEID","USERID");
--
-- RM_TEMPDATA_NODEID
--
  CREATE INDEX "RM_TEMPDATA_NODEID" ON "RM_TEMPDATA" ("NODEID");
--
-- RM_TEMPDATA_TDATE
--
  CREATE INDEX "RM_TEMPDATA_TDATE" ON "RM_TEMPDATA" ("TDATE","TEMPKEY");
--
-- RM_TEMPDATA_VALUE1
--
  CREATE INDEX "RM_TEMPDATA_VALUE1" ON "RM_TEMPDATA" ("VALUE1");
--
-- RM_USERAUDIT_PRIMARY
--
  CREATE INDEX "RM_USERAUDIT_PRIMARY" ON "RM_USERAUDIT" ("AUDITID","DATAID","USERID");
--
-- RM_USERHOLD_PRIMARY
--
  CREATE UNIQUE INDEX "RM_USERHOLD_PRIMARY" ON "RM_USERHOLD" ("USERID","HOLDID");
--
-- RM_USERHOLDCRITERIA_PRIMARY
--
  CREATE UNIQUE INDEX "RM_USERHOLDCRITERIA_PRIMARY" ON "RM_USERHOLDCRITERIA" ("HOLDID");
--
-- RMKINI_PRIMARY
--
  CREATE UNIQUE INDEX "RMKINI_PRIMARY" ON "RM_KINI" ("INISECTION","INIKEYWORD");
--
-- RMSEC_CLEARANCE_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_CLEARANCE_PRIMARY" ON "RMSEC_CLEARANCE" ("USERID","CLEARANCE");
--
-- RMSEC_DEFINEDRULES_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_DEFINEDRULES_PRIMARY" ON "RMSEC_DEFINEDRULES" ("RULEID");
--
-- RMSEC_DEFINEDRULES_RULEDATE
--
  CREATE INDEX "RMSEC_DEFINEDRULES_RULEDATE" ON "RMSEC_DEFINEDRULES" ("RULEDATE");
--
-- RMSEC_DOCCLEARANCE_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_DOCCLEARANCE_PRIMARY" ON "RMSEC_DOCCLEARANCE" ("DATAID","CURRENTSECURITY");
--
-- RMSEC_DOCOPTIONS_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_DOCOPTIONS_PRIMARY" ON "RMSEC_DOCOPTIONS" ("DATAID");
--
-- RMSEC_DOCSUPPMARK_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_DOCSUPPMARK_PRIMARY" ON "RMSEC_DOCSUPPMARK" ("DATAID","SUPPMARK");
--
-- RMSEC_SECURITY_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_SECURITY_PRIMARY" ON "RMSEC_SECURITY" ("SECURITYLEVEL");
--
-- RMSEC_SECURITYGUIDE_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_SECURITYGUIDE_PRIMARY" ON "RMSEC_SECURITYGUIDE" ("SECURITYGUIDEID");
--
-- RMSEC_SESSIONCODE_INDEX1
--
  CREATE UNIQUE INDEX "RMSEC_SESSIONCODE_INDEX1" ON "RMSEC_SESSIONCODE" ("SESSIONCODE");
--
-- RMSEC_SESSIONMARKING_INDEX1
--
  CREATE UNIQUE INDEX "RMSEC_SESSIONMARKING_INDEX1" ON "RMSEC_SESSIONMARKING" ("SESSIONCODE","SUPPMARK");
--
-- RMSEC_STATS_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_STATS_PRIMARY" ON "RMSEC_STATS" ("TYPE","DATAID","USERGROUPID","SERVERTHREAD","VALUEKEY","VALUEKEY1","RUNDATE");
--
-- RMSEC_SUPPMARK_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_SUPPMARK_PRIMARY" ON "RMSEC_SUPPMARK" ("SUPPMARK");
--
-- RMSEC_TEMPDATA_INDEX1
--
  CREATE INDEX "RMSEC_TEMPDATA_INDEX1" ON "RMSEC_TEMPDATA" ("TEMPKEY","NODEID","USERID");
--
-- RMSEC_USERSUPPMARKS_PRIMARY
--
  CREATE UNIQUE INDEX "RMSEC_USERSUPPMARKS_PRIMARY" ON "RMSEC_USERSUPPMARKS" ("USERID","SUPPMARK");
--
-- RSIAPPROVAL_PRIMARY
--
  CREATE UNIQUE INDEX "RSIAPPROVAL_PRIMARY" ON "RSIAPPROVAL" ("RSI","RSISCHEDULEID","APPROVALEDITDATE");
--
-- RSIAPPROVALHISTORY_PRIMARY
--
  CREATE UNIQUE INDEX "RSIAPPROVALHISTORY_PRIMARY" ON "RSIAPPROVALHISTORY" ("RSI","RSISCHEDULEID","APPROVALEDITDATE");
--
-- SEARCHSTATS_COMPONENT_PURGE
--
  CREATE INDEX "SEARCHSTATS_COMPONENT_PURGE" ON "SEARCHSTATS_COMPONENT" ("QUERYNR");
--
-- SEARCHSTATS_QUERY_HASH
--
  CREATE INDEX "SEARCHSTATS_QUERY_HASH" ON "SEARCHSTATS_QUERY" ("QUERYHASH");
--
-- SEARCHSTATS_QUERY_HASH_GEN
--
  CREATE INDEX "SEARCHSTATS_QUERY_HASH_GEN" ON "SEARCHSTATS_QUERY" ("QUERYHASHGENERAL");
--
-- SEARCHSTATS_QUERY_PRIMARY
--
  CREATE UNIQUE INDEX "SEARCHSTATS_QUERY_PRIMARY" ON "SEARCHSTATS_QUERY" ("QUERYNR");
--
-- SEARCHSTATS_QUERY_TIME
--
  CREATE INDEX "SEARCHSTATS_QUERY_TIME" ON "SEARCHSTATS_QUERY" ("QUERYTIME");
--
-- SEARCHSTATS_QUERY_TIME_INMS
--
  CREATE INDEX "SEARCHSTATS_QUERY_TIME_INMS" ON "SEARCHSTATS_QUERY" ("QUERYTIMEINMS");
--
-- SEARCHSTATS_SLICE_PURGE
--
  CREATE INDEX "SEARCHSTATS_SLICE_PURGE" ON "SEARCHSTATS_SLICE" ("QUERYNR");
--
-- SEARCHSTATS_STOPCONDITIONS_QNR
--
  CREATE UNIQUE INDEX "SEARCHSTATS_STOPCONDITIONS_QNR" ON "SEARCHSTATS_STOPCONDITIONS" ("QUERYNR");
--
-- SEARCHSTATS_STOPCONDITIONS_ST
--
  CREATE INDEX "SEARCHSTATS_STOPCONDITIONS_ST" ON "SEARCHSTATS_STOPCONDITIONS" ("STOPTIME");
--
-- SEARCHSTATS_TERMS_PURGE
--
  CREATE INDEX "SEARCHSTATS_TERMS_PURGE" ON "SEARCHSTATS_TERMS" ("QUERYNR");
--
-- SEARCHSTATS_TERMS_SEARCH
--
  CREATE INDEX "SEARCHSTATS_TERMS_SEARCH" ON "SEARCHSTATS_TERMS" ("TERMLOWER");
--
-- SOCPENBRM_ACC_NO_INDEX
--
  CREATE INDEX "SOCPENBRM_ACC_NO_INDEX" ON "SOCPENBRM" ("ACCOUNT_NO");
--
-- SOCPENBRM_ARCHIVE_INDX01
--
  CREATE INDEX "SOCPENBRM_ARCHIVE_INDX01" ON "SOCPENBRM_ARCHIVE" ("PENSION_NO");
--
-- SOCPENBRM_BRNCH_INDEX
--
  CREATE INDEX "SOCPENBRM_BRNCH_INDEX" ON "SOCPENBRM" ("BRANCH");
--
-- SOCPENBRM_OLD_ID1_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID1_INDEX" ON "SOCPENBRM" ("OLD_ID1");
--
-- SOCPENBRM_OLD_ID10_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID10_INDEX" ON "SOCPENBRM" ("OLD_ID10");
--
-- SOCPENBRM_OLD_ID2_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID2_INDEX" ON "SOCPENBRM" ("OLD_ID2");
--
-- SOCPENBRM_OLD_ID3_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID3_INDEX" ON "SOCPENBRM" ("OLD_ID3");
--
-- SOCPENBRM_OLD_ID4_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID4_INDEX" ON "SOCPENBRM" ("OLD_ID4");
--
-- SOCPENBRM_OLD_ID5_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID5_INDEX" ON "SOCPENBRM" ("OLD_ID5");
--
-- SOCPENBRM_OLD_ID6_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID6_INDEX" ON "SOCPENBRM" ("OLD_ID6");
--
-- SOCPENBRM_OLD_ID7_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID7_INDEX" ON "SOCPENBRM" ("OLD_ID7");
--
-- SOCPENBRM_OLD_ID8_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID8_INDEX" ON "SOCPENBRM" ("OLD_ID8");
--
-- SOCPENBRM_OLD_ID9_INDEX
--
  CREATE INDEX "SOCPENBRM_OLD_ID9_INDEX" ON "SOCPENBRM" ("OLD_ID9");
--
-- SOCPENBRM_PAYPNT_INDEX
--
  CREATE INDEX "SOCPENBRM_PAYPNT_INDEX" ON "SOCPENBRM" ("PAYPOINT");
--
-- SOCPENID_CHILD_IX01
--
  CREATE INDEX "SOCPENID_CHILD_IX01" ON "XSOCPENID_CHILD" ("CHILD_ID_NUMBER");
--
-- SOCPENID_CHILD_IX02
--
  CREATE INDEX "SOCPENID_CHILD_IX02" ON "XSOCPENID_CHILD" ("OLD_ID");
--
-- SOCPENIDTEMP_IX01
--
  CREATE INDEX "SOCPENIDTEMP_IX01" ON "SOCPENIDTEMP" ("PENSION-NO");
--
-- SPCJOB_PRIMARY
--
  CREATE UNIQUE INDEX "SPCJOB_PRIMARY" ON "SPCJOB" ("DATAID");
--
-- SPCREQUEST_PRIMARY
--
  CREATE UNIQUE INDEX "SPCREQUEST_PRIMARY" ON "SPCREQUEST" ("DATAID","SPC_REQUESTTYPE");
--
-- SPCSCHEDULE_PRIMARY
--
  CREATE UNIQUE INDEX "SPCSCHEDULE_PRIMARY" ON "SPCSCHEDULE" ("DATAID","SPC_DAY","SPC_TIME","SPC_DURATION");
--
-- SPCSTATISTICS_PRIMARY
--
  CREATE UNIQUE INDEX "SPCSTATISTICS_PRIMARY" ON "SPCSTATISTICS" ("DATAID","SPC_STAT_RUNSTATE","SPC_STAT_STARTDATE");
--
-- SS_APPLICATION_INDEX04
--
  CREATE INDEX "SS_APPLICATION_INDEX04" ON "SS_APPLICATION" ("DISTRICT_OFFICE");
--
-- SS_APPLICATION_INDEX06
--
  CREATE INDEX "SS_APPLICATION_INDEX06" ON "SS_APPLICATION" ("BOX_TYPE");
--
-- STORAGELOCATOR_PRIMARY
--
  CREATE UNIQUE INDEX "STORAGELOCATOR_PRIMARY" ON "STORAGELOCATOR" ("FACILITY","AREA","BOXLOCATOR");
--
-- SUGGESTWORDS_1
--
  CREATE UNIQUE INDEX "SUGGESTWORDS_1" ON "DSUGGESTWORDS" ("TYPE","NAMESPACE","TOKEN");
--
-- SUGGESTWORDSHASH_1
--
  CREATE UNIQUE INDEX "SUGGESTWORDSHASH_1" ON "DSUGGESTWORDSHASH" ("HASH","ID");
--
-- SUGGESTWORDSHASH_2
--
  CREATE INDEX "SUGGESTWORDSHASH_2" ON "DSUGGESTWORDSHASH" ("ID");
--
-- SYSTEMLANGUAGES_PRIMARY
--
  CREATE UNIQUE INDEX "SYSTEMLANGUAGES_PRIMARY" ON "SYSTEMLANGUAGES" ("LANGUAGECODE");
--
-- TDW_FILE_LOCATION_INDX01
--
  CREATE INDEX "TDW_FILE_LOCATION_INDX01" ON "TDW_FILE_LOCATION" ("DESCRIPTION");
--
-- TDW_FILE_LOCATION_INDX02
--
  CREATE INDEX "TDW_FILE_LOCATION_INDX02" ON "TDW_FILE_LOCATION" ("REGION");
--
-- TDW_FILE_LOCATION_INDX03
--
  CREATE INDEX "TDW_FILE_LOCATION_INDX03" ON "TDW_FILE_LOCATION" ("CONTAINER_CODE");
--
-- TDW_FILE_LOCATION_INDX04
--
  CREATE INDEX "TDW_FILE_LOCATION_INDX04" ON "TDW_FILE_LOCATION" ("CONTAINER_ALTCODE");
--
-- TDW_FILE_LOCATION_INDX05
--
  CREATE INDEX "TDW_FILE_LOCATION_INDX05" ON "TDW_FILE_LOCATION" ("FILEFOLDER_CODE");
--
-- TDW_FILE_LOCATION_INDX06
--
  CREATE INDEX "TDW_FILE_LOCATION_INDX06" ON "TDW_FILE_LOCATION" ("FILEFOLDER_ALTCODE");
--
-- TDW_FILE_LOCATION_INDX07
--
  CREATE INDEX "TDW_FILE_LOCATION_INDX07" ON "TDW_FILE_LOCATION" ("GRANT_TYPE");
--
-- TESTTABLE_INDEX1
--
  CREATE INDEX "TESTTABLE_INDEX1" ON "TESTTABLE" ("VOLUMEID","DATAID","VERSIONNUM","SEQ");
--
-- TRANSFERS_PRIMARY
--
  CREATE UNIQUE INDEX "TRANSFERS_PRIMARY" ON "TRANSFERS" ("TRANSFERID");
--
-- UK_DDELETEDITEMSNODES
--
  CREATE UNIQUE INDEX "UK_DDELETEDITEMSNODES" ON "DDELETEDITEMSNODES" ("DATAID");
--
-- USERNICKNAME_PRIMARY
--
  CREATE UNIQUE INDEX "USERNICKNAME_PRIMARY" ON "USERNICKNAME" ("USERID","NICKNAME");
--
-- USERTABRIGHTS_RIGHTID
--
  CREATE INDEX "USERTABRIGHTS_RIGHTID" ON "USERTABRIGHTS" ("RIGHTID");
--
-- WDATA_INDEX1
--
  CREATE INDEX "WDATA_INDEX1" ON "WDATA" ("DATA_WORKID","DATA_SUBWORKID");
--
-- WDATA_PRIMARY
--
  CREATE UNIQUE INDEX "WDATA_PRIMARY" ON "WDATA" ("DATA_WORKID","DATA_SUBWORKID","DATA_TYPE","DATA_SUBTYPE");
--
-- WEBEDITLOCK_GC
--
  CREATE INDEX "WEBEDITLOCK_GC" ON "WEBEDITLOCK" ("ANCHORNID");
--
-- WEBEDITLOCK_XP
--
  CREATE INDEX "WEBEDITLOCK_XP" ON "WEBEDITLOCK" ("EXPIRYDATE");
--
-- WEBNODESDISPLAY_PRIMARY
--
  CREATE UNIQUE INDEX "WEBNODESDISPLAY_PRIMARY" ON "WEBNODESDISPLAY" ("DATAID");
--
-- WEBNODESMETA_EN_ZA_DATAID
--
  CREATE INDEX "WEBNODESMETA_EN_ZA_DATAID" ON "WEBNODESMETA_EN_ZA" ("DATAID",NLSSORT("NAME",'nls_sort=''GENERIC_M_AI'''));
--
-- WEBNODESMETA_EN_ZA_NAME
--
  CREATE INDEX "WEBNODESMETA_EN_ZA_NAME" ON "WEBNODESMETA_EN_ZA" (NLSSORT("NAME",'nls_sort=''GENERIC_M_AI'''),"DATAID");
--
-- WEBNODESMETA_EN_ZA_PRIMARY
--
  CREATE UNIQUE INDEX "WEBNODESMETA_EN_ZA_PRIMARY" ON "WEBNODESMETA_EN_ZA" ("DATAID");
--
-- WEBREPORTSTATS_INDEX1
--
  CREATE INDEX "WEBREPORTSTATS_INDEX1" ON "WEBREPORTSTATS" ("DATEFIRSTACTION","USERSTATUS");
--
-- WEBREPORTTRIGGERS_INDEX
--
  CREATE INDEX "WEBREPORTTRIGGERS_INDEX" ON "WEBREPORTTRIGGERS" ("DATAID");
--
-- WEBREPORTTRIGGERS_INDEX2
--
  CREATE INDEX "WEBREPORTTRIGGERS_INDEX2" ON "WEBREPORTTRIGGERS" ("WRID");
--
-- WEBREPORTUGTRIGGERS_INDEX1
--
  CREATE INDEX "WEBREPORTUGTRIGGERS_INDEX1" ON "WEBREPORTUGTRIGGERS" ("UGEVENT");
--
-- WEBREPORTUGTRIGGERS_INDEX2
--
  CREATE INDEX "WEBREPORTUGTRIGGERS_INDEX2" ON "WEBREPORTUGTRIGGERS" ("WRID");
--
-- WEBREPORTUGTRIGGERS_INDEX3
--
  CREATE INDEX "WEBREPORTUGTRIGGERS_INDEX3" ON "WEBREPORTUGTRIGGERS" ("ROWNO");
--
-- WFATTRDATA_ID
--
  CREATE INDEX "WFATTRDATA_ID" ON "WFATTRDATA" ("WF_ID");
--
-- WFATTRDATA_INDEX1
--
  CREATE INDEX "WFATTRDATA_INDEX1" ON "WFATTRDATA" ("WF_ID","WF_ATTRID","WF_ENTRYNUM");
--
-- WFATTRDATAVERSIONS_INDEX1
--
  CREATE INDEX "WFATTRDATAVERSIONS_INDEX1" ON "WFATTRDATAVERSIONS" ("WF_ID","WF_SUBWORKID","WF_TASKID");
--
-- WFATTRDATAVERSIONS_INDEX2
--
  CREATE INDEX "WFATTRDATAVERSIONS_INDEX2" ON "WFATTRDATAVERSIONS" ("WF_ID","WF_SUBWORKID","WF_TASKID","WF_ATTRID","WF_TASKITERNUM","WF_ENTRYNUM");
--
-- WFCOMMENTS_INDEX1
--
  CREATE INDEX "WFCOMMENTS_INDEX1" ON "WFCOMMENTS" ("WF_WORKFLOWID","WF_TASKID");
--
-- WFCOMMENTS_INDEX2
--
  CREATE INDEX "WFCOMMENTS_INDEX2" ON "WFCOMMENTS" ("WF_WORKFLOWID");
--
-- WFCOMMENTS_INDEX3
--
  CREATE INDEX "WFCOMMENTS_INDEX3" ON "WFCOMMENTS" ("WF_WORKFLOWID","WF_TASKID","WF_SEQUENCE");
--
-- WFDISPOSITIONS_INDEX1
--
  CREATE INDEX "WFDISPOSITIONS_INDEX1" ON "WFDISPOSITIONS" ("WF_WORKFLOWID","WF_TASKID");
--
-- WFFORMS_INDEX1
--
  CREATE UNIQUE INDEX "WFFORMS_INDEX1" ON "WFFORMS" ("WF_WORKFLOWID","WF_FORMID");
--
-- WFFORMSLOCK_PRIMARY
--
  CREATE UNIQUE INDEX "WFFORMSLOCK_PRIMARY" ON "WFFORMSLOCK" ("ID");
--
-- WFFORMSVERSIONS_INDEX1
--
  CREATE INDEX "WFFORMSVERSIONS_INDEX1" ON "WFFORMSVERSIONS" ("WF_WORKFLOWID","WF_TASKID");
--
-- WINDEXNOTIFY_PRIMARY
--
  CREATE UNIQUE INDEX "WINDEXNOTIFY_PRIMARY" ON "WINDEXNOTIFY" ("WORKID" DESC,"SUBWORKID","OPERATION");
--
-- WLOCK_PRIMARY
--
  CREATE UNIQUE INDEX "WLOCK_PRIMARY" ON "WLOCK" ("WLOCK_WORKID");
--
-- WMAP_INDEX1
--
  CREATE INDEX "WMAP_INDEX1" ON "WMAP" ("MAP_MAPOBJID");
--
-- WMAP_INDEX2
--
  CREATE INDEX "WMAP_INDEX2" ON "WMAP" ("MAP_MAPID","MAP_MAPOBJID");
--
-- WMAP_PRIMARY
--
  CREATE UNIQUE INDEX "WMAP_PRIMARY" ON "WMAP" ("MAP_MAPID");
--
-- WMAPTASK_INDEX1
--
  CREATE INDEX "WMAPTASK_INDEX1" ON "WMAPTASK" ("MAPTASK_MAPID");
--
-- WMAPTASK_PRIMARY
--
  CREATE UNIQUE INDEX "WMAPTASK_PRIMARY" ON "WMAPTASK" ("MAPTASK_MAPID","MAPTASK_TASKID");
--
-- WOPIFAILEDSESSIONS_N
--
  CREATE INDEX "WOPIFAILEDSESSIONS_N" ON "WOPIFAILEDSESSIONS" ("NODEID");
--
-- WOPIFAILEDSESSIONS_S
--
  CREATE UNIQUE INDEX "WOPIFAILEDSESSIONS_S" ON "WOPIFAILEDSESSIONS" ("SESSIONID");
--
-- WOPISESSIONS_N
--
  CREATE UNIQUE INDEX "WOPISESSIONS_N" ON "WOPISESSIONS" ("NODEID");
--
-- WOPISESSIONS_SS
--
  CREATE INDEX "WOPISESSIONS_SS" ON "WOPISESSIONS" ("SESSIONSTART");
--
-- WOPISESSIONS_XP
--
  CREATE INDEX "WOPISESSIONS_XP" ON "WOPISESSIONS" ("WOPILOCKTS");
--
-- WOPITICKETS_T
--
  CREATE UNIQUE INDEX "WOPITICKETS_T" ON "WOPITICKETS" ("TICKET");
--
-- WOPIUSERINFO_U
--
  CREATE INDEX "WOPIUSERINFO_U" ON "WOPIUSERINFO" ("USERID");
--
-- WOPIUSERNOTIFY_U
--
  CREATE INDEX "WOPIUSERNOTIFY_U" ON "WOPIUSERNOTIFY" ("USERID");
--
-- WORKERPACKAGES_1
--
  CREATE UNIQUE INDEX "WORKERPACKAGES_1" ON "WORKERPACKAGES" ("TASKID");
--
-- WORKERQUEUE_2
--
  CREATE INDEX "WORKERQUEUE_2" ON "WORKERQUEUE" ("ACTIVATIONDATE");
--
-- WORKERQUEUE_PRIMARY
--
  CREATE UNIQUE INDEX "WORKERQUEUE_PRIMARY" ON "WORKERQUEUE" ("NID");
--
-- WORKERQUEUECHILDREN_INDEX2
--
  CREATE INDEX "WORKERQUEUECHILDREN_INDEX2" ON "WORKERQUEUECHILDREN" ("CHILDTASKID","TASKID");
--
-- WORKERQUEUECOMPLETE_1
--
  CREATE UNIQUE INDEX "WORKERQUEUECOMPLETE_1" ON "WORKERQUEUECOMPLETE" ("ID");
--
-- WORKERQUEUECURRENT_1
--
  CREATE UNIQUE INDEX "WORKERQUEUECURRENT_1" ON "WORKERQUEUECURRENT" ("ID");
--
-- WORKERQUEUECURRENT_2
--
  CREATE INDEX "WORKERQUEUECURRENT_2" ON "WORKERQUEUECURRENT" ("STATUS","WORKERTIME");
--
-- WORKERQUEUECURRENT_3
--
  CREATE INDEX "WORKERQUEUECURRENT_3" ON "WORKERQUEUECURRENT" ("WORKERID","STATUS");
--
-- WORKERQUEUECURRENT_4
--
  CREATE INDEX "WORKERQUEUECURRENT_4" ON "WORKERQUEUECURRENT" ("TYPE","ID");
--
-- WORKERQUEUEERROR_1
--
  CREATE UNIQUE INDEX "WORKERQUEUEERROR_1" ON "WORKERQUEUEERROR" ("ID");
--
-- WORKERQUEUEPENDING_1
--
  CREATE UNIQUE INDEX "WORKERQUEUEPENDING_1" ON "WORKERQUEUEPENDING" ("ID");
--
-- WORKERQUEUEPENDING_2
--
  CREATE UNIQUE INDEX "WORKERQUEUEPENDING_2" ON "WORKERQUEUEPENDING" ("TYPE","HANDLERID","FINGERPRINT");
--
-- WORKERQUEUEPENDING_3
--
  CREATE INDEX "WORKERQUEUEPENDING_3" ON "WORKERQUEUEPENDING" ("QUEUETIME");
--
-- WORKERQUEUEPENDING_4
--
  CREATE INDEX "WORKERQUEUEPENDING_4" ON "WORKERQUEUEPENDING" ("HANDLERID");
--
-- WORKERQUEUEPENDING_PRIMARY
--
  CREATE UNIQUE INDEX "WORKERQUEUEPENDING_PRIMARY" ON "WORKERQUEUEPENDING" ("PRIORITY" DESC,"ID");
--
-- WORKERQUEUETRACKING_1
--
  CREATE UNIQUE INDEX "WORKERQUEUETRACKING_1" ON "WORKERQUEUETRACKING" ("CHECKTIME","HANDLERID","EVENTTYPE");
--
-- WORKERSTATUS_1
--
  CREATE UNIQUE INDEX "WORKERSTATUS_1" ON "WORKERSTATUS" ("WORKERID");
--
-- WSUBWORK_INDEX1
--
  CREATE INDEX "WSUBWORK_INDEX1" ON "WSUBWORK" ("SUBWORK_STATUS");
--
-- WSUBWORK_INDEX2
--
  CREATE INDEX "WSUBWORK_INDEX2" ON "WSUBWORK" ("SUBWORK_MAPID");
--
-- WSUBWORK_INDEX3
--
  CREATE INDEX "WSUBWORK_INDEX3" ON "WSUBWORK" ("SUBWORK_PROJECT");
--
-- WSUBWORK_INDEX4
--
  CREATE INDEX "WSUBWORK_INDEX4" ON "WSUBWORK" ("SUBWORK_STATUS","SUBWORK_WORKID","SUBWORK_SUBWORKID","SUBWORK_DATEINITIATED","SUBWORK_MAPID","SUBWORK_DATEDUE_MAX");
--
-- WSUBWORK_PRIMARY
--
  CREATE UNIQUE INDEX "WSUBWORK_PRIMARY" ON "WSUBWORK" ("SUBWORK_WORKID","SUBWORK_SUBWORKID");
--
-- WSUBWORKTASK_INDEX1
--
  CREATE INDEX "WSUBWORKTASK_INDEX1" ON "WSUBWORKTASK" ("SUBWORKTASK_WAITCOUNT","SUBWORKTASK_WORKID","SUBWORKTASK_SUBWORKID","SUBWORKTASK_TASKID");
--
-- WSUBWORKTASK_INDEX2
--
  CREATE INDEX "WSUBWORKTASK_INDEX2" ON "WSUBWORKTASK" ("SUBWORKTASK_PERFORMERID");
--
-- WSUBWORKTASK_INDEX3
--
  CREATE INDEX "WSUBWORKTASK_INDEX3" ON "WSUBWORKTASK" ("SUBWORKTASK_STATUS");
--
-- WSUBWORKTASK_INDEX4
--
  CREATE INDEX "WSUBWORKTASK_INDEX4" ON "WSUBWORKTASK" ("SUBWORKTASK_PERFORMERID","SUBWORKTASK_STATUS");
--
-- WSUBWORKTASK_INDEX5
--
  CREATE INDEX "WSUBWORKTASK_INDEX5" ON "WSUBWORKTASK" ("SUBWORKTASK_WORKID","SUBWORKTASK_SUBWORKID");
--
-- WSUBWORKTASK_INDEX6
--
  CREATE INDEX "WSUBWORKTASK_INDEX6" ON "WSUBWORKTASK" ("SUBWORKTASK_SUBWORKID");
--
-- WSUBWORKTASK_INDEX7
--
  CREATE INDEX "WSUBWORKTASK_INDEX7" ON "WSUBWORKTASK" ("SUBWORKTASK_STATUS","SUBWORKTASK_WORKID","SUBWORKTASK_SUBWORKID","SUBWORKTASK_DATEDUE_MAX","SUBWORKTASK_DATEMILESTONE");
--
-- WSUBWORKTASK_INDEX8
--
  CREATE INDEX "WSUBWORKTASK_INDEX8" ON "WSUBWORKTASK" ("SUBWORKTASK_STATUS","SUBWORKTASK_WORKID","SUBWORKTASK_SUBWORKID","SUBWORKTASK_TASKID","SUBWORKTASK_PERFORMERID","SUBWORKTASK_DATEDUE_MAX","SUBWORKTASK_DATEMILESTONE","SUBWORKTASK_DATEREADY","SUBWORKTASK_TITLE");
--
-- WSUBWORKTASK_PRIMARY
--
  CREATE UNIQUE INDEX "WSUBWORKTASK_PRIMARY" ON "WSUBWORKTASK" ("SUBWORKTASK_WORKID","SUBWORKTASK_SUBWORKID","SUBWORKTASK_TASKID");
--
-- WWORK_INDEX1
--
  CREATE INDEX "WWORK_INDEX1" ON "WWORK" ("WORK_OWNERID");
--
-- WWORK_INDEX2
--
  CREATE INDEX "WWORK_INDEX2" ON "WWORK" ("WORK_MANAGERID");
--
-- WWORK_INDEX3
--
  CREATE INDEX "WWORK_INDEX3" ON "WWORK" ("WORK_STATUS");
--
-- WWORK_INDEX4
--
  CREATE INDEX "WWORK_INDEX4" ON "WWORK" ("WORK_OWNERID","WORK_MANAGERID");
--
-- WWORK_PRIMARY
--
  CREATE UNIQUE INDEX "WWORK_PRIMARY" ON "WWORK" ("WORK_WORKID");
--
-- WWORKACL_PRIMARY
--
  CREATE UNIQUE INDEX "WWORKACL_PRIMARY" ON "WWORKACL" ("WORKACL_WORKID","WORKACL_RIGHTID");
--
-- WWORKAUDIT_INDEX1
--
  CREATE INDEX "WWORKAUDIT_INDEX1" ON "WWORKAUDIT" ("WORKAUDIT_WORKID","WORKAUDIT_SUBWORKID");
--
-- WWORKAUDIT_PRIMARY1
--
  CREATE UNIQUE INDEX "WWORKAUDIT_PRIMARY1" ON "WWORKAUDIT" ("WORKAUDIT_WORKID","WORKAUDIT_SUBWORKID","WORKAUDIT_TASKID","WORKAUDIT_AUDITID");
--
-- XAK1RSIKEYWORDS
--
  CREATE UNIQUE INDEX "XAK1RSIKEYWORDS" ON "RSIKEYWORDS" ("RSIKEYWORD","RSI","OBJECTFIELD");
--
-- XPKACCESSION
--
  CREATE UNIQUE INDEX "XPKACCESSION" ON "ACCESSION" ("ACCESSION");
--
-- XPKACTIONCODE
--
  CREATE UNIQUE INDEX "XPKACTIONCODE" ON "ACTIONCODE" ("OBJECT","ACTIONCODE");
--
-- XPKDATETOUSE
--
  CREATE UNIQUE INDEX "XPKDATETOUSE" ON "DATETOUSE" ("OBJECT","DATETOUSE");
--
-- XPKDISPOSITION
--
  CREATE UNIQUE INDEX "XPKDISPOSITION" ON "DISPOSITION" ("DISPOSITION");
--
-- XPKDISPOSITIONHOLD
--
  CREATE UNIQUE INDEX "XPKDISPOSITIONHOLD" ON "DISPOSITIONHOLD" ("HOLDID");
--
-- XPKDOCXREFTYP
--
  CREATE UNIQUE INDEX "XPKDOCXREFTYP" ON "DOCXREFTYP" ("DOCXREFTYP");
--
-- XPKESS_RECORDS
--
  CREATE UNIQUE INDEX "XPKESS_RECORDS" ON "ESS_RECORDS" ("ESS_RECORDS");
--
-- XPKFILE_STATUS
--
  CREATE UNIQUE INDEX "XPKFILE_STATUS" ON "FILE_STATUS" ("FILE_STATUS");
--
-- XPKHOLDTYPE
--
  CREATE UNIQUE INDEX "XPKHOLDTYPE" ON "HOLDTYPE" ("HOLDTYPE");
--
-- XPKJURISDCODE
--
  CREATE UNIQUE INDEX "XPKJURISDCODE" ON "JURISDCODE" ("JURISDCODE");
--
-- XPKJUSTIFICATION
--
  CREATE UNIQUE INDEX "XPKJUSTIFICATION" ON "JUSTIFICATION" ("JUSTIFICATIONID");
--
-- XPKLABELDEFINITION
--
  CREATE UNIQUE INDEX "XPKLABELDEFINITION" ON "LABELDEFINITION" ("LABELDEFNAME");
--
-- XPKLABELDEFSPECS
--
  CREATE UNIQUE INDEX "XPKLABELDEFSPECS" ON "LABELDEFSPECS" ("DEFSPECS","LABELDEFNAME");
--
-- XPKLABELQUEUE
--
  CREATE UNIQUE INDEX "XPKLABELQUEUE" ON "LABELQUEUE" ("NODEID","LABELDEFNAME","UNIQUEID");
--
-- XPKLABELSTOCK
--
  CREATE UNIQUE INDEX "XPKLABELSTOCK" ON "LABELSTOCK" ("STOCKNAME");
--
-- XPKLOCATORLABEL
--
  CREATE UNIQUE INDEX "XPKLOCATORLABEL" ON "LOCATORLABELS" ("FACILITY","AREA","BOXLOCATOR","LABELDEFNAME");
--
-- XPKOBJECT
--
  CREATE UNIQUE INDEX "XPKOBJECT" ON "OBJECT" ("OBJECT");
--
-- XPKOTDOCUMENTHOLD
--
  CREATE UNIQUE INDEX "XPKOTDOCUMENTHOLD" ON "OTDOCUMENTHOLD" ("HOLDID","OTITEMID","OTVOLUMEID");
--
-- XPKPHYSITEMDATA
--
  CREATE UNIQUE INDEX "XPKPHYSITEMDATA" ON "PHYSITEMDATA" ("NODEID");
--
-- XPKPHYSOBJKEYWORDS
--
  CREATE UNIQUE INDEX "XPKPHYSOBJKEYWORDS" ON "PHYSOBJKEYWORDS" ("NODEID","PHYSOBJKEYWORD","OBJECTFIELD");
--
-- XPKPOWF_CLEARANCE
--
  CREATE UNIQUE INDEX "XPKPOWF_CLEARANCE" ON "POWF_CLEARANCE" ("ID","PARPOS","POS");
--
-- XPKPOWF_CREATEITEMS
--
  CREATE UNIQUE INDEX "XPKPOWF_CREATEITEMS" ON "POWF_CREATEITEMS" ("ID","SUBTYPE","RELTYPE","PARPOS","POS");
--
-- XPKPOWF_DATADEF
--
  CREATE UNIQUE INDEX "XPKPOWF_DATADEF" ON "POWF_DATADEF" ("MAPID","TASKID","NAME");
--
-- XPKPOWF_ITEMEXT
--
  CREATE UNIQUE INDEX "XPKPOWF_ITEMEXT" ON "POWF_ITEMEXT" ("ID","PARPOS","POS","FIELDNAME");
--
-- XPKPOWF_SUPPMARK
--
  CREATE UNIQUE INDEX "XPKPOWF_SUPPMARK" ON "POWF_SUPPMARK" ("ID","PARPOS","POS","SUPPMARK");
--
-- XPKRELATTYPE
--
  CREATE UNIQUE INDEX "XPKRELATTYPE" ON "RELATTYPE" ("RELATTYPE");
--
-- XPKRETCODE
--
  CREATE UNIQUE INDEX "XPKRETCODE" ON "RETCODE" ("RETCODE");
--
-- XPKRETSTAGE
--
  CREATE UNIQUE INDEX "XPKRETSTAGE" ON "RETSTAGE" ("RETSTAGE");
--
-- XPKRIMSKEYWORDED
--
  CREATE UNIQUE INDEX "XPKRIMSKEYWORDED" ON "RIMSKEYWORDED" ("OBJECT","OBJECTFIELD");
--
-- XPKRIMSTABLES
--
  CREATE UNIQUE INDEX "XPKRIMSTABLES" ON "RIMSTABLES" ("TABLENAME","COLUMNNAME");
--
-- XPKRMCLASSJUSTIFY
--
  CREATE UNIQUE INDEX "XPKRMCLASSJUSTIFY" ON "RM_CLASSJUSTIFY" ("CLASSID","JUSTIFICATIONID");
--
-- XPKRSI
--
  CREATE UNIQUE INDEX "XPKRSI" ON "RSI" ("RSI");
--
-- XPKRSIEVENTSCHED
--
  CREATE UNIQUE INDEX "XPKRSIEVENTSCHED" ON "RSIEVENTSCHED" ("RSI","OBJECT","RETSTAGE","RSISCHEDULEID");
--
-- XPKRSIJUSTIFY
--
  CREATE UNIQUE INDEX "XPKRSIJUSTIFY" ON "RSIJUSTIFY" ("RSI","JUSTIFICATIONID");
--
-- XPKRSIKEYWORDS
--
  CREATE UNIQUE INDEX "XPKRSIKEYWORDS" ON "RSIKEYWORDS" ("RSI","OBJECTFIELD","RSIKEYWORD");
--
-- XPKRSIRULECODE
--
  CREATE UNIQUE INDEX "XPKRSIRULECODE" ON "RSIRULECODE" ("RSIRULECODE");
--
-- XPKRSISTATUS
--
  CREATE UNIQUE INDEX "XPKRSISTATUS" ON "RSISTATUS" ("RSISTATUS");
--
-- XPKSPECIAL_CHARACT
--
  CREATE UNIQUE INDEX "XPKSPECIAL_CHARACT" ON "SPECIAL_CHARACTERS" ("SPECIAL_CHAR");
--
-- XPKSTORAGE
--
  CREATE UNIQUE INDEX "XPKSTORAGE" ON "STORAGE" ("STORAGE");
--
-- XPKTABLES
--
  CREATE UNIQUE INDEX "XPKTABLES" ON "TABLES" ("TABLES");
--
-- XPKTERMLEVEL
--
  CREATE UNIQUE INDEX "XPKTERMLEVEL" ON "TERMLEVEL" ("TERMLEVEL");
--
-- XPKTHESHISTORY
--
  CREATE UNIQUE INDEX "XPKTHESHISTORY" ON "THESHISTORY" ("TERMID","EDITDATE");
--
-- XPKTHESRELATIONS
--
  CREATE UNIQUE INDEX "XPKTHESRELATIONS" ON "THESRELATIONS" ("TERMID1","RELATTYPE","TERMID2");
--
-- XPKTHESTERMS
--
  CREATE UNIQUE INDEX "XPKTHESTERMS" ON "THESTERMS" ("TERMID");
--
-- XPKUSERLABELS
--
  CREATE UNIQUE INDEX "XPKUSERLABELS" ON "USERLABELS" ("ID","LABELDEFNAME");
--
-- PK_DTCEXTSOURCE_ID
--
ALTER TABLE "DTREECOREEXTERNALSOURCE" ADD CONSTRAINT "PK_DTCEXTSOURCE_ID" PRIMARY KEY ("ID") ENABLE;

--
-- PK_KUAFIDENTITY_ID
--
ALTER TABLE "KUAFIDENTITY" ADD CONSTRAINT "PK_KUAFIDENTITY_ID" PRIMARY KEY ("ID") ENABLE;

--
-- PK_PROVIDERDATA_PROVIDERID
--
ALTER TABLE "PROVIDERDATA" ADD CONSTRAINT "PK_PROVIDERDATA_PROVIDERID" PRIMARY KEY ("PROVIDERID") ENABLE;

--
-- SYS_C0018568
--
ALTER TABLE "CUST_DISTRICT" ADD  FOREIGN KEY ("REGNUM") REFERENCES "CUST_REGIONS"("REGNUM") ENABLE;

--
-- SYS_C0018569
--
ALTER TABLE "CUST_LOCALOFFICE" ADD  FOREIGN KEY ("DISTRICTID") REFERENCES "CUST_DISTRICT"("DISTRICTID") ENABLE;

--
-- FK_BATCH_LOCAL_OFFICE
--
ALTER TABLE "DC_BATCH" ADD CONSTRAINT "FK_BATCH_LOCAL_OFFICE" FOREIGN KEY ("OFFICE_ID") REFERENCES "DC_LOCAL_OFFICE"("OFFICE_ID") ENABLE NOVALIDATE;

--
-- FK_DC_BATCH
--
ALTER TABLE "DC_FILE" ADD CONSTRAINT "FK_DC_BATCH" FOREIGN KEY ("BATCH_NO") REFERENCES "DC_BATCH"("BATCH_NO") ENABLE;

--
-- FK_DC_FILE_GRANT
--
ALTER TABLE "DC_FILE" ADD CONSTRAINT "FK_DC_FILE_GRANT" FOREIGN KEY ("GRANT_TYPE") REFERENCES "DC_GRANT_TYPE"("TYPE_ID") ENABLE;

--
-- FK_DC_FILE_TRANS_TYPE
--
ALTER TABLE "DC_FILE" ADD CONSTRAINT "FK_DC_FILE_TRANS_TYPE" FOREIGN KEY ("TRANS_TYPE") REFERENCES "DC_TRANSACTION_TYPE"("TYPE_ID") ENABLE;

--
-- FK_OFFICE_ID_FILE
--
ALTER TABLE "DC_FILE" ADD CONSTRAINT "FK_OFFICE_ID_FILE" FOREIGN KEY ("OFFICE_ID") REFERENCES "DC_LOCAL_OFFICE"("OFFICE_ID") ENABLE;

--
-- DC_FILE_REQUEST_FK1
--
ALTER TABLE "DC_FILE_REQUEST" ADD CONSTRAINT "DC_FILE_REQUEST_FK1" FOREIGN KEY ("STAKEHOLDER") REFERENCES "DC_STAKEHOLDER"("STAKEHOLDER_ID") ENABLE;

--
-- FK_FILE_REQUEST_REGION_ID
--
ALTER TABLE "DC_FILE_REQUEST" ADD CONSTRAINT "FK_FILE_REQUEST_REGION_ID" FOREIGN KEY ("REGION_ID") REFERENCES "DC_REGION"("REGION_ID") ENABLE;

--
-- FK_REQUEST_CATEGORY
--
ALTER TABLE "DC_FILE_REQUEST" ADD CONSTRAINT "FK_REQUEST_CATEGORY" FOREIGN KEY ("REQ_CATEGORY","REQ_CATEGORY_TYPE") REFERENCES "DC_REQ_CATEGORY_TYPE_LINK"("CATEGORY_ID","TYPE_ID") ENABLE;

--
-- FK_DC_TRANS_TYPE
--
ALTER TABLE "DC_GRANT_DOC_LINK" ADD CONSTRAINT "FK_DC_TRANS_TYPE" FOREIGN KEY ("TRANSACTION_ID") REFERENCES "DC_TRANSACTION_TYPE"("TYPE_ID") ENABLE;

--
-- FK_DOCUMENT_TYPE_LINK
--
ALTER TABLE "DC_GRANT_DOC_LINK" ADD CONSTRAINT "FK_DOCUMENT_TYPE_LINK" FOREIGN KEY ("DOCUMENT_ID") REFERENCES "DC_DOCUMENT_TYPE"("TYPE_ID") ENABLE;

--
-- FK_GRANT_TYPE_GRANT
--
ALTER TABLE "DC_GRANT_DOC_LINK" ADD CONSTRAINT "FK_GRANT_TYPE_GRANT" FOREIGN KEY ("GRANT_ID") REFERENCES "DC_GRANT_TYPE"("TYPE_ID") ENABLE;

--
-- FK_LOCAL_OFFICE_REGION
--
ALTER TABLE "DC_LOCAL_OFFICE" ADD CONSTRAINT "FK_LOCAL_OFFICE_REGION" FOREIGN KEY ("REGION_ID") REFERENCES "DC_REGION"("REGION_ID") ENABLE;

--
-- FK_LOCAL_OFFICE
--
ALTER TABLE "DC_OFFICE_KUAF_LINK" ADD CONSTRAINT "FK_LOCAL_OFFICE" FOREIGN KEY ("OFFICE_ID") REFERENCES "DC_LOCAL_OFFICE"("OFFICE_ID") ENABLE;

--
-- FK_CATEGORY
--
ALTER TABLE "DC_REQ_CATEGORY_TYPE_LINK" ADD CONSTRAINT "FK_CATEGORY" FOREIGN KEY ("CATEGORY_ID") REFERENCES "DC_REQ_CATEGORY"("CATEGORY_ID") ENABLE;

--
-- FK_CATEGORY_TYPE
--
ALTER TABLE "DC_REQ_CATEGORY_TYPE_LINK" ADD CONSTRAINT "FK_CATEGORY_TYPE" FOREIGN KEY ("TYPE_ID") REFERENCES "DC_REQ_CATEGORY_TYPE"("TYPE_ID") ENABLE;

--
-- DC_STAKEHOLDER_FK1
--
ALTER TABLE "DC_STAKEHOLDER" ADD CONSTRAINT "DC_STAKEHOLDER_FK1" FOREIGN KEY ("DEPARTMENT_ID") REFERENCES "DC_REQ_CATEGORY"("CATEGORY_ID") ENABLE;

--
-- FK_DTCEXTDATA_EXTCREATORID
--
ALTER TABLE "DTREECOREEXTERNALDATA" ADD CONSTRAINT "FK_DTCEXTDATA_EXTCREATORID" FOREIGN KEY ("EXTERNALCREATORID") REFERENCES "KUAFIDENTITY"("ID") ENABLE;

--
-- FK_DTCEXTDATA_EXTSOURCEID
--
ALTER TABLE "DTREECOREEXTERNALDATA" ADD CONSTRAINT "FK_DTCEXTDATA_EXTSOURCEID" FOREIGN KEY ("EXTERNALSOURCEID") REFERENCES "DTREECOREEXTERNALSOURCE"("ID") ENABLE;

--
-- FK_DVERSDATA_PROVIDERID
--
ALTER TABLE "DVERSDATA" ADD CONSTRAINT "FK_DVERSDATA_PROVIDERID" FOREIGN KEY ("PROVIDERID") REFERENCES "PROVIDERDATA"("PROVIDERID") ENABLE;

--
-- CLEANUP_BLOBS
--
CREATE OR REPLACE PROCEDURE "CLEANUP_BLOBS" as CURSOR recs IS SELECT longId,segmentId FROM BlobData WHERE longid < 0; curr_id NUMBER; curr_seg NUMBER; num_found NUMBER; result NUMBER := 0; del_done BOOLEAN := FALSE; BEGIN WHILE NOT del_done LOOP set transaction read write; open recs; num_found := 0; WHILE ( num_found != 1 ) and NOT del_done LOOP fetch recs into curr_id,curr_seg; if recs%NOTFOUND THEN del_done := TRUE; end if; DBMS_OUTPUT.PUT_LINE( 'Deleting id ' || curr_id || ' seq ' || curr_seg ); delete from BlobData where longId=curr_id and segmentId=curr_seg; num_found := num_found + 1; END LOOP; close recs; commit; END LOOP; END;
/
--
-- EXPORT_SOCPENID
--
CREATE OR REPLACE PROCEDURE "EXPORT_SOCPENID" AS
CURSOR c_data IS

SELECT
        '' AS "FILE_TYPE",
        '' AS "REC_TYPE",
        CAST (SP.PENSION_NO AS VARCHAR2 (20)) AS "PENSION-NO",
        CAST (SP.PAYPOINT AS VARCHAR2 (20)) AS "PAYPOINT",
		(SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "GRANT-TYPE1",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "GRANT-TYPE2",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "GRANT-TYPE3",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "GRANT-TYPE4",
		(SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "PRIM-STATUS1",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "PRIM-STATUS2",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "PRIM-STATUS3",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "PRIM-STATUS4",
			 (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "SEC-STATUS1",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "SEC-STATUS2",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "SEC-STATUS3",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "SEC-STATUS4",

			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-DATE4",
			 (SELECT DISTINCT CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "APP-DATE4",
			 '' AS "REVIEW-CODE1",
          '' AS "REVIEW-CODE2",
          '' AS "REVIEW-CODE3",
          '' AS "REVIEW-CODE4",

		  (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-REASON1",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-REASON2",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-REASON3",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-REASON4",
			 (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STAT-PER1",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STAT-PER2",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STAT-PER3",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STAT-PER4",
			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "DATE-ACCEPT1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "DATE-ACCEPT2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "DATE-ACCEPT3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "DATE-ACCEPT4",
			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "ORIG-APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "ORIG-APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "ORIG-APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
						   FROM SASSA.SOCPEN_PERSONAL_GRANTS
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "ORIG-APP-DATE4",
			 (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '001')
             AS "OLD-ID1",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '002')
             AS "OLD-ID2",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '003')
             AS "OLD-ID3",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '004')
             AS "OLD-ID4",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '005')
             AS "OLD-ID5",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '006')
             AS "OLD-ID6",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '007')
             AS "OLD-ID7",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '008')
             AS "OLD-ID8",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '009')
             AS "OLD-ID9",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA.SOCPEN_OLD_ID
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '010')
             AS "OLD-ID10",
			 CAST (SBNKDT.BRANCH AS VARCHAR2 (20)) AS "BRANCH",
          CAST (SP.SURNAME AS VARCHAR2 (20)) AS "SURNAME",
          CAST (SP.NAME AS VARCHAR2 (20)) AS "NAME",
		  CAST (
                SA.STREET_ADDR_1
             || ' '
             || SA.STREET_ADDR_2
             || ' '
             || SA.STREET_ADDR_3
             || ' '
             || SA.STREET_ADDR_4 AS VARCHAR2 (20))
             AS "ADDRESS",
          CAST (
                SA.POSTAL_ADDR_1
             || ' '
             || SA.POSTAL_ADDR_2
             || ' '
             || SA.POSTAL_ADDR_3
             || ' '
             || SA.POSTAL_ADDR_4 AS VARCHAR2 (20))
             AS "POSTAL-ADDRESS",
          CAST (SA.RESIDENTIAL_POSTAL_CODE AS VARCHAR2 (20)) AS "POSTAL-CODE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "NO-KIDS",
		  CAST (SP.PAYMENT_METHOD AS VARCHAR2 (20)) AS "PAYMENT-METHOD",
          CAST (SP.SEX AS VARCHAR2 (20)) AS "SEX",
          CAST (SP.MARITAL_STATUS AS VARCHAR2 (20)) AS "MARITAL-STATUS",
		  CAST (
             TO_CHAR (TO_DATE (TO_DATE (SP.BIRTHDATE, 'DD-MON-YY')),
                      'YYYYMMDD') AS VARCHAR2 (20))
             AS "BIRTHDATE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "KIDS-INVOLVED",
		  CAST (SP.NO_CARE_DEP AS VARCHAR2 (20)) AS "NO-CARE-DEP",
          CAST (SBNKDT.ACCOUNT_NO AS VARCHAR2 (20)) AS "ACCOUNT-NO",
		  CAST (SP.SECONDARY_PAYPOINT AS VARCHAR2 (20)) AS "SEC-PAYPOINT",
          CAST (SP.PAYMENT_MODE AS VARCHAR2 (20)) AS "PAYMENT-MODE",
          '' AS "RE-REGISTERED",
		  CAST (SP.NO_KIDS_OWN AS VARCHAR2 (20)) AS "NO-KIDS-OWN",
          CAST (SP.NO_KIDS_OTHER AS VARCHAR2 (20)) AS "NO-KIDS-OTHER",
		  CAST (SUBSTR (SP.SECONDARY_PAYPOINT, 1, 1) AS VARCHAR2 (20)) AS "PROVINCE",
		  CAST (SP.TELEPHONE AS VARCHAR2 (20)) AS "TELNO",
          CAST (SP.CELL_NO AS VARCHAR2 (20)) AS "CELLNO",
		  CAST (SR.REVIEW_PERIOD AS VARCHAR2 (20)) AS "REVIEWPERIOD",
          CAST (SR.MEDICAL_REVIEW_PERIOD AS VARCHAR2 (20)) AS "MEDICALPERIOD",
          CAST (SR.LIFE_CERTIFICATE_PERIOD AS VARCHAR2 (20)) AS "LIFECERTPERIOD",
		  '' AS "DOCS-PRESENT"

		  FROM SASSA.SOCPEN_PERSONAL SP
          LEFT OUTER JOIN SASSA.SOCPEN_REVIEW SR
             ON SR.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA.SOCPEN_BANK_DETAILS SBNKDT
             ON SBNKDT.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA.SOCPEN_ADRES SA
             ON SA.PENSION_NO = SP.PENSION_NO
    WHERE SP.PENSION_NO IS NOT NULL
--AND PAYPOINT IS NOT NULL
--AND ROWNUM < 1000
--ORDER BY SURNAME DESC
    ;
  v_file  UTL_FILE.FILE_TYPE;
BEGIN
  v_file := UTL_FILE.FOPEN(location     => 'CSVS',
                           filename     => 'TO_SOCPENBRM.csv',
                           open_mode    => 'w',
                           max_linesize => 32767);
  FOR cur_rec IN c_data LOOP
    UTL_FILE.PUT_LINE(v_file,
						cur_rec."FILE_TYPE" || '~' ||
						cur_rec."REC_TYPE" || '~' ||
						cur_rec."PENSION-NO" || '~' ||
						cur_rec."PAYPOINT" || '~' ||
						cur_rec."GRANT-TYPE1" || '~' ||
						cur_rec."GRANT-TYPE2" || '~' ||
						cur_rec."GRANT-TYPE3" || '~' ||
						cur_rec."GRANT-TYPE4" || '~' ||
						cur_rec."PRIM-STATUS1" || '~' ||
						cur_rec."PRIM-STATUS2" || '~' ||
						cur_rec."PRIM-STATUS3" || '~' ||
						cur_rec."PRIM-STATUS4" || '~' ||
						cur_rec."SEC-STATUS1" || '~' ||
						cur_rec."SEC-STATUS2" || '~' ||
						cur_rec."SEC-STATUS3" || '~' ||
						cur_rec."SEC-STATUS4" || '~' ||
						cur_rec."STATUS-DATE1" || '~' ||
						cur_rec."STATUS-DATE2" || '~' ||
						cur_rec."STATUS-DATE3" || '~' ||
						cur_rec."STATUS-DATE4" || '~' ||
						cur_rec."APP-DATE1" || '~' ||
						cur_rec."APP-DATE2" || '~' ||
						cur_rec."APP-DATE3" || '~' ||
						cur_rec."APP-DATE4" || '~' ||
						cur_rec."REVIEW-CODE1" || '~' ||
						cur_rec."REVIEW-CODE2" || '~' ||
						cur_rec."REVIEW-CODE3" || '~' ||
						cur_rec."REVIEW-CODE4" || '~' ||
						cur_rec."STATUS-REASON1" || '~' ||
						cur_rec."STATUS-REASON2" || '~' ||
						cur_rec."STATUS-REASON3" || '~' ||
						cur_rec."STATUS-REASON4" || '~' ||
						cur_rec."STAT-PER1" || '~' ||
						cur_rec."STAT-PER2" || '~' ||
						cur_rec."STAT-PER3" || '~' ||
						cur_rec."STAT-PER4" || '~' ||
						cur_rec."DATE-ACCEPT1" || '~' ||
						cur_rec."DATE-ACCEPT2" || '~' ||
						cur_rec."DATE-ACCEPT3" || '~' ||
						cur_rec."DATE-ACCEPT4" || '~' ||
						cur_rec."ORIG-APP-DATE1" || '~' ||
						cur_rec."ORIG-APP-DATE2" || '~' ||
						cur_rec."ORIG-APP-DATE3" || '~' ||
						cur_rec."ORIG-APP-DATE4" || '~' ||
						cur_rec."OLD-ID1" || '~' ||
						cur_rec."OLD-ID2" || '~' ||
						cur_rec."OLD-ID3" || '~' ||
						cur_rec."OLD-ID4" || '~' ||
						cur_rec."OLD-ID5" || '~' ||
						cur_rec."OLD-ID6" || '~' ||
						cur_rec."OLD-ID7" || '~' ||
						cur_rec."OLD-ID8" || '~' ||
						cur_rec."OLD-ID9" || '~' ||
						cur_rec."OLD-ID10" || '~' ||
						cur_rec."BRANCH" || '~' ||
						cur_rec."SURNAME" || '~' ||
						cur_rec."NAME" || '~' ||
						cur_rec."ADDRESS" || '~' ||
						cur_rec."POSTAL-ADDRESS" || '~' ||
						cur_rec."POSTAL-CODE" || '~' ||
						cur_rec."NO-KIDS" || '~' ||
						cur_rec."PAYMENT-METHOD" || '~' ||
						cur_rec."SEX" || '~' ||
						cur_rec."MARITAL-STATUS" || '~' ||
						cur_rec."BIRTHDATE" || '~' ||
						cur_rec."KIDS-INVOLVED" || '~' ||
						cur_rec."NO-CARE-DEP" || '~' ||
						cur_rec."ACCOUNT-NO" || '~' ||
						cur_rec."SEC-PAYPOINT" || '~' ||
						cur_rec."PAYMENT-MODE" || '~' ||
						cur_rec."RE-REGISTERED" || '~' ||
						cur_rec."NO-KIDS-OWN" || '~' ||
						cur_rec."NO-KIDS-OTHER" || '~' ||
						cur_rec."PROVINCE" || '~' ||
						cur_rec."TELNO" || '~' ||
						cur_rec."CELLNO" || '~' ||
						cur_rec."REVIEWPERIOD" || '~' ||
						cur_rec."MEDICALPERIOD" || '~' ||
						cur_rec."LIFECERTPERIOD" || '~' ||
						cur_rec."DOCS-PRESENT");

  END LOOP;
  UTL_FILE.FCLOSE(v_file);

EXCEPTION
  WHEN OTHERS THEN
    UTL_FILE.FCLOSE(v_file);
    RAISE;
END;
/
--
-- EXPORT_SOCPENID_ARCHIVE
--
CREATE OR REPLACE PROCEDURE "EXPORT_SOCPENID_ARCHIVE" AS
CURSOR c_data IS

SELECT
        '' AS "FILE_TYPE",
        '' AS "REC_TYPE",
        CAST (SP.PENSION_NO AS VARCHAR2 (20)) AS "PENSION-NO",
        CAST (SP.PAYPOINT AS VARCHAR2 (20)) AS "PAYPOINT",
		(SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "GRANT-TYPE1",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "GRANT-TYPE2",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "GRANT-TYPE3",
          (SELECT DISTINCT CAST (GRANT_TYPE AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "GRANT-TYPE4",
		(SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "PRIM-STATUS1",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "PRIM-STATUS2",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "PRIM-STATUS3",
          (SELECT DISTINCT CAST (PRIM_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "PRIM-STATUS4",
			 (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "SEC-STATUS1",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "SEC-STATUS2",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "SEC-STATUS3",
          (SELECT DISTINCT CAST (SEC_STATUS AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "SEC-STATUS4",

			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (TO_DATE (TO_DATE (STATUS_DATE, 'DD-MON-YY')),
                              'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-DATE4",
			 (SELECT DISTINCT CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (TO_DATE (APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "APP-DATE4",
			 '' AS "REVIEW-CODE1",
          '' AS "REVIEW-CODE2",
          '' AS "REVIEW-CODE3",
          '' AS "REVIEW-CODE4",

		  (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STATUS-REASON1",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STATUS-REASON2",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STATUS-REASON3",
          (SELECT DISTINCT CAST (STATUS_REASON AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STATUS-REASON4",
			 (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '001')
             AS "STAT-PER1",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '002')
             AS "STAT-PER2",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '003')
             AS "STAT-PER3",
          (SELECT DISTINCT CAST (STATUS_PERIOD AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND STATUS_PERIOD IS NOT NULL
                  AND GRANT_SN = '004')
             AS "STAT-PER4",
			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "DATE-ACCEPT1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "DATE-ACCEPT2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "DATE-ACCEPT3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (APPROVAL_CAPTURE_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "DATE-ACCEPT4",
			 (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '001')
             AS "ORIG-APP-DATE1",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '002')
             AS "ORIG-APP-DATE2",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '003')
             AS "ORIG-APP-DATE3",
          (SELECT DISTINCT
                  CAST (
                     TO_CHAR (
                        TO_DATE (
                           TO_DATE (ORIGINAL_APPLICATION_DATE, 'DD-MON-YY')),
                        'YYYYMMDD') AS VARCHAR2 (20))
						   FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_GRANTS_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND GRANT_SN IS NOT NULL
                  AND GRANT_SN = '004')
             AS "ORIG-APP-DATE4",
			 (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '001')
             AS "OLD-ID1",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '002')
             AS "OLD-ID2",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '003')
             AS "OLD-ID3",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '004')
             AS "OLD-ID4",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '005')
             AS "OLD-ID5",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '006')
             AS "OLD-ID6",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '007')
             AS "OLD-ID7",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '008')
             AS "OLD-ID8",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '009')
             AS "OLD-ID9",
          (SELECT DISTINCT CAST (OLD_NO AS VARCHAR2 (20))
             FROM SASSA_ARCHIVE.SOCPEN_OLD_ID_ARCHIVE
            WHERE     PENSION_NO = SP.PENSION_NO
                  AND OLD_SN IS NOT NULL
                  AND OLD_SN = '010')
             AS "OLD-ID10",
			 CAST (SBNKDT.BRANCH AS VARCHAR2 (20)) AS "BRANCH",
          CAST (SP.SURNAME AS VARCHAR2 (20)) AS "SURNAME",
          CAST (SP.NAME AS VARCHAR2 (20)) AS "NAME",
		  CAST (
                SA.STREET_ADDR_1
             || ' '
             || SA.STREET_ADDR_2
             || ' '
             || SA.STREET_ADDR_3
             || ' '
             || SA.STREET_ADDR_4 AS VARCHAR2 (20))
             AS "ADDRESS",
          CAST (
                SA.POSTAL_ADDR_1
             || ' '
             || SA.POSTAL_ADDR_2
             || ' '
             || SA.POSTAL_ADDR_3
             || ' '
             || SA.POSTAL_ADDR_4 AS VARCHAR2 (20))
             AS "POSTAL-ADDRESS",
          CAST (SA.RESIDENTIAL_POSTAL_CODE AS VARCHAR2 (20)) AS "POSTAL-CODE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "NO-KIDS",
		  CAST (SP.PAYMENT_METHOD AS VARCHAR2 (20)) AS "PAYMENT-METHOD",
          CAST (SP.SEX AS VARCHAR2 (20)) AS "SEX",
          CAST (SP.MARITAL_STATUS AS VARCHAR2 (20)) AS "MARITAL-STATUS",
		  CAST (
             TO_CHAR (TO_DATE (TO_DATE (SP.BIRTHDATE, 'DD-MON-YY')),
                      'YYYYMMDD') AS VARCHAR2 (20))
             AS "BIRTHDATE",
          CAST (SP.KIDS_INVOLVED AS VARCHAR2 (20)) AS "KIDS-INVOLVED",
		  CAST (SP.NO_CARE_DEP AS VARCHAR2 (20)) AS "NO-CARE-DEP",
          CAST (SBNKDT.ACCOUNT_NO AS VARCHAR2 (20)) AS "ACCOUNT-NO",
		  CAST (SP.SECONDARY_PAYPOINT AS VARCHAR2 (20)) AS "SEC-PAYPOINT",
          CAST (SP.PAYMENT_MODE AS VARCHAR2 (20)) AS "PAYMENT-MODE",
          '' AS "RE-REGISTERED",
		  CAST (SP.NO_KIDS_OWN AS VARCHAR2 (20)) AS "NO-KIDS-OWN",
          CAST (SP.NO_KIDS_OTHER AS VARCHAR2 (20)) AS "NO-KIDS-OTHER",
		  CAST (SUBSTR (SP.SECONDARY_PAYPOINT, 1, 1) AS VARCHAR2 (20)) AS "PROVINCE",
		  CAST (SP.TELEPHONE AS VARCHAR2 (20)) AS "TELNO",
          CAST (SP.CELL_NO AS VARCHAR2 (20)) AS "CELLNO",
		  CAST (SR.REVIEW_PERIOD AS VARCHAR2 (20)) AS "REVIEWPERIOD",
          CAST (SR.MEDICAL_REVIEW_PERIOD AS VARCHAR2 (20)) AS "MEDICALPERIOD",
          CAST (SR.LIFE_CERTIFICATE_PERIOD AS VARCHAR2 (20)) AS "LIFECERTPERIOD",
		  '' AS "DOCS-PRESENT"

		  FROM SASSA_ARCHIVE.SOCPEN_PERSONAL_ARCHIVE SP
          LEFT OUTER JOIN SASSA_ARCHIVE.SOCPEN_REVIEW_ARCHIVE SR
             ON SR.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA_ARCHIVE.SOCPEN_BANK_DETAILS_ARCHIVE SBNKDT
             ON SBNKDT.PENSION_NO = SP.PENSION_NO
          LEFT OUTER JOIN SASSA_ARCHIVE.SOCPEN_ADRES_ARCHIVE SA
             ON SA.PENSION_NO = SP.PENSION_NO
    WHERE SP.PENSION_NO IS NOT NULL
--AND PAYPOINT IS NOT NULL
--AND ROWNUM < 1000
--ORDER BY SURNAME DESC
    ;
  v_file  UTL_FILE.FILE_TYPE;
BEGIN
  v_file := UTL_FILE.FOPEN(location     => 'CSVS',
                           filename     => 'TO_SOCPENBRM_ARCHIVE.csv',
                           open_mode    => 'w',
                           max_linesize => 32767);
  FOR cur_rec IN c_data LOOP
    UTL_FILE.PUT_LINE(v_file,
						cur_rec."FILE_TYPE" || '~' ||
						cur_rec."REC_TYPE" || '~' ||
						cur_rec."PENSION-NO" || '~' ||
						cur_rec."PAYPOINT" || '~' ||
						cur_rec."GRANT-TYPE1" || '~' ||
						cur_rec."GRANT-TYPE2" || '~' ||
						cur_rec."GRANT-TYPE3" || '~' ||
						cur_rec."GRANT-TYPE4" || '~' ||
						cur_rec."PRIM-STATUS1" || '~' ||
						cur_rec."PRIM-STATUS2" || '~' ||
						cur_rec."PRIM-STATUS3" || '~' ||
						cur_rec."PRIM-STATUS4" || '~' ||
						cur_rec."SEC-STATUS1" || '~' ||
						cur_rec."SEC-STATUS2" || '~' ||
						cur_rec."SEC-STATUS3" || '~' ||
						cur_rec."SEC-STATUS4" || '~' ||
						cur_rec."STATUS-DATE1" || '~' ||
						cur_rec."STATUS-DATE2" || '~' ||
						cur_rec."STATUS-DATE3" || '~' ||
						cur_rec."STATUS-DATE4" || '~' ||
						cur_rec."APP-DATE1" || '~' ||
						cur_rec."APP-DATE2" || '~' ||
						cur_rec."APP-DATE3" || '~' ||
						cur_rec."APP-DATE4" || '~' ||
						cur_rec."REVIEW-CODE1" || '~' ||
						cur_rec."REVIEW-CODE2" || '~' ||
						cur_rec."REVIEW-CODE3" || '~' ||
						cur_rec."REVIEW-CODE4" || '~' ||
						cur_rec."STATUS-REASON1" || '~' ||
						cur_rec."STATUS-REASON2" || '~' ||
						cur_rec."STATUS-REASON3" || '~' ||
						cur_rec."STATUS-REASON4" || '~' ||
						cur_rec."STAT-PER1" || '~' ||
						cur_rec."STAT-PER2" || '~' ||
						cur_rec."STAT-PER3" || '~' ||
						cur_rec."STAT-PER4" || '~' ||
						cur_rec."DATE-ACCEPT1" || '~' ||
						cur_rec."DATE-ACCEPT2" || '~' ||
						cur_rec."DATE-ACCEPT3" || '~' ||
						cur_rec."DATE-ACCEPT4" || '~' ||
						cur_rec."ORIG-APP-DATE1" || '~' ||
						cur_rec."ORIG-APP-DATE2" || '~' ||
						cur_rec."ORIG-APP-DATE3" || '~' ||
						cur_rec."ORIG-APP-DATE4" || '~' ||
						cur_rec."OLD-ID1" || '~' ||
						cur_rec."OLD-ID2" || '~' ||
						cur_rec."OLD-ID3" || '~' ||
						cur_rec."OLD-ID4" || '~' ||
						cur_rec."OLD-ID5" || '~' ||
						cur_rec."OLD-ID6" || '~' ||
						cur_rec."OLD-ID7" || '~' ||
						cur_rec."OLD-ID8" || '~' ||
						cur_rec."OLD-ID9" || '~' ||
						cur_rec."OLD-ID10" || '~' ||
						cur_rec."BRANCH" || '~' ||
						cur_rec."SURNAME" || '~' ||
						cur_rec."NAME" || '~' ||
						cur_rec."ADDRESS" || '~' ||
						cur_rec."POSTAL-ADDRESS" || '~' ||
						cur_rec."POSTAL-CODE" || '~' ||
						cur_rec."NO-KIDS" || '~' ||
						cur_rec."PAYMENT-METHOD" || '~' ||
						cur_rec."SEX" || '~' ||
						cur_rec."MARITAL-STATUS" || '~' ||
						cur_rec."BIRTHDATE" || '~' ||
						cur_rec."KIDS-INVOLVED" || '~' ||
						cur_rec."NO-CARE-DEP" || '~' ||
						cur_rec."ACCOUNT-NO" || '~' ||
						cur_rec."SEC-PAYPOINT" || '~' ||
						cur_rec."PAYMENT-MODE" || '~' ||
						cur_rec."RE-REGISTERED" || '~' ||
						cur_rec."NO-KIDS-OWN" || '~' ||
						cur_rec."NO-KIDS-OTHER" || '~' ||
						cur_rec."PROVINCE" || '~' ||
						cur_rec."TELNO" || '~' ||
						cur_rec."CELLNO" || '~' ||
						cur_rec."REVIEWPERIOD" || '~' ||
						cur_rec."MEDICALPERIOD" || '~' ||
						cur_rec."LIFECERTPERIOD" || '~' ||
						cur_rec."DOCS-PRESENT");

  END LOOP;
  UTL_FILE.FCLOSE(v_file);

EXCEPTION
  WHEN OTHERS THEN
    UTL_FILE.FCLOSE(v_file);
    RAISE;
END;
/
--
-- SP_CREATESIMPLEOBJECT
--
CREATE OR REPLACE FUNCTION "SP_CREATESIMPLEOBJECT" 
(
	p_newid IN integer, 
	p_ownerid IN integer, 
	p_subtype IN integer, 
	p_namestr IN varchar2, 
	p_parentid IN integer, 
	p_creatorid IN integer, 
	p_languageCode IN varchar2, 
	p_createdate IN date, 
	p_groupid IN integer, 
	p_languageList IN varchar2,
	p_externalCreateDate IN date,
	p_externalModifyDate IN date,
	p_externalCreatorID IN integer,
	p_externalSourceID IN integer ) 
RETURN integer  
AS
	pragma autonomous_transaction;
	
	-- define the current time stamp 
	l_thisdate DTree.CreateDate%TYPE := p_createdate;
	
	--declare the delimeter between each language code
	l_Delimiter char(1) := ',';
	
	l_InsertString varchar2(500);
	l_StartPos integer;
	l_Length integer;
	l_languageCode varchar2(50);
	l_languageList varchar2(500) := p_languageList;
	
	l_gpermissions integer;
	l_wpermissions integer;
	l_aclcount integer;
BEGIN
	-- get the permissions from the parent to inherit
	SELECT GPermissions, WPermissions, ACLCount 
		INTO l_gpermissions, l_wpermissions, l_aclcount 
		FROM DTree 
		WHERE DataID = p_parentid;

	-- insert the object itself 
	INSERT INTO DTreeCore 
	( 
		OwnerID,
		ParentID,
		DataID,
		Name,
		OriginOwnerID,
		OriginDataID,
		UserID,
		GroupID,
		UPermissions,
		GPermissions,
		WPermissions,
		SPermissions,
		ACLCount,
		PermID,
		DataType,
		Reserved,
		SubType,
		CreatedBy,
		CreateDate,
		ModifyDate,
		MaxVers,
		ReservedBy,
		ReservedDate,
		VersionNum,
		DComment,
		DCategory,
		ExAtt1,
		ExAtt2,
		Ordering,
		Major,
		Minor,
		ReleaseRef,
		ChildCount,
		AssignedTo,
		DateAssigned,
		DateEffective,
		DateDue,
		DateExpiration,
		DateStarted,
		DateCompleted,
		Status,
		Priority,
		GIF,
		ExtendedData,
		Catalog,
		CacheExpiration,
		ModifiedBy,
		Deleted 
	) 
	VALUES
	(
		p_ownerid, 
		p_parentid,
		p_newid,
		p_namestr,
		0,
		0,
		p_creatorid,
		p_groupid,
		16777215,
		l_gpermissions,
		l_wpermissions,
		16777215,
		l_aclcount,
		NULL,
		NULL,
		0,
		p_subtype,
		p_creatorid,
		l_thisdate,
		l_thisdate,
		-1,
		0,
		NULL,
		0,
		'',
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		0,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		0,
		0, 
		p_creatorid,
		0
	);
    
    -- add the very base level perms
    INSERT INTO DTreeACL (OwnerID, ParentID, DataID, RightID, Permissions, ACLType, See)
	(
		SELECT p_ownerid, p_parentid, p_newid, p_creatorid, Permissions, ACLType, See
			FROM DTreeACL 
			WHERE OwnerID = p_ownerid
			AND DataID = p_parentid
			AND ACLType = 1
		UNION ALL
		SELECT p_ownerid, p_parentid, p_newid, p_groupid, Permissions, ACLType, See
			FROM DTreeACL 
			WHERE OwnerID = p_ownerid
			AND DataID = p_parentid
			AND ACLType = 2
		UNION ALL
		SELECT p_ownerid, p_parentid, p_newid, RightID, Permissions, ACLType, See
			FROM DTreeACL 
			WHERE OwnerID = p_ownerid
			AND DataID = p_parentid
			AND ACLType IN (3, 4)
		UNION ALL
		SELECT p_ownerid, p_parentid, p_newid, RightID, Permissions, ACLType, See
			FROM DTreeACL 
			WHERE OwnerID = p_ownerid
			AND DataID = p_parentid
			AND ACLType = 0
	);

	-- add to the ancestors tables 
	INSERT INTO DTreeAncestors ( DataID, AncestorID ) 
		SELECT p_newid AS DataID, AncestorID 
			FROM DTreeAncestors a 
			WHERE DataID = p_parentid 
		UNION ALL 
		SELECT p_newid AS DataID, p_newid AS AncestorID FROM DUAL;
        
	INSERT INTO DBrowseAncestors ( DataID, AncestorID ) 
		SELECT p_newid AS DataID, AncestorID 
			FROM DBrowseAncestors 
			WHERE DataID = p_parentid;
        	
	INSERT INTO DBrowseAncestors ( DataID, AncestorID ) VALUES ( p_newid, p_parentid );
        
	-- Insert the create for the object in notify
	INSERT INTO DTreeNotify ( NID, NType, DataID, VersionNum, OwnerID, Subtype ) 
		VALUES ( DTreeNotifySequence.NEXTVAL, 1, p_newid, 0, p_ownerid, p_subtype );
	    
	-- Insert the update for the parent object in notify
	INSERT INTO DTreeNotify VALUES ( DTreeNotifySequence.NEXTVAL, 7, p_parentid, 0, p_ownerid, p_subtype );

	--Parse the string and insert each language code into the DTreeMultilingual table and the WebNodesMeta_'xx' table 
	WHILE LENGTH( l_languageList ) > 0 LOOP
		l_StartPos := INSTR( l_languagelist, l_Delimiter );
		
		IF l_StartPos < 0 THEN
			l_StartPos := 0;
		END IF;
		
		l_Length := LENGTH( l_languageList ) - l_StartPos - 1;
		
		IF l_Length < 0 THEN
			l_Length := 0;
		END IF;
		
		IF l_StartPos > 0 THEN
			l_languageCode := SUBSTR( l_languageList, 1, l_StartPos - 1 );
			l_languageList := SUBSTR( l_languageList, l_StartPos + 1, LENGTH( l_languageList ) - l_StartPos );
		ELSE
			l_languageCode := p_languageList;
			l_languageList := '';
		END IF;
		
		l_InsertString := 'INSERT INTO WebNodesMeta_' || l_languageCode || ' ( DataID, Name ) VALUES ( ' || TO_CHAR( p_newid ) || ', ''' || p_nameStr || ''')';
		EXECUTE IMMEDIATE l_InsertString;
	END LOOP;

	INSERT INTO DTreeMultilingual ( DataID, LanguageCode, Name, DComment ) 
		VALUES ( p_newid, p_languageCode, p_namestr, NULL );

	-- If any external attribute is defined, then add a record to DTreeCoreExternalData 
	IF p_externalCreateDate IS NOT NULL OR p_externalModifyDate IS NOT NULL OR p_externalCreatorID IS NOT NULL OR p_externalSourceID IS NOT NULL THEN
		INSERT INTO DTreeCoreExternalData
		(
			DataID,
			VersionNum,
			ExternalCreateDate,
			ExternalModifyDate,
			ExternalCreatorID,
			ExternalSourceID
		)
		VALUES
		(
			p_newid,
			0,
			p_externalCreateDate,
			p_externalModifyDate,
			p_externalCreatorID,
			p_externalSourceID
		);
	END IF;

	-- update the parents count and modifydate
	UPDATE DTreeCore 
		SET ModifyDate = l_thisdate, ChildCount = ChildCount + 1 
		WHERE OwnerID = p_ownerid 
		AND DataID = p_newid;
		
	COMMIT;         
	RETURN 1;
--
EXCEPTION
	WHEN OTHERS THEN
		ROLLBACK;
		RAISE_APPLICATION_ERROR( -20001, 'Error - rolling back: ' || SQLERRM );
		RETURN 0;
END sp_CreateSimpleObject;
/
